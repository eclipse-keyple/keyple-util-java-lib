<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1454px" preserveAspectRatio="none" style="width:1247px;height:1454px;background:#FFFFFF;" version="1.1" viewBox="0 0 1247 1454" width="1247px" zoomAndPan="magnify"><defs><filter height="1" id="b12vg9owitc0t90" width="1" x="0" y="0"><feFlood flood-color="#FFFF00" result="flood"/><feComposite in="SourceGraphic" in2="flood" operator="over"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacing" textLength="379" x="427.5" y="18.6855">Keyple - keyple-util-java-lib - 2.1.+ (15/03/2022)</text><rect fill="#DDDDDD" height="62.8281" rx="5" ry="5" style="stroke:#000000;stroke-width:1.0;" width="198" x="517.5" y="30.6406"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="88" x="523.5" y="50.1738">Colors legend</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="615.5" y="50.1738">:</text><ellipse cx="529" cy="63.3594" fill="#000000" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:0.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="536.5" y="67.7832">External API references</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="688.5" y="67.7832">:</text><rect fill="#000000" height="3.5" style="stroke:#000000;stroke-width:0.0;" width="3.5" x="544.5" y="80.4688"/><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="160" x="549.5" y="85.3926">com.google.code.gson</text><!--MD5=[3e81cc6ee7da4fa8b6adc12b329096f6]
cluster util--><polygon fill="#F8F9F9" points="16,108.4688,213,108.4688,220,132.0781,1230,132.0781,1230,1447.9688,16,1447.9688,16,108.4688" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="16" x2="220" y1="132.0781" y2="132.0781"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="191" x="20" y="125.002">org.eclipse.keyple.core.util</text><!--MD5=[4ac75f36695ece63879c728112de416c]
cluster json--><polygon fill="#F2F3F4" points="40,789.9688,76,789.9688,83,813.5781,1206,813.5781,1206,1423.9688,40,1423.9688,40,789.9688" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="40" x2="83" y1="813.5781" y2="813.5781"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="30" x="44" y="806.502">json</text><!--MD5=[59e9faf83e5ffb743ef5750f57e8e967]
cluster protocol--><polygon fill="#F2F3F4" points="668,152.4688,733,152.4688,740,176.0781,1206,176.0781,1206,335.4688,668,335.4688,668,152.4688" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="668" x2="740" y1="176.0781" y2="176.0781"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="59" x="672" y="169.002">protocol</text><!--MD5=[748d96b9802ee0d94a77604226d4f903]
class Assert--><rect codeLine="54" fill="#FEFECE" height="200.1953" id="Assert" style="stroke:#D4AC0D;stroke-width:1.5;" width="387" x="262.5" y="153.9688"/><ellipse cx="415.75" cy="169.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M417.75,166.4688 Q417.9531,165.9688 418.1875,165.7188 Q418.4219,165.4688 418.6875,165.4688 Q419.1563,165.4688 419.4531,165.75 Q419.75,166.0313 419.75,166.6875 L419.75,168.25 Q419.75,168.9063 419.4688,169.1875 Q419.1875,169.4688 418.75,169.4688 Q418.3594,169.4688 418.1094,169.2969 Q417.8594,169.125 417.75,168.6719 Q417.7031,168.3594 417.5313,168.1875 Q417.2188,167.8594 416.6563,167.6719 Q416.0938,167.4688 415.5313,167.4688 Q414.8281,167.4688 414.2344,167.75 Q413.6563,168.0313 413.2031,168.6563 Q412.75,169.2813 412.75,170.1406 L412.75,171.0625 Q412.75,172.0938 413.5938,172.7813 Q414.4375,173.4688 415.9375,173.4688 Q416.8281,173.4688 417.4531,173.2656 Q417.8125,173.1563 418.2188,172.7969 Q418.4844,172.5938 418.625,172.5313 Q418.7656,172.4688 418.9375,172.4688 Q419.2656,172.4688 419.5,172.7344 Q419.75,172.9844 419.75,173.3438 Q419.75,173.6875 419.4063,174.0938 Q418.9063,174.6875 418.1094,175.0156 Q417.0625,175.4688 415.7813,175.4688 Q414.2813,175.4688 413.0781,174.875 Q412.1094,174.4063 411.4219,173.3906 Q410.75,172.375 410.75,171.1719 L410.75,170.0781 Q410.75,168.8281 411.3438,167.7344 Q411.9531,166.6406 413,166.0625 Q414.0625,165.4688 415.25,165.4688 Q415.9688,165.4688 416.5938,165.7188 Q417.2188,165.9688 417.75,166.4688 Z " fill="#000000"/><ellipse cx="441.25" cy="169.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="24" x="447.25" y="174.8789">final</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="34" x="474.25" y="174.8789">Assert</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="263.5" x2="648.5" y1="185.9688" y2="185.9688"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="263.5" x2="648.5" y1="193.9688" y2="193.9688"/><ellipse cx="273.5" cy="204.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="103" x="282.5" y="209.3877">Assert getInstance ()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="285.5" y="223.2236"/><ellipse cx="273.5" cy="232.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="282.5" y="237.0596">Assert notNull (Object obj, String name)</text><ellipse cx="273.5" cy="246.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="199" x="282.5" y="250.8955">Assert notEmpty (String obj, String name)</text><ellipse cx="273.5" cy="260.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="311" x="282.5" y="264.7314">Assert notEmpty (Collection&lt;? extends Object&gt; obj, String name)</text><ellipse cx="273.5" cy="274.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="198" x="282.5" y="278.5674">Assert notEmpty (byte[] obj, String name)</text><ellipse cx="273.5" cy="287.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="225" x="282.5" y="292.4033">Assert isTrue (Boolean condition, String name)</text><ellipse cx="273.5" cy="301.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="282.5" y="306.2393">Assert greaterOrEqual (Integer number, int minValue, String name)</text><ellipse cx="273.5" cy="315.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="282.5" y="320.0752">Assert isEqual (Integer number, int value, String name)</text><ellipse cx="273.5" cy="329.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="361" x="282.5" y="333.9111">Assert isInRange (Integer number, int minValue, int maxValue, String name)</text><ellipse cx="273.5" cy="343.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="214" x="282.5" y="347.7471">Assert isHexString (String hex, String name)</text><!--MD5=[27f29ba09c13b8ede23502b37e39f025]
class ByteArrayUtil--><rect codeLine="67" fill="#FEFECE" height="352.3906" id="ByteArrayUtil" style="stroke:#D4AC0D;stroke-width:1.5;" width="269" x="46.5" y="413.9688"/><ellipse cx="122.25" cy="429.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M124.25,426.4688 Q124.4531,425.9688 124.6875,425.7188 Q124.9219,425.4688 125.1875,425.4688 Q125.6563,425.4688 125.9531,425.75 Q126.25,426.0313 126.25,426.6875 L126.25,428.25 Q126.25,428.9063 125.9688,429.1875 Q125.6875,429.4688 125.25,429.4688 Q124.8594,429.4688 124.6094,429.2969 Q124.3594,429.125 124.25,428.6719 Q124.2031,428.3594 124.0313,428.1875 Q123.7188,427.8594 123.1563,427.6719 Q122.5938,427.4688 122.0313,427.4688 Q121.3281,427.4688 120.7344,427.75 Q120.1563,428.0313 119.7031,428.6563 Q119.25,429.2813 119.25,430.1406 L119.25,431.0625 Q119.25,432.0938 120.0938,432.7813 Q120.9375,433.4688 122.4375,433.4688 Q123.3281,433.4688 123.9531,433.2656 Q124.3125,433.1563 124.7188,432.7969 Q124.9844,432.5938 125.125,432.5313 Q125.2656,432.4688 125.4375,432.4688 Q125.7656,432.4688 126,432.7344 Q126.25,432.9844 126.25,433.3438 Q126.25,433.6875 125.9063,434.0938 Q125.4063,434.6875 124.6094,435.0156 Q123.5625,435.4688 122.2813,435.4688 Q120.7813,435.4688 119.5781,434.875 Q118.6094,434.4063 117.9219,433.3906 Q117.25,432.375 117.25,431.1719 L117.25,430.0781 Q117.25,428.8281 117.8438,427.7344 Q118.4531,426.6406 119.5,426.0625 Q120.5625,425.4688 121.75,425.4688 Q122.4688,425.4688 123.0938,425.7188 Q123.7188,425.9688 124.25,426.4688 Z " fill="#000000"/><ellipse cx="147.75" cy="429.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="24" x="153.75" y="434.8789">final</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="71" x="180.75" y="434.8789">ByteArrayUtil</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="47.5" x2="314.5" y1="445.9688" y2="445.9688"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="47.5" x2="314.5" y1="453.9688" y2="453.9688"/><ellipse cx="57.5" cy="464.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="180" x="66.5" y="469.3877">boolean isValidHexString (String hex)</text><ellipse cx="57.5" cy="478.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="184" x="66.5" y="483.2236">String normalizeHexString (String hex)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="69.5" y="497.0596"/><ellipse cx="57.5" cy="506.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="131" x="66.5" y="510.8955">byte[] fromHex (String hex)</text><ellipse cx="57.5" cy="520.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="136" x="66.5" y="524.7314">byte hexToByte (String hex)</text><ellipse cx="57.5" cy="534.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="144" x="66.5" y="538.5674">short hexToShort (String hex)</text><ellipse cx="57.5" cy="547.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="115" x="66.5" y="552.4033">int hexToInt (String hex)</text><ellipse cx="57.5" cy="561.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="137" x="66.5" y="566.2393">long hexToLong (String hex)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="69.5" y="580.0752"/><ellipse cx="57.5" cy="589.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="121" x="66.5" y="593.9111">String toHex (byte[] data)</text><ellipse cx="57.5" cy="603.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="108" x="66.5" y="607.7471">String toHex (byte val)</text><ellipse cx="57.5" cy="617.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="112" x="66.5" y="621.583">String toHex (short val)</text><ellipse cx="57.5" cy="631" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="98" x="66.5" y="635.4189">String toHex (int val)</text><ellipse cx="57.5" cy="644.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="107" x="66.5" y="649.2549">String toHex (long val)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="69.5" y="663.0908"/><ellipse cx="57.5" cy="672.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="201" x="66.5" y="676.9268">int twoBytesToInt (byte[] bytes, int offset)</text><ellipse cx="57.5" cy="686.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="234" x="66.5" y="690.7627">int twoBytesSignedToInt (byte[] bytes, int offset)</text><ellipse cx="57.5" cy="700.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="207" x="66.5" y="704.5986">int threeBytesToInt (byte[] bytes, int offset)</text><ellipse cx="57.5" cy="714.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="240" x="66.5" y="718.4346">int threeBytesSignedToInt (byte[] bytes, int offset)</text><ellipse cx="57.5" cy="727.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="202" x="66.5" y="732.2705">int fourBytesToInt (byte[] bytes, int offset)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="69.5" y="746.1064"/><ellipse cx="57.5" cy="755.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="243" x="66.5" y="759.9424">byte[] extract (byte[] src, int bitOffset, int nbBytes)</text><!--MD5=[458b3a9396e0ca5416a37f6d6326ccaf]
class ApduUtil--><rect codeLine="91" fill="#FEFECE" height="89.5078" id="ApduUtil" style="stroke:#D4AC0D;stroke-width:1.5;" width="359" x="350.5" y="544.9688"/><ellipse cx="483.25" cy="560.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M485.25,557.4688 Q485.4531,556.9688 485.6875,556.7188 Q485.9219,556.4688 486.1875,556.4688 Q486.6563,556.4688 486.9531,556.75 Q487.25,557.0313 487.25,557.6875 L487.25,559.25 Q487.25,559.9063 486.9688,560.1875 Q486.6875,560.4688 486.25,560.4688 Q485.8594,560.4688 485.6094,560.2969 Q485.3594,560.125 485.25,559.6719 Q485.2031,559.3594 485.0313,559.1875 Q484.7188,558.8594 484.1563,558.6719 Q483.5938,558.4688 483.0313,558.4688 Q482.3281,558.4688 481.7344,558.75 Q481.1563,559.0313 480.7031,559.6563 Q480.25,560.2813 480.25,561.1406 L480.25,562.0625 Q480.25,563.0938 481.0938,563.7813 Q481.9375,564.4688 483.4375,564.4688 Q484.3281,564.4688 484.9531,564.2656 Q485.3125,564.1563 485.7188,563.7969 Q485.9844,563.5938 486.125,563.5313 Q486.2656,563.4688 486.4375,563.4688 Q486.7656,563.4688 487,563.7344 Q487.25,563.9844 487.25,564.3438 Q487.25,564.6875 486.9063,565.0938 Q486.4063,565.6875 485.6094,566.0156 Q484.5625,566.4688 483.2813,566.4688 Q481.7813,566.4688 480.5781,565.875 Q479.6094,565.4063 478.9219,564.3906 Q478.25,563.375 478.25,562.1719 L478.25,561.0781 Q478.25,559.8281 478.8438,558.7344 Q479.4531,557.6406 480.5,557.0625 Q481.5625,556.4688 482.75,556.4688 Q483.4688,556.4688 484.0938,556.7188 Q484.7188,556.9688 485.25,557.4688 Z " fill="#000000"/><ellipse cx="508.75" cy="560.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="24" x="514.75" y="565.8789">final</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="47" x="541.75" y="565.8789">ApduUtil</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="351.5" x2="708.5" y1="576.9688" y2="576.9688"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="351.5" x2="708.5" y1="584.9688" y2="584.9688"/><ellipse cx="361.5" cy="595.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="333" x="370.5" y="600.3877">byte[] build (byte cla, byte ins, byte p1, byte p2, byte[] dataIn, Byte le)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="373.5" y="614.2236"/><ellipse cx="361.5" cy="623.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="192" x="370.5" y="628.0596">boolean isCase4 (byte[] apduCommand)</text><!--MD5=[967b5bdf980b1f0d408075c95cfc8699]
class BerTlvUtil--><rect codeLine="96" fill="#FEFECE" height="103.3438" id="BerTlvUtil" style="stroke:#D4AC0D;stroke-width:1.5;" width="391" x="744.5" y="538.4688"/><ellipse cx="903.75" cy="554.4688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M905.75,550.9688 Q905.9531,550.4688 906.1875,550.2188 Q906.4219,549.9688 906.6875,549.9688 Q907.1563,549.9688 907.4531,550.25 Q907.75,550.5313 907.75,551.1875 L907.75,552.75 Q907.75,553.4063 907.4688,553.6875 Q907.1875,553.9688 906.75,553.9688 Q906.3594,553.9688 906.1094,553.7969 Q905.8594,553.625 905.75,553.1719 Q905.7031,552.8594 905.5313,552.6875 Q905.2188,552.3594 904.6563,552.1719 Q904.0938,551.9688 903.5313,551.9688 Q902.8281,551.9688 902.2344,552.25 Q901.6563,552.5313 901.2031,553.1563 Q900.75,553.7813 900.75,554.6406 L900.75,555.5625 Q900.75,556.5938 901.5938,557.2813 Q902.4375,557.9688 903.9375,557.9688 Q904.8281,557.9688 905.4531,557.7656 Q905.8125,557.6563 906.2188,557.2969 Q906.4844,557.0938 906.625,557.0313 Q906.7656,556.9688 906.9375,556.9688 Q907.2656,556.9688 907.5,557.2344 Q907.75,557.4844 907.75,557.8438 Q907.75,558.1875 907.4063,558.5938 Q906.9063,559.1875 906.1094,559.5156 Q905.0625,559.9688 903.7813,559.9688 Q902.2813,559.9688 901.0781,559.375 Q900.1094,558.9063 899.4219,557.8906 Q898.75,556.875 898.75,555.6719 L898.75,554.5781 Q898.75,553.3281 899.3438,552.2344 Q899.9531,551.1406 901,550.5625 Q902.0625,549.9688 903.25,549.9688 Q903.9688,549.9688 904.5938,550.2188 Q905.2188,550.4688 905.75,550.9688 Z " fill="#000000"/><ellipse cx="929.25" cy="553.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="53" x="935.25" y="559.3789">BerTlvUtil</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="745.5" x2="1134.5" y1="570.4688" y2="570.4688"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="745.5" x2="1134.5" y1="578.4688" y2="578.4688"/><ellipse cx="755.5" cy="589.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="365" x="764.5" y="593.8877">Map&lt;Integer, byte[]&gt; parseSimple (byte[] tlvStructure, boolean primitiveOnly)</text><ellipse cx="755.5" cy="603.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="363" x="764.5" y="607.7236">Map&lt;Integer, List&lt;byte[]&gt;&gt; parse (byte[] tlvStructure, boolean primitiveOnly)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="767.5" y="621.5596"/><ellipse cx="755.5" cy="630.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="156" x="764.5" y="635.3955">boolean isConstructed (int tagId)</text><!--MD5=[ff1fef1d5f830c31212d01e346df5a91]
class JsonUtil--><rect codeLine="103" fill="#FEFECE" height="117.1797" id="JsonUtil" style="stroke:#D4AC0D;stroke-width:1.5;" width="277" x="56.5" y="844.4688"/><ellipse cx="149.75" cy="860.4688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M151.75,856.9688 Q151.9531,856.4688 152.1875,856.2188 Q152.4219,855.9688 152.6875,855.9688 Q153.1563,855.9688 153.4531,856.25 Q153.75,856.5313 153.75,857.1875 L153.75,858.75 Q153.75,859.4063 153.4688,859.6875 Q153.1875,859.9688 152.75,859.9688 Q152.3594,859.9688 152.1094,859.7969 Q151.8594,859.625 151.75,859.1719 Q151.7031,858.8594 151.5313,858.6875 Q151.2188,858.3594 150.6563,858.1719 Q150.0938,857.9688 149.5313,857.9688 Q148.8281,857.9688 148.2344,858.25 Q147.6563,858.5313 147.2031,859.1563 Q146.75,859.7813 146.75,860.6406 L146.75,861.5625 Q146.75,862.5938 147.5938,863.2813 Q148.4375,863.9688 149.9375,863.9688 Q150.8281,863.9688 151.4531,863.7656 Q151.8125,863.6563 152.2188,863.2969 Q152.4844,863.0938 152.625,863.0313 Q152.7656,862.9688 152.9375,862.9688 Q153.2656,862.9688 153.5,863.2344 Q153.75,863.4844 153.75,863.8438 Q153.75,864.1875 153.4063,864.5938 Q152.9063,865.1875 152.1094,865.5156 Q151.0625,865.9688 149.7813,865.9688 Q148.2813,865.9688 147.0781,865.375 Q146.1094,864.9063 145.4219,863.8906 Q144.75,862.875 144.75,861.6719 L144.75,860.5781 Q144.75,859.3281 145.3438,858.2344 Q145.9531,857.1406 147,856.5625 Q148.0625,855.9688 149.25,855.9688 Q149.9688,855.9688 150.5938,856.2188 Q151.2188,856.4688 151.75,856.9688 Z " fill="#000000"/><ellipse cx="175.25" cy="859.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="24" x="181.25" y="865.3789">final</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="44" x="208.25" y="865.3789">JsonUtil</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="57.5" x2="332.5" y1="876.4688" y2="876.4688"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="57.5" x2="332.5" y1="884.4688" y2="884.4688"/><ellipse cx="67.5" cy="895.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="26" x="76.5" y="899.8877">Gson</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="58" x="105.5" y="899.8877">getParser ()</text><ellipse cx="67.5" cy="909.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="251" x="76.5" y="913.7236">void registerTypeAdapter (Class&lt;?&gt; matchingClass,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="200" x="100.5" y="927.5596">Object adapter, boolean withSubclasses)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="79.5" y="941.3955"/><ellipse cx="67.5" cy="950.8125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="122" x="76.5" y="955.2314">String toJson (Object obj)</text><!--MD5=[3d84c5190c7a3821707931f3b8039d88]
class BodyError--><rect codeLine="110" fill="#FEFECE" height="103.3438" id="BodyError" style="stroke:#D4AC0D;stroke-width:1.5;" width="183" x="368.5" y="851.4688"/><ellipse cx="422.75" cy="867.4688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M424.75,863.9688 Q424.9531,863.4688 425.1875,863.2188 Q425.4219,862.9688 425.6875,862.9688 Q426.1563,862.9688 426.4531,863.25 Q426.75,863.5313 426.75,864.1875 L426.75,865.75 Q426.75,866.4063 426.4688,866.6875 Q426.1875,866.9688 425.75,866.9688 Q425.3594,866.9688 425.1094,866.7969 Q424.8594,866.625 424.75,866.1719 Q424.7031,865.8594 424.5313,865.6875 Q424.2188,865.3594 423.6563,865.1719 Q423.0938,864.9688 422.5313,864.9688 Q421.8281,864.9688 421.2344,865.25 Q420.6563,865.5313 420.2031,866.1563 Q419.75,866.7813 419.75,867.6406 L419.75,868.5625 Q419.75,869.5938 420.5938,870.2813 Q421.4375,870.9688 422.9375,870.9688 Q423.8281,870.9688 424.4531,870.7656 Q424.8125,870.6563 425.2188,870.2969 Q425.4844,870.0938 425.625,870.0313 Q425.7656,869.9688 425.9375,869.9688 Q426.2656,869.9688 426.5,870.2344 Q426.75,870.4844 426.75,870.8438 Q426.75,871.1875 426.4063,871.5938 Q425.9063,872.1875 425.1094,872.5156 Q424.0625,872.9688 422.7813,872.9688 Q421.2813,872.9688 420.0781,872.375 Q419.1094,871.9063 418.4219,870.8906 Q417.75,869.875 417.75,868.6719 L417.75,867.5781 Q417.75,866.3281 418.3438,865.2344 Q418.9531,864.1406 420,863.5625 Q421.0625,862.9688 422.25,862.9688 Q422.9688,862.9688 423.5938,863.2188 Q424.2188,863.4688 424.75,863.9688 Z " fill="#000000"/><ellipse cx="448.25" cy="866.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="55" x="454.25" y="872.3789">BodyError</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="369.5" x2="550.5" y1="883.4688" y2="883.4688"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="369.5" x2="550.5" y1="891.4688" y2="891.4688"/><ellipse cx="379.5" cy="902.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="388.5" y="906.8877">BodyError (Exception exception)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="391.5" y="920.7236"/><ellipse cx="379.5" cy="930.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="82" x="388.5" y="934.5596">String getCode ()</text><ellipse cx="379.5" cy="943.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="123" x="388.5" y="948.3955">Exception getException ()</text><!--MD5=[9a218190a85a7a5cf1f408f9962c53bf]
class BodyErrorJsonDeserializer--><rect codeLine="116" fill="#FEFECE" height="111.5313" id="BodyErrorJsonDeserializer" style="stroke:#D4AC0D;stroke-width:1.5;" width="295" x="586.5" y="846.9688"/><ellipse cx="629.4" cy="867.0625" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M631.4,863.5625 Q631.6031,863.0625 631.8375,862.8125 Q632.0719,862.5625 632.3375,862.5625 Q632.8063,862.5625 633.1031,862.8438 Q633.4,863.125 633.4,863.7813 L633.4,865.3438 Q633.4,866 633.1188,866.2813 Q632.8375,866.5625 632.4,866.5625 Q632.0094,866.5625 631.7594,866.3906 Q631.5094,866.2188 631.4,865.7656 Q631.3531,865.4531 631.1813,865.2813 Q630.8688,864.9531 630.3063,864.7656 Q629.7438,864.5625 629.1813,864.5625 Q628.4781,864.5625 627.8844,864.8438 Q627.3063,865.125 626.8531,865.75 Q626.4,866.375 626.4,867.2344 L626.4,868.1563 Q626.4,869.1875 627.2438,869.875 Q628.0875,870.5625 629.5875,870.5625 Q630.4781,870.5625 631.1031,870.3594 Q631.4625,870.25 631.8688,869.8906 Q632.1344,869.6875 632.275,869.625 Q632.4156,869.5625 632.5875,869.5625 Q632.9156,869.5625 633.15,869.8281 Q633.4,870.0781 633.4,870.4375 Q633.4,870.7813 633.0563,871.1875 Q632.5563,871.7813 631.7594,872.1094 Q630.7125,872.5625 629.4313,872.5625 Q627.9313,872.5625 626.7281,871.9688 Q625.7594,871.5 625.0719,870.4844 Q624.4,869.4688 624.4,868.2656 L624.4,867.1719 Q624.4,865.9219 624.9938,864.8281 Q625.6031,863.7344 626.65,863.1563 Q627.7125,862.5625 628.9,862.5625 Q629.6188,862.5625 630.2438,862.8125 Q630.8688,863.0625 631.4,863.5625 Z " fill="#000000"/><ellipse cx="654.6" cy="866.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="660.6" y="864.4258">&lt;&lt;</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="162" x="674.6" y="864.4258">JsonDeserializer&lt;BodyError&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="836.6" y="864.4258">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="148" x="681.6" y="879.5195">BodyErrorJsonDeserializer</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="587.5" x2="880.5" y1="887.1563" y2="887.1563"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="587.5" x2="880.5" y1="895.1563" y2="895.1563"/><ellipse cx="597.5" cy="906.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="140" x="606.5" y="910.5752">BodyErrorJsonDeserializer ()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="609.5" y="924.4111"/><ellipse cx="597.5" cy="933.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="606.5" y="938.2471">BodyError deserialize (</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="717.5" y="938.2471">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="23" x="780.5" y="938.2471">json,</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="806.5" y="938.2471">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="42" x="833.5" y="938.2471">typeOfT,</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="630.5" y="952.083">JsonDeserializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="763.5" y="952.083">context)</text><!--MD5=[f0f8c8dfcaa5a8f8c3b99a1fa7726780]
class ByteArrayJsonAdapter--><rect codeLine="122" fill="#FEFECE" height="154.2969" id="ByteArrayJsonAdapter" style="stroke:#D4AC0D;stroke-width:1.5;" width="273" x="916.5" y="825.9688"/><ellipse cx="960.75" cy="853.6094" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M962.75,850.1094 Q962.9531,849.6094 963.1875,849.3594 Q963.4219,849.1094 963.6875,849.1094 Q964.1563,849.1094 964.4531,849.3906 Q964.75,849.6719 964.75,850.3281 L964.75,851.8906 Q964.75,852.5469 964.4688,852.8281 Q964.1875,853.1094 963.75,853.1094 Q963.3594,853.1094 963.1094,852.9375 Q962.8594,852.7656 962.75,852.3125 Q962.7031,852 962.5313,851.8281 Q962.2188,851.5 961.6563,851.3125 Q961.0938,851.1094 960.5313,851.1094 Q959.8281,851.1094 959.2344,851.3906 Q958.6563,851.6719 958.2031,852.2969 Q957.75,852.9219 957.75,853.7813 L957.75,854.7031 Q957.75,855.7344 958.5938,856.4219 Q959.4375,857.1094 960.9375,857.1094 Q961.8281,857.1094 962.4531,856.9063 Q962.8125,856.7969 963.2188,856.4375 Q963.4844,856.2344 963.625,856.1719 Q963.7656,856.1094 963.9375,856.1094 Q964.2656,856.1094 964.5,856.375 Q964.75,856.625 964.75,856.9844 Q964.75,857.3281 964.4063,857.7344 Q963.9063,858.3281 963.1094,858.6563 Q962.0625,859.1094 960.7813,859.1094 Q959.2813,859.1094 958.0781,858.5156 Q957.1094,858.0469 956.4219,857.0313 Q955.75,856.0156 955.75,854.8125 L955.75,853.7188 Q955.75,852.4688 956.3438,851.375 Q956.9531,850.2813 958,849.7031 Q959.0625,849.1094 960.25,849.1094 Q960.9688,849.1094 961.5938,849.3594 Q962.2188,849.6094 962.75,850.1094 Z " fill="#000000"/><ellipse cx="986.25" cy="853.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="999.25" y="843.4258">&lt;&lt;</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="123" x="1013.25" y="843.4258">JsonSerializer&lt;byte[]&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="1136.25" y="843.4258">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="992.25" y="858.5195">&lt;&lt;</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="137" x="1006.25" y="858.5195">JsonDeserializer&lt;byte[]&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="1143.25" y="858.5195">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="122" x="1013.75" y="873.6133">ByteArrayJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="917.5" x2="1188.5" y1="881.25" y2="881.25"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="917.5" x2="1188.5" y1="889.25" y2="889.25"/><ellipse cx="927.5" cy="900.25" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="123" x="936.5" y="904.6689">ByteArrayJsonAdapter ()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="939.5" y="918.5049"/><ellipse cx="927.5" cy="927.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="936.5" y="932.3408">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="999.5" y="932.3408">serialize (byte[] src,</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="1098.5" y="932.3408">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="1125.5" y="932.3408">typeOfSrc,</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="960.5" y="946.1768">JsonSerializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="1081.5" y="946.1768">context)</text><ellipse cx="927.5" cy="955.5938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="89" x="936.5" y="960.0127">byte[] deserialize (</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="1025.5" y="960.0127">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="23" x="1088.5" y="960.0127">json,</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="1114.5" y="960.0127">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="42" x="1141.5" y="960.0127">typeOfT,</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="960.5" y="973.8486">JsonDeserializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="1093.5" y="973.8486">context)</text><!--MD5=[52cc22ead8f9cede3c7076eefab9a46c]
class ByteJsonAdapter--><rect codeLine="130" fill="#FEFECE" height="154.2969" id="ByteJsonAdapter" style="stroke:#D4AC0D;stroke-width:1.5;" width="268" x="300" y="1039.9688"/><ellipse cx="344.75" cy="1067.6094" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M346.75,1064.1094 Q346.9531,1063.6094 347.1875,1063.3594 Q347.4219,1063.1094 347.6875,1063.1094 Q348.1563,1063.1094 348.4531,1063.3906 Q348.75,1063.6719 348.75,1064.3281 L348.75,1065.8906 Q348.75,1066.5469 348.4688,1066.8281 Q348.1875,1067.1094 347.75,1067.1094 Q347.3594,1067.1094 347.1094,1066.9375 Q346.8594,1066.7656 346.75,1066.3125 Q346.7031,1066 346.5313,1065.8281 Q346.2188,1065.5 345.6563,1065.3125 Q345.0938,1065.1094 344.5313,1065.1094 Q343.8281,1065.1094 343.2344,1065.3906 Q342.6563,1065.6719 342.2031,1066.2969 Q341.75,1066.9219 341.75,1067.7813 L341.75,1068.7031 Q341.75,1069.7344 342.5938,1070.4219 Q343.4375,1071.1094 344.9375,1071.1094 Q345.8281,1071.1094 346.4531,1070.9063 Q346.8125,1070.7969 347.2188,1070.4375 Q347.4844,1070.2344 347.625,1070.1719 Q347.7656,1070.1094 347.9375,1070.1094 Q348.2656,1070.1094 348.5,1070.375 Q348.75,1070.625 348.75,1070.9844 Q348.75,1071.3281 348.4063,1071.7344 Q347.9063,1072.3281 347.1094,1072.6563 Q346.0625,1073.1094 344.7813,1073.1094 Q343.2813,1073.1094 342.0781,1072.5156 Q341.1094,1072.0469 340.4219,1071.0313 Q339.75,1070.0156 339.75,1068.8125 L339.75,1067.7188 Q339.75,1066.4688 340.3438,1065.375 Q340.9531,1064.2813 342,1063.7031 Q343.0625,1063.1094 344.25,1063.1094 Q344.9688,1063.1094 345.5938,1063.3594 Q346.2188,1063.6094 346.75,1064.1094 Z " fill="#000000"/><ellipse cx="370.25" cy="1067.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="383.25" y="1057.4258">&lt;&lt;</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="117" x="397.25" y="1057.4258">JsonSerializer&lt;Byte&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="514.25" y="1057.4258">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="376.25" y="1072.5195">&lt;&lt;</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="131" x="390.25" y="1072.5195">JsonDeserializer&lt;Byte&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="521.25" y="1072.5195">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="93" x="409.25" y="1087.6133">ByteJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="301" x2="567" y1="1095.25" y2="1095.25"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="301" x2="567" y1="1103.25" y2="1103.25"/><ellipse cx="311" cy="1114.25" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="320" y="1118.6689">ByteJsonAdapter ()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="323" y="1132.5049"/><ellipse cx="311" cy="1141.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="320" y="1146.3408">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="91" x="383" y="1146.3408">serialize (Byte src,</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="477" y="1146.3408">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="504" y="1146.3408">typeOfSrc,</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="344" y="1160.1768">JsonSerializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="465" y="1160.1768">context)</text><ellipse cx="311" cy="1169.5938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="320" y="1174.0127">Byte deserialize (</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="404" y="1174.0127">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="23" x="467" y="1174.0127">json,</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="493" y="1174.0127">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="42" x="520" y="1174.0127">typeOfT,</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="344" y="1187.8486">JsonDeserializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="477" y="1187.8486">context)</text><!--MD5=[514e1602104e75c9a95a46a815824089]
class ShortJsonAdapter--><rect codeLine="138" fill="#FEFECE" height="154.2969" id="ShortJsonAdapter" style="stroke:#D4AC0D;stroke-width:1.5;" width="272" x="603" y="1039.9688"/><ellipse cx="647.25" cy="1067.6094" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M649.25,1064.1094 Q649.4531,1063.6094 649.6875,1063.3594 Q649.9219,1063.1094 650.1875,1063.1094 Q650.6563,1063.1094 650.9531,1063.3906 Q651.25,1063.6719 651.25,1064.3281 L651.25,1065.8906 Q651.25,1066.5469 650.9688,1066.8281 Q650.6875,1067.1094 650.25,1067.1094 Q649.8594,1067.1094 649.6094,1066.9375 Q649.3594,1066.7656 649.25,1066.3125 Q649.2031,1066 649.0313,1065.8281 Q648.7188,1065.5 648.1563,1065.3125 Q647.5938,1065.1094 647.0313,1065.1094 Q646.3281,1065.1094 645.7344,1065.3906 Q645.1563,1065.6719 644.7031,1066.2969 Q644.25,1066.9219 644.25,1067.7813 L644.25,1068.7031 Q644.25,1069.7344 645.0938,1070.4219 Q645.9375,1071.1094 647.4375,1071.1094 Q648.3281,1071.1094 648.9531,1070.9063 Q649.3125,1070.7969 649.7188,1070.4375 Q649.9844,1070.2344 650.125,1070.1719 Q650.2656,1070.1094 650.4375,1070.1094 Q650.7656,1070.1094 651,1070.375 Q651.25,1070.625 651.25,1070.9844 Q651.25,1071.3281 650.9063,1071.7344 Q650.4063,1072.3281 649.6094,1072.6563 Q648.5625,1073.1094 647.2813,1073.1094 Q645.7813,1073.1094 644.5781,1072.5156 Q643.6094,1072.0469 642.9219,1071.0313 Q642.25,1070.0156 642.25,1068.8125 L642.25,1067.7188 Q642.25,1066.4688 642.8438,1065.375 Q643.4531,1064.2813 644.5,1063.7031 Q645.5625,1063.1094 646.75,1063.1094 Q647.4688,1063.1094 648.0938,1063.3594 Q648.7188,1063.6094 649.25,1064.1094 Z " fill="#000000"/><ellipse cx="672.75" cy="1067.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="685.75" y="1057.4258">&lt;&lt;</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="122" x="699.75" y="1057.4258">JsonSerializer&lt;Short&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="821.75" y="1057.4258">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="678.75" y="1072.5195">&lt;&lt;</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="136" x="692.75" y="1072.5195">JsonDeserializer&lt;Short&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="828.75" y="1072.5195">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="98" x="711.75" y="1087.6133">ShortJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="604" x2="874" y1="1095.25" y2="1095.25"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="604" x2="874" y1="1103.25" y2="1103.25"/><ellipse cx="614" cy="1114.25" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="623" y="1118.6689">ShortJsonAdapter ()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="626" y="1132.5049"/><ellipse cx="614" cy="1141.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="623" y="1146.3408">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="686" y="1146.3408">serialize (Short src,</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="784" y="1146.3408">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="811" y="1146.3408">typeOfSrc,</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="647" y="1160.1768">JsonSerializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="768" y="1160.1768">context)</text><ellipse cx="614" cy="1169.5938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="623" y="1174.0127">Short deserialize (</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="711" y="1174.0127">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="23" x="774" y="1174.0127">json,</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="800" y="1174.0127">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="42" x="827" y="1174.0127">typeOfT,</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="647" y="1187.8486">JsonDeserializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="780" y="1187.8486">context)</text><!--MD5=[f72f8ad6aaf73d77b05e402bfda701b7]
class IntegerJsonAdapter--><rect codeLine="146" fill="#FEFECE" height="154.2969" id="IntegerJsonAdapter" style="stroke:#D4AC0D;stroke-width:1.5;" width="279" x="910.5" y="1039.9688"/><ellipse cx="953.4" cy="1067.6094" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M955.4,1064.1094 Q955.6031,1063.6094 955.8375,1063.3594 Q956.0719,1063.1094 956.3375,1063.1094 Q956.8063,1063.1094 957.1031,1063.3906 Q957.4,1063.6719 957.4,1064.3281 L957.4,1065.8906 Q957.4,1066.5469 957.1188,1066.8281 Q956.8375,1067.1094 956.4,1067.1094 Q956.0094,1067.1094 955.7594,1066.9375 Q955.5094,1066.7656 955.4,1066.3125 Q955.3531,1066 955.1813,1065.8281 Q954.8688,1065.5 954.3063,1065.3125 Q953.7438,1065.1094 953.1813,1065.1094 Q952.4781,1065.1094 951.8844,1065.3906 Q951.3063,1065.6719 950.8531,1066.2969 Q950.4,1066.9219 950.4,1067.7813 L950.4,1068.7031 Q950.4,1069.7344 951.2438,1070.4219 Q952.0875,1071.1094 953.5875,1071.1094 Q954.4781,1071.1094 955.1031,1070.9063 Q955.4625,1070.7969 955.8688,1070.4375 Q956.1344,1070.2344 956.275,1070.1719 Q956.4156,1070.1094 956.5875,1070.1094 Q956.9156,1070.1094 957.15,1070.375 Q957.4,1070.625 957.4,1070.9844 Q957.4,1071.3281 957.0563,1071.7344 Q956.5563,1072.3281 955.7594,1072.6563 Q954.7125,1073.1094 953.4313,1073.1094 Q951.9313,1073.1094 950.7281,1072.5156 Q949.7594,1072.0469 949.0719,1071.0313 Q948.4,1070.0156 948.4,1068.8125 L948.4,1067.7188 Q948.4,1066.4688 948.9938,1065.375 Q949.6031,1064.2813 950.65,1063.7031 Q951.7125,1063.1094 952.9,1063.1094 Q953.6188,1063.1094 954.2438,1063.3594 Q954.8688,1063.6094 955.4,1064.1094 Z " fill="#000000"/><ellipse cx="978.6" cy="1067.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="991.6" y="1057.4258">&lt;&lt;</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="132" x="1005.6" y="1057.4258">JsonSerializer&lt;Integer&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="1137.6" y="1057.4258">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="984.6" y="1072.5195">&lt;&lt;</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="146" x="998.6" y="1072.5195">JsonDeserializer&lt;Integer&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="1144.6" y="1072.5195">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="108" x="1017.6" y="1087.6133">IntegerJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="911.5" x2="1188.5" y1="1095.25" y2="1095.25"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="911.5" x2="1188.5" y1="1103.25" y2="1103.25"/><ellipse cx="921.5" cy="1114.25" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="930.5" y="1118.6689">IntegerJsonAdapter ()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="933.5" y="1132.5049"/><ellipse cx="921.5" cy="1141.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="930.5" y="1146.3408">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="993.5" y="1146.3408">serialize (Integer src,</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="1098.5" y="1146.3408">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="1125.5" y="1146.3408">typeOfSrc,</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="954.5" y="1160.1768">JsonSerializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="1075.5" y="1160.1768">context)</text><ellipse cx="921.5" cy="1169.5938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="930.5" y="1174.0127">Integer deserialize (</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="1025.5" y="1174.0127">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="23" x="1088.5" y="1174.0127">json,</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="1114.5" y="1174.0127">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="42" x="1141.5" y="1174.0127">typeOfT,</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="954.5" y="1187.8486">JsonDeserializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="1087.5" y="1187.8486">context)</text><!--MD5=[6dc912724c38cd3a0ccd19a15c425c35]
class LongJsonAdapter--><rect codeLine="154" fill="#FEFECE" height="154.2969" id="LongJsonAdapter" style="stroke:#D4AC0D;stroke-width:1.5;" width="270" x="299" y="1253.9688"/><ellipse cx="342.8" cy="1281.6094" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M344.8,1278.1094 Q345.0031,1277.6094 345.2375,1277.3594 Q345.4719,1277.1094 345.7375,1277.1094 Q346.2063,1277.1094 346.5031,1277.3906 Q346.8,1277.6719 346.8,1278.3281 L346.8,1279.8906 Q346.8,1280.5469 346.5188,1280.8281 Q346.2375,1281.1094 345.8,1281.1094 Q345.4094,1281.1094 345.1594,1280.9375 Q344.9094,1280.7656 344.8,1280.3125 Q344.7531,1280 344.5813,1279.8281 Q344.2688,1279.5 343.7063,1279.3125 Q343.1438,1279.1094 342.5813,1279.1094 Q341.8781,1279.1094 341.2844,1279.3906 Q340.7063,1279.6719 340.2531,1280.2969 Q339.8,1280.9219 339.8,1281.7813 L339.8,1282.7031 Q339.8,1283.7344 340.6438,1284.4219 Q341.4875,1285.1094 342.9875,1285.1094 Q343.8781,1285.1094 344.5031,1284.9063 Q344.8625,1284.7969 345.2688,1284.4375 Q345.5344,1284.2344 345.675,1284.1719 Q345.8156,1284.1094 345.9875,1284.1094 Q346.3156,1284.1094 346.55,1284.375 Q346.8,1284.625 346.8,1284.9844 Q346.8,1285.3281 346.4563,1285.7344 Q345.9563,1286.3281 345.1594,1286.6563 Q344.1125,1287.1094 342.8313,1287.1094 Q341.3313,1287.1094 340.1281,1286.5156 Q339.1594,1286.0469 338.4719,1285.0313 Q337.8,1284.0156 337.8,1282.8125 L337.8,1281.7188 Q337.8,1280.4688 338.3938,1279.375 Q339.0031,1278.2813 340.05,1277.7031 Q341.1125,1277.1094 342.3,1277.1094 Q343.0188,1277.1094 343.6438,1277.3594 Q344.2688,1277.6094 344.8,1278.1094 Z " fill="#000000"/><ellipse cx="368.2" cy="1281.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="381.2" y="1271.4258">&lt;&lt;</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="121" x="395.2" y="1271.4258">JsonSerializer&lt;Long&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="516.2" y="1271.4258">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="374.2" y="1286.5195">&lt;&lt;</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="135" x="388.2" y="1286.5195">JsonDeserializer&lt;Long&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="523.2" y="1286.5195">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="97" x="407.2" y="1301.6133">LongJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="300" x2="568" y1="1309.25" y2="1309.25"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="300" x2="568" y1="1317.25" y2="1317.25"/><ellipse cx="310" cy="1328.25" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="319" y="1332.6689">LongJsonAdapter ()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="322" y="1346.5049"/><ellipse cx="310" cy="1355.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="319" y="1360.3408">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="93" x="382" y="1360.3408">serialize (Long src,</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="478" y="1360.3408">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="505" y="1360.3408">typeOfSrc,</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="343" y="1374.1768">JsonSerializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="464" y="1374.1768">context)</text><ellipse cx="310" cy="1383.5938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="86" x="319" y="1388.0127">Long deserialize (</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="405" y="1388.0127">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="23" x="468" y="1388.0127">json,</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="494" y="1388.0127">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="42" x="521" y="1388.0127">typeOfT,</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="343" y="1401.8486">JsonDeserializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="476" y="1401.8486">context)</text><!--MD5=[fc62ed06551ba356a446c123e88cc84c]
class ThrowableJsonSerializer--><rect codeLine="162" fill="#FEFECE" height="111.5313" id="ThrowableJsonSerializer" style="stroke:#D4AC0D;stroke-width:1.5;" width="293" x="604.5" y="1274.9688"/><ellipse cx="651.75" cy="1295.0625" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M653.75,1291.5625 Q653.9531,1291.0625 654.1875,1290.8125 Q654.4219,1290.5625 654.6875,1290.5625 Q655.1563,1290.5625 655.4531,1290.8438 Q655.75,1291.125 655.75,1291.7813 L655.75,1293.3438 Q655.75,1294 655.4688,1294.2813 Q655.1875,1294.5625 654.75,1294.5625 Q654.3594,1294.5625 654.1094,1294.3906 Q653.8594,1294.2188 653.75,1293.7656 Q653.7031,1293.4531 653.5313,1293.2813 Q653.2188,1292.9531 652.6563,1292.7656 Q652.0938,1292.5625 651.5313,1292.5625 Q650.8281,1292.5625 650.2344,1292.8438 Q649.6563,1293.125 649.2031,1293.75 Q648.75,1294.375 648.75,1295.2344 L648.75,1296.1563 Q648.75,1297.1875 649.5938,1297.875 Q650.4375,1298.5625 651.9375,1298.5625 Q652.8281,1298.5625 653.4531,1298.3594 Q653.8125,1298.25 654.2188,1297.8906 Q654.4844,1297.6875 654.625,1297.625 Q654.7656,1297.5625 654.9375,1297.5625 Q655.2656,1297.5625 655.5,1297.8281 Q655.75,1298.0781 655.75,1298.4375 Q655.75,1298.7813 655.4063,1299.1875 Q654.9063,1299.7813 654.1094,1300.1094 Q653.0625,1300.5625 651.7813,1300.5625 Q650.2813,1300.5625 649.0781,1299.9688 Q648.1094,1299.5 647.4219,1298.4844 Q646.75,1297.4688 646.75,1296.2656 L646.75,1295.1719 Q646.75,1293.9219 647.3438,1292.8281 Q647.9531,1291.7344 649,1291.1563 Q650.0625,1290.5625 651.25,1290.5625 Q651.9688,1290.5625 652.5938,1290.8125 Q653.2188,1291.0625 653.75,1291.5625 Z " fill="#000000"/><ellipse cx="677.25" cy="1294.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="683.25" y="1292.4258">&lt;&lt;</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="151" x="697.25" y="1292.4258">JsonSerializer&lt;Throwable&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="848.25" y="1292.4258">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="137" x="704.25" y="1307.5195">ThrowableJsonSerializer</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="605.5" x2="896.5" y1="1315.1563" y2="1315.1563"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="605.5" x2="896.5" y1="1323.1563" y2="1323.1563"/><ellipse cx="615.5" cy="1334.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="624.5" y="1338.5752">ThrowableJsonSerializer ()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="627.5" y="1352.4111"/><ellipse cx="615.5" cy="1361.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="624.5" y="1366.2471">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="121" x="687.5" y="1366.2471">serialize (Throwable src,</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="811.5" y="1366.2471">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="838.5" y="1366.2471">typeOfSrc,</text><text fill="#000000" filter="url(#b12vg9owitc0t90)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="648.5" y="1380.083">JsonSerializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="769.5" y="1380.083">context)</text><!--MD5=[c34d1faeeea216c406a2d0eb3a604534]
class ContactCardCommonProtocol--><rect codeLine="170" fill="#FEFECE" height="103.3438" id="ContactCardCommonProtocol" style="stroke:#D4AC0D;stroke-width:1.5;" width="239" x="950.5" y="202.4688"/><ellipse cx="979" cy="218.4688" fill="#EB937F" rx="11" ry="11" style="stroke:#EB93DF;stroke-width:1.0;"/><path d="M977.5,219.4688 L977.5,221.4688 L981.5,221.4688 L981.5,220.4688 L981.5,219.9844 L982.125,219.4688 L982.5,219.4688 L982.875,219.4688 L983.5,219.9844 L983.5,220.4688 L983.5,223.4688 L975.5,223.4688 L975.0156,223.4688 L974.5,222.8438 L974.5,222.4688 L974.5,222.0938 L975.0156,221.4688 L975.5,221.4688 L975.5,221.4688 L975.5,215.4688 L975.5,215.4688 L975.0156,215.4688 L974.5,214.8438 L974.5,214.4688 L974.5,214.0938 L975.0156,213.4688 L975.5,213.4688 L983.5,213.4688 L983.5,216.4688 L983.5,216.9531 L982.875,217.4688 L982.5,217.4688 L982.125,217.4688 L981.5,216.9531 L981.5,216.4688 L981.5,215.4688 L977.5,215.4688 L977.5,217.4688 L978.5,217.4688 L978.5,216.9844 L978.5,216.9844 L979.125,216.4688 L979.5,216.4688 L979.875,216.4688 L980.5,216.9844 L980.5,217.4688 L980.5,219.4688 L980.5,219.9531 L979.875,220.4688 L979.875,220.4688 L979.5,220.4688 L979.125,220.4688 L978.5,219.9531 L978.5,219.9531 L978.5,219.4688 L977.5,219.4688 Z " fill="#000000"/><ellipse cx="1001" cy="217.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="166" x="1007" y="223.3789">ContactCardCommonProtocol</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="951.5" x2="1188.5" y1="234.4688" y2="234.4688"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="59" x="956.5" y="249.8877">ISO_7816_3</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="79" x="956.5" y="263.7236">ISO_7816_3_TO</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="77" x="956.5" y="277.5596">ISO_7816_3_T1</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="227" x="956.5" y="291.3955">INNOVATRON_HIGH_SPEED_PROTOCOL_SAM</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="951.5" x2="1188.5" y1="297.8125" y2="297.8125"/><!--MD5=[25bf49c9220c51f3412e028606b93688]
class ContactlessCardCommonProtocol--><rect codeLine="176" fill="#FEFECE" height="131.0156" id="ContactlessCardCommonProtocol" style="stroke:#D4AC0D;stroke-width:1.5;" width="231" x="684.5" y="188.4688"/><ellipse cx="699.5" cy="204.4688" fill="#EB937F" rx="11" ry="11" style="stroke:#EB93DF;stroke-width:1.0;"/><path d="M698,205.4688 L698,207.4688 L702,207.4688 L702,206.4688 L702,205.9844 L702.625,205.4688 L703,205.4688 L703.375,205.4688 L704,205.9844 L704,206.4688 L704,209.4688 L696,209.4688 L695.5156,209.4688 L695,208.8438 L695,208.4688 L695,208.0938 L695.5156,207.4688 L696,207.4688 L696,207.4688 L696,201.4688 L696,201.4688 L695.5156,201.4688 L695,200.8438 L695,200.4688 L695,200.0938 L695.5156,199.4688 L696,199.4688 L704,199.4688 L704,202.4688 L704,202.9531 L703.375,203.4688 L703,203.4688 L702.625,203.4688 L702,202.9531 L702,202.4688 L702,201.4688 L698,201.4688 L698,203.4688 L699,203.4688 L699,202.9844 L699,202.9844 L699.625,202.4688 L700,202.4688 L700.375,202.4688 L701,202.9844 L701,203.4688 L701,205.4688 L701,205.9531 L700.375,206.4688 L700.375,206.4688 L700,206.4688 L699.625,206.4688 L699,205.9531 L699,205.9531 L699,205.4688 L698,205.4688 Z " fill="#000000"/><ellipse cx="718.5" cy="203.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="188" x="724.5" y="209.3789">ContactlessCardCommonProtocol</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="685.5" x2="914.5" y1="220.4688" y2="220.4688"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="690.5" y="235.8877">ISO_14443_4</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="113" x="690.5" y="249.7236">NFC_A_ISO_14443_3A</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="690.5" y="263.5596">NFC_B_ISO_14443_3B</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="690.5" y="277.3955">NFC_F_JIS_6319_4</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="93" x="690.5" y="291.2314">NFC_V_ISO_15693</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="151" x="690.5" y="305.0674">INNOVATRON_B_PRIME_CARD</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="685.5" x2="914.5" y1="311.4844" y2="311.4844"/><!--MD5=[c9115abaf16ca91dc45c56264012f3ce]
link ByteArrayUtil to JsonUtil--><!--MD5=[6757456dba33f4ac62c37eb7e7994c1a]
link Assert to ByteArrayUtil--><!--MD5=[6bb83c1742bc0e576ff68716e4c88e08]
link Assert to ApduUtil--><!--MD5=[51c341f8810c88afd783f70947e1e58c]
link Assert to BerTlvUtil--><!--MD5=[63c32666aa556676165fa82fe8e7d846]
link BodyError to BodyErrorJsonDeserializer--><!--MD5=[08746151aa5e153f689b7b74edeef126]
link BodyErrorJsonDeserializer to ByteArrayJsonAdapter--><!--MD5=[80fae33031f982e6563876cc46d9a6ed]
link BodyError to ByteJsonAdapter--><!--MD5=[74a774788e2ebe36c764067b7b13dc93]
link ByteJsonAdapter to ShortJsonAdapter--><!--MD5=[144e8010900f21ba7827d9f9ed97ae0a]
link ShortJsonAdapter to IntegerJsonAdapter--><!--MD5=[d4e6ba726e90018d5db2cb9e659ad2ad]
link ByteJsonAdapter to LongJsonAdapter--><!--MD5=[b4ef75a519b7920b59101ffe2f8e0ad6]
link LongJsonAdapter to ThrowableJsonSerializer--><!--MD5=[b88e77bbcd1bc4b6ca91a9223652a41d]
@startuml
title
    Keyple - keyple-util-java-lib - 2.1.+ (15/03/2022)
end title

' == THEME ==

'Couleurs issues de : https://htmlcolorcodes.com/fr/tableau-de-couleur/tableau-de-couleur-design-plat/
!define C_GREY1 F8F9F9
!define C_GREY2 F2F3F4
!define C_GREY3 E5E7E9
!define C_GREY4 D7DBDD
!define C_GREY5 CACFD2
!define C_GREY6 BDC3C7
!define C_LINK 3498DB
!define C_USE 27AE60

skinparam Shadowing false
skinparam ClassFontStyle italic
skinparam ClassBorderColor #D4AC0D
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
' Red
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
' Purple
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
' blue
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
' Green
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
' Grey
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype

' == CONTENT ==

legend top
    __Colors legend__ :
    * __External API references__ :
    ** <back:yellow>**com.google.code.gson**</back>
end legend

package "org.eclipse.keyple.core.util" as util {
    +class "**final** Assert" as Assert {
        +{static} Assert getInstance ()

        +Assert notNull (Object obj, String name)
        +Assert notEmpty (String obj, String name)
        +Assert notEmpty (Collection<? extends Object> obj, String name)
        +Assert notEmpty (byte[] obj, String name)
        +Assert isTrue (Boolean condition, String name)
        +Assert greaterOrEqual (Integer number, int minValue, String name)
        +Assert isEqual (Integer number, int value, String name)
        +Assert isInRange (Integer number, int minValue, int maxValue, String name)
        +Assert isHexString (String hex, String name)
    }
    +class "**final** ByteArrayUtil" as ByteArrayUtil {
        +{static} boolean isValidHexString (String hex)
        +{static} String normalizeHexString (String hex)

        +{static} byte[] fromHex (String hex)
        +{static} byte hexToByte (String hex)
        +{static} short hexToShort (String hex)
        +{static} int hexToInt (String hex)
        +{static} long hexToLong (String hex)

        +{static} String toHex (byte[] data)
        +{static} String toHex (byte val)
        +{static} String toHex (short val)
        +{static} String toHex (int val)
        +{static} String toHex (long val)

        +{static} int twoBytesToInt (byte[] bytes, int offset)
        +{static} int twoBytesSignedToInt (byte[] bytes, int offset)
        +{static} int threeBytesToInt (byte[] bytes, int offset)
        +{static} int threeBytesSignedToInt (byte[] bytes, int offset)
        +{static} int fourBytesToInt (byte[] bytes, int offset)
        
        +{static} byte[] extract (byte[] src, int bitOffset, int nbBytes)
    }
    +class "**final** ApduUtil" as ApduUtil {
        +{static} byte[] build (byte cla, byte ins, byte p1, byte p2, byte[] dataIn, Byte le)

        +{static} boolean isCase4 (byte[] apduCommand)
    }
    +class BerTlvUtil {
        +{static} Map<Integer, byte[]> parseSimple (byte[] tlvStructure, boolean primitiveOnly)
        +{static} Map<Integer, List<byte[]>> parse (byte[] tlvStructure, boolean primitiveOnly)

        +{static} boolean isConstructed (int tagId)
    }
    package json {
        +class "**final** JsonUtil" as JsonUtil {
            +{static} <back:yellow>Gson</back> getParser ()
            +{static} void registerTypeAdapter (Class<?> matchingClass,
                \tObject adapter, boolean withSubclasses)

            +{static} String toJson (Object obj)
        }
        +class BodyError {
            +BodyError (Exception exception)

            +String getCode ()
            +Exception getException ()
        }
        +class "<<<back:yellow>JsonDeserializer<BodyError></back>>>\nBodyErrorJsonDeserializer" as BodyErrorJsonDeserializer {
            +BodyErrorJsonDeserializer ()

            +BodyError deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<byte[]></back>>>\n<<<back:yellow>JsonDeserializer<byte[]></back>>>\nByteArrayJsonAdapter" as ByteArrayJsonAdapter {
            +ByteArrayJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (byte[] src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +byte[] deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Byte></back>>>\n<<<back:yellow>JsonDeserializer<Byte></back>>>\nByteJsonAdapter" as ByteJsonAdapter {
            +ByteJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Byte src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Byte deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Short></back>>>\n<<<back:yellow>JsonDeserializer<Short></back>>>\nShortJsonAdapter" as ShortJsonAdapter {
            +ShortJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Short src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Short deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Integer></back>>>\n<<<back:yellow>JsonDeserializer<Integer></back>>>\nIntegerJsonAdapter" as IntegerJsonAdapter {
            +IntegerJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Integer src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Integer deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Long></back>>>\n<<<back:yellow>JsonDeserializer<Long></back>>>\nLongJsonAdapter" as LongJsonAdapter {
            +LongJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Long src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Long deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Throwable></back>>>\nThrowableJsonSerializer" as ThrowableJsonSerializer {
            +ThrowableJsonSerializer ()

            +<back:yellow>JsonElement</back> serialize (Throwable src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
        }
    }
    package protocol {
        +enum ContactCardCommonProtocol {
            ISO_7816_3
            ISO_7816_3_TO
            ISO_7816_3_T1
            INNOVATRON_HIGH_SPEED_PROTOCOL_SAM
        }
        +enum ContactlessCardCommonProtocol {
            ISO_14443_4
            NFC_A_ISO_14443_3A
            NFC_B_ISO_14443_3B
            NFC_F_JIS_6319_4
            NFC_V_ISO_15693
            INNOVATRON_B_PRIME_CARD
        }
    }
}

' Associations

' == LAYOUT ==

ByteArrayUtil -[hidden]- JsonUtil

Assert -[hidden]- ByteArrayUtil
Assert -[hidden]- ApduUtil
Assert -[hidden]- BerTlvUtil

' == STYLE ==

package util #C_GREY1 {}
package json #C_GREY2 {}
package protocol #C_GREY2 {}

@enduml

@startuml
title
    Keyple - keyple-util-java-lib - 2.1.+ (15/03/2022)
end title



skinparam Shadowing false
skinparam ClassFontStyle italic
skinparam ClassBorderColor #D4AC0D
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype


legend top
    __Colors legend__ :
    * __External API references__ :
    ** <back:yellow>**com.google.code.gson**</back>
end legend

package "org.eclipse.keyple.core.util" as util {
    +class "**final** Assert" as Assert {
        +{static} Assert getInstance ()

        +Assert notNull (Object obj, String name)
        +Assert notEmpty (String obj, String name)
        +Assert notEmpty (Collection<? extends Object> obj, String name)
        +Assert notEmpty (byte[] obj, String name)
        +Assert isTrue (Boolean condition, String name)
        +Assert greaterOrEqual (Integer number, int minValue, String name)
        +Assert isEqual (Integer number, int value, String name)
        +Assert isInRange (Integer number, int minValue, int maxValue, String name)
        +Assert isHexString (String hex, String name)
    }
    +class "**final** ByteArrayUtil" as ByteArrayUtil {
        +{static} boolean isValidHexString (String hex)
        +{static} String normalizeHexString (String hex)

        +{static} byte[] fromHex (String hex)
        +{static} byte hexToByte (String hex)
        +{static} short hexToShort (String hex)
        +{static} int hexToInt (String hex)
        +{static} long hexToLong (String hex)

        +{static} String toHex (byte[] data)
        +{static} String toHex (byte val)
        +{static} String toHex (short val)
        +{static} String toHex (int val)
        +{static} String toHex (long val)

        +{static} int twoBytesToInt (byte[] bytes, int offset)
        +{static} int twoBytesSignedToInt (byte[] bytes, int offset)
        +{static} int threeBytesToInt (byte[] bytes, int offset)
        +{static} int threeBytesSignedToInt (byte[] bytes, int offset)
        +{static} int fourBytesToInt (byte[] bytes, int offset)
        
        +{static} byte[] extract (byte[] src, int bitOffset, int nbBytes)
    }
    +class "**final** ApduUtil" as ApduUtil {
        +{static} byte[] build (byte cla, byte ins, byte p1, byte p2, byte[] dataIn, Byte le)

        +{static} boolean isCase4 (byte[] apduCommand)
    }
    +class BerTlvUtil {
        +{static} Map<Integer, byte[]> parseSimple (byte[] tlvStructure, boolean primitiveOnly)
        +{static} Map<Integer, List<byte[]>> parse (byte[] tlvStructure, boolean primitiveOnly)

        +{static} boolean isConstructed (int tagId)
    }
    package json {
        +class "**final** JsonUtil" as JsonUtil {
            +{static} <back:yellow>Gson</back> getParser ()
            +{static} void registerTypeAdapter (Class<?> matchingClass,
                \tObject adapter, boolean withSubclasses)

            +{static} String toJson (Object obj)
        }
        +class BodyError {
            +BodyError (Exception exception)

            +String getCode ()
            +Exception getException ()
        }
        +class "<<<back:yellow>JsonDeserializer<BodyError></back>>>\nBodyErrorJsonDeserializer" as BodyErrorJsonDeserializer {
            +BodyErrorJsonDeserializer ()

            +BodyError deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<byte[]></back>>>\n<<<back:yellow>JsonDeserializer<byte[]></back>>>\nByteArrayJsonAdapter" as ByteArrayJsonAdapter {
            +ByteArrayJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (byte[] src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +byte[] deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Byte></back>>>\n<<<back:yellow>JsonDeserializer<Byte></back>>>\nByteJsonAdapter" as ByteJsonAdapter {
            +ByteJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Byte src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Byte deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Short></back>>>\n<<<back:yellow>JsonDeserializer<Short></back>>>\nShortJsonAdapter" as ShortJsonAdapter {
            +ShortJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Short src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Short deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Integer></back>>>\n<<<back:yellow>JsonDeserializer<Integer></back>>>\nIntegerJsonAdapter" as IntegerJsonAdapter {
            +IntegerJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Integer src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Integer deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Long></back>>>\n<<<back:yellow>JsonDeserializer<Long></back>>>\nLongJsonAdapter" as LongJsonAdapter {
            +LongJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Long src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Long deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Throwable></back>>>\nThrowableJsonSerializer" as ThrowableJsonSerializer {
            +ThrowableJsonSerializer ()

            +<back:yellow>JsonElement</back> serialize (Throwable src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
        }
    }
    package protocol {
        +enum ContactCardCommonProtocol {
            ISO_7816_3
            ISO_7816_3_TO
            ISO_7816_3_T1
            INNOVATRON_HIGH_SPEED_PROTOCOL_SAM
        }
        +enum ContactlessCardCommonProtocol {
            ISO_14443_4
            NFC_A_ISO_14443_3A
            NFC_B_ISO_14443_3B
            NFC_F_JIS_6319_4
            NFC_V_ISO_15693
            INNOVATRON_B_PRIME_CARD
        }
    }
}



ByteArrayUtil -[hidden]- JsonUtil

Assert -[hidden]- ByteArrayUtil
Assert -[hidden]- ApduUtil
Assert -[hidden]- BerTlvUtil


package util #F8F9F9 {}
package json #F2F3F4 {}
package protocol #F2F3F4 {}

@enduml

PlantUML version 1.2022.1(Tue Feb 01 19:19:58 CET 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: fr
Country: FR
--></g></svg>