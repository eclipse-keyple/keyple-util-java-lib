<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1062px" preserveAspectRatio="none" style="width:1315px;height:1062px;background:#FFFFFF;" version="1.1" viewBox="0 0 1315 1062" width="1315px" zoomAndPan="magnify"><defs><filter height="1" id="b128cbi83d19r00" width="1" x="0" y="0"><feFlood flood-color="#FFFF00" result="flood"/><feComposite in="SourceGraphic" in2="flood" operator="over"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacing" textLength="379" x="461.5" y="18.6855">Keyple - keyple-util-java-lib - 2.1.+ (14/02/2022)</text><rect fill="#DDDDDD" height="62.8281" rx="5" ry="5" style="stroke:#000000;stroke-width:1.0;" width="198" x="551.5" y="30.6406"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="88" x="557.5" y="50.1738">Colors legend</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="649.5" y="50.1738">:</text><ellipse cx="563" cy="63.3594" fill="#000000" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:0.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="570.5" y="67.7832">External API references</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="722.5" y="67.7832">:</text><rect fill="#000000" height="3.5" style="stroke:#000000;stroke-width:0.0;" width="3.5" x="578.5" y="80.4688"/><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="160" x="583.5" y="85.3926">com.google.code.gson</text><!--MD5=[3e81cc6ee7da4fa8b6adc12b329096f6]
cluster util--><polygon fill="#F8F9F9" points="16,108.4688,213,108.4688,220,132.0781,1298,132.0781,1298,1055.9688,16,1055.9688,16,108.4688" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="16" x2="220" y1="132.0781" y2="132.0781"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="191" x="20" y="125.002">org.eclipse.keyple.core.util</text><!--MD5=[4ac75f36695ece63879c728112de416c]
cluster json--><polygon fill="#F2F3F4" points="40,152.4688,76,152.4688,83,176.0781,1274,176.0781,1274,572.4688,40,572.4688,40,152.4688" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="40" x2="83" y1="176.0781" y2="176.0781"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="30" x="44" y="169.002">json</text><!--MD5=[59e9faf83e5ffb743ef5750f57e8e967]
cluster protocol--><polygon fill="#F2F3F4" points="447,604.4688,512,604.4688,519,628.0781,1020,628.0781,1020,803.4688,447,803.4688,447,604.4688" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="447" x2="519" y1="628.0781" y2="628.0781"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="59" x="451" y="621.002">protocol</text><!--MD5=[748d96b9802ee0d94a77604226d4f903]
class Assert--><rect codeLine="54" fill="#FEFECE" height="186.3594" id="Assert" style="stroke:#D4AC0D;stroke-width:1.5;" width="387" x="32.5" y="620.9688"/><ellipse cx="185.75" cy="636.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M187.75,633.4688 Q187.9531,632.9688 188.1875,632.7188 Q188.4219,632.4688 188.6875,632.4688 Q189.1563,632.4688 189.4531,632.75 Q189.75,633.0313 189.75,633.6875 L189.75,635.25 Q189.75,635.9063 189.4688,636.1875 Q189.1875,636.4688 188.75,636.4688 Q188.3594,636.4688 188.1094,636.2969 Q187.8594,636.125 187.75,635.6719 Q187.7031,635.3594 187.5313,635.1875 Q187.2188,634.8594 186.6563,634.6719 Q186.0938,634.4688 185.5313,634.4688 Q184.8281,634.4688 184.2344,634.75 Q183.6563,635.0313 183.2031,635.6563 Q182.75,636.2813 182.75,637.1406 L182.75,638.0625 Q182.75,639.0938 183.5938,639.7813 Q184.4375,640.4688 185.9375,640.4688 Q186.8281,640.4688 187.4531,640.2656 Q187.8125,640.1563 188.2188,639.7969 Q188.4844,639.5938 188.625,639.5313 Q188.7656,639.4688 188.9375,639.4688 Q189.2656,639.4688 189.5,639.7344 Q189.75,639.9844 189.75,640.3438 Q189.75,640.6875 189.4063,641.0938 Q188.9063,641.6875 188.1094,642.0156 Q187.0625,642.4688 185.7813,642.4688 Q184.2813,642.4688 183.0781,641.875 Q182.1094,641.4063 181.4219,640.3906 Q180.75,639.375 180.75,638.1719 L180.75,637.0781 Q180.75,635.8281 181.3438,634.7344 Q181.9531,633.6406 183,633.0625 Q184.0625,632.4688 185.25,632.4688 Q185.9688,632.4688 186.5938,632.7188 Q187.2188,632.9688 187.75,633.4688 Z " fill="#000000"/><ellipse cx="211.25" cy="636.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="24" x="217.25" y="641.8789">final</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="34" x="244.25" y="641.8789">Assert</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="33.5" x2="418.5" y1="652.9688" y2="652.9688"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="33.5" x2="418.5" y1="660.9688" y2="660.9688"/><ellipse cx="43.5" cy="671.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="103" x="52.5" y="676.3877">Assert getInstance ()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="55.5" y="690.2236"/><ellipse cx="43.5" cy="699.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="52.5" y="704.0596">Assert notNull (Object obj, String name)</text><ellipse cx="43.5" cy="713.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="199" x="52.5" y="717.8955">Assert notEmpty (String obj, String name)</text><ellipse cx="43.5" cy="727.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="311" x="52.5" y="731.7314">Assert notEmpty (Collection&lt;? extends Object&gt; obj, String name)</text><ellipse cx="43.5" cy="741.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="198" x="52.5" y="745.5674">Assert notEmpty (byte[] obj, String name)</text><ellipse cx="43.5" cy="754.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="225" x="52.5" y="759.4033">Assert isTrue (Boolean condition, String name)</text><ellipse cx="43.5" cy="768.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="52.5" y="773.2393">Assert greaterOrEqual (Integer number, int minValue, String name)</text><ellipse cx="43.5" cy="782.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="52.5" y="787.0752">Assert isEqual (Integer number, int value, String name)</text><ellipse cx="43.5" cy="796.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="361" x="52.5" y="800.9111">Assert isInRange (Integer number, int minValue, int maxValue, String name)</text><!--MD5=[27f29ba09c13b8ede23502b37e39f025]
class ByteArrayUtil--><rect codeLine="66" fill="#FEFECE" height="172.5234" id="ByteArrayUtil" style="stroke:#D4AC0D;stroke-width:1.5;" width="266" x="32" y="866.9688"/><ellipse cx="106.25" cy="882.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M108.25,879.4688 Q108.4531,878.9688 108.6875,878.7188 Q108.9219,878.4688 109.1875,878.4688 Q109.6563,878.4688 109.9531,878.75 Q110.25,879.0313 110.25,879.6875 L110.25,881.25 Q110.25,881.9063 109.9688,882.1875 Q109.6875,882.4688 109.25,882.4688 Q108.8594,882.4688 108.6094,882.2969 Q108.3594,882.125 108.25,881.6719 Q108.2031,881.3594 108.0313,881.1875 Q107.7188,880.8594 107.1563,880.6719 Q106.5938,880.4688 106.0313,880.4688 Q105.3281,880.4688 104.7344,880.75 Q104.1563,881.0313 103.7031,881.6563 Q103.25,882.2813 103.25,883.1406 L103.25,884.0625 Q103.25,885.0938 104.0938,885.7813 Q104.9375,886.4688 106.4375,886.4688 Q107.3281,886.4688 107.9531,886.2656 Q108.3125,886.1563 108.7188,885.7969 Q108.9844,885.5938 109.125,885.5313 Q109.2656,885.4688 109.4375,885.4688 Q109.7656,885.4688 110,885.7344 Q110.25,885.9844 110.25,886.3438 Q110.25,886.6875 109.9063,887.0938 Q109.4063,887.6875 108.6094,888.0156 Q107.5625,888.4688 106.2813,888.4688 Q104.7813,888.4688 103.5781,887.875 Q102.6094,887.4063 101.9219,886.3906 Q101.25,885.375 101.25,884.1719 L101.25,883.0781 Q101.25,881.8281 101.8438,880.7344 Q102.4531,879.6406 103.5,879.0625 Q104.5625,878.4688 105.75,878.4688 Q106.4688,878.4688 107.0938,878.7188 Q107.7188,878.9688 108.25,879.4688 Z " fill="#000000"/><ellipse cx="131.75" cy="882.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="24" x="137.75" y="887.8789">final</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="71" x="164.75" y="887.8789">ByteArrayUtil</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="33" x2="297" y1="898.9688" y2="898.9688"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="33" x2="297" y1="906.9688" y2="906.9688"/><ellipse cx="43" cy="917.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="208" x="52" y="922.3877">boolean isValidHexString (String hexString)</text><ellipse cx="43" cy="931.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="212" x="52" y="936.2236">String normalizeHexString (String hexString)</text><ellipse cx="43" cy="945.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="131" x="52" y="950.0596">byte[] fromHex (String hex)</text><ellipse cx="43" cy="959.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="149" x="52" y="963.8955">String toHex (byte[] byteArray)</text><ellipse cx="43" cy="973.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="201" x="52" y="977.7314">int twoBytesToInt (byte[] bytes, int offset)</text><ellipse cx="43" cy="987.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="234" x="52" y="991.5674">int twoBytesSignedToInt (byte[] bytes, int offset)</text><ellipse cx="43" cy="1000.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="207" x="52" y="1005.4033">int threeBytesToInt (byte[] bytes, int offset)</text><ellipse cx="43" cy="1014.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="240" x="52" y="1019.2393">int threeBytesSignedToInt (byte[] bytes, int offset)</text><ellipse cx="43" cy="1028.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="202" x="52" y="1033.0752">int fourBytesToInt (byte[] bytes, int offset)</text><!--MD5=[458b3a9396e0ca5416a37f6d6326ccaf]
class ApduUtil--><rect codeLine="77" fill="#FEFECE" height="75.6719" id="ApduUtil" style="stroke:#D4AC0D;stroke-width:1.5;" width="359" x="333.5" y="915.4688"/><ellipse cx="466.25" cy="931.4688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M468.25,927.9688 Q468.4531,927.4688 468.6875,927.2188 Q468.9219,926.9688 469.1875,926.9688 Q469.6563,926.9688 469.9531,927.25 Q470.25,927.5313 470.25,928.1875 L470.25,929.75 Q470.25,930.4063 469.9688,930.6875 Q469.6875,930.9688 469.25,930.9688 Q468.8594,930.9688 468.6094,930.7969 Q468.3594,930.625 468.25,930.1719 Q468.2031,929.8594 468.0313,929.6875 Q467.7188,929.3594 467.1563,929.1719 Q466.5938,928.9688 466.0313,928.9688 Q465.3281,928.9688 464.7344,929.25 Q464.1563,929.5313 463.7031,930.1563 Q463.25,930.7813 463.25,931.6406 L463.25,932.5625 Q463.25,933.5938 464.0938,934.2813 Q464.9375,934.9688 466.4375,934.9688 Q467.3281,934.9688 467.9531,934.7656 Q468.3125,934.6563 468.7188,934.2969 Q468.9844,934.0938 469.125,934.0313 Q469.2656,933.9688 469.4375,933.9688 Q469.7656,933.9688 470,934.2344 Q470.25,934.4844 470.25,934.8438 Q470.25,935.1875 469.9063,935.5938 Q469.4063,936.1875 468.6094,936.5156 Q467.5625,936.9688 466.2813,936.9688 Q464.7813,936.9688 463.5781,936.375 Q462.6094,935.9063 461.9219,934.8906 Q461.25,933.875 461.25,932.6719 L461.25,931.5781 Q461.25,930.3281 461.8438,929.2344 Q462.4531,928.1406 463.5,927.5625 Q464.5625,926.9688 465.75,926.9688 Q466.4688,926.9688 467.0938,927.2188 Q467.7188,927.4688 468.25,927.9688 Z " fill="#000000"/><ellipse cx="491.75" cy="930.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="24" x="497.75" y="936.3789">final</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="47" x="524.75" y="936.3789">ApduUtil</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="334.5" x2="691.5" y1="947.4688" y2="947.4688"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="334.5" x2="691.5" y1="955.4688" y2="955.4688"/><ellipse cx="344.5" cy="966.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="333" x="353.5" y="970.8877">byte[] build (byte cla, byte ins, byte p1, byte p2, byte[] dataIn, Byte le)</text><ellipse cx="344.5" cy="980.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="192" x="353.5" y="984.7236">boolean isCase4 (byte[] apduCommand)</text><!--MD5=[967b5bdf980b1f0d408075c95cfc8699]
class BerTlvUtil--><rect codeLine="81" fill="#FEFECE" height="75.6719" id="BerTlvUtil" style="stroke:#D4AC0D;stroke-width:1.5;" width="391" x="727.5" y="915.4688"/><ellipse cx="886.75" cy="931.4688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M888.75,927.9688 Q888.9531,927.4688 889.1875,927.2188 Q889.4219,926.9688 889.6875,926.9688 Q890.1563,926.9688 890.4531,927.25 Q890.75,927.5313 890.75,928.1875 L890.75,929.75 Q890.75,930.4063 890.4688,930.6875 Q890.1875,930.9688 889.75,930.9688 Q889.3594,930.9688 889.1094,930.7969 Q888.8594,930.625 888.75,930.1719 Q888.7031,929.8594 888.5313,929.6875 Q888.2188,929.3594 887.6563,929.1719 Q887.0938,928.9688 886.5313,928.9688 Q885.8281,928.9688 885.2344,929.25 Q884.6563,929.5313 884.2031,930.1563 Q883.75,930.7813 883.75,931.6406 L883.75,932.5625 Q883.75,933.5938 884.5938,934.2813 Q885.4375,934.9688 886.9375,934.9688 Q887.8281,934.9688 888.4531,934.7656 Q888.8125,934.6563 889.2188,934.2969 Q889.4844,934.0938 889.625,934.0313 Q889.7656,933.9688 889.9375,933.9688 Q890.2656,933.9688 890.5,934.2344 Q890.75,934.4844 890.75,934.8438 Q890.75,935.1875 890.4063,935.5938 Q889.9063,936.1875 889.1094,936.5156 Q888.0625,936.9688 886.7813,936.9688 Q885.2813,936.9688 884.0781,936.375 Q883.1094,935.9063 882.4219,934.8906 Q881.75,933.875 881.75,932.6719 L881.75,931.5781 Q881.75,930.3281 882.3438,929.2344 Q882.9531,928.1406 884,927.5625 Q885.0625,926.9688 886.25,926.9688 Q886.9688,926.9688 887.5938,927.2188 Q888.2188,927.4688 888.75,927.9688 Z " fill="#000000"/><ellipse cx="912.25" cy="930.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="53" x="918.25" y="936.3789">BerTlvUtil</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="728.5" x2="1117.5" y1="947.4688" y2="947.4688"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="728.5" x2="1117.5" y1="955.4688" y2="955.4688"/><ellipse cx="738.5" cy="966.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="365" x="747.5" y="970.8877">Map&lt;Integer, byte[]&gt; parseSimple (byte[] tlvStructure, boolean primitiveOnly)</text><ellipse cx="738.5" cy="980.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="156" x="747.5" y="984.7236">boolean isConstructed (int tagId)</text><!--MD5=[ff1fef1d5f830c31212d01e346df5a91]
class JsonUtil--><rect codeLine="86" fill="#FEFECE" height="117.1797" id="JsonUtil" style="stroke:#D4AC0D;stroke-width:1.5;" width="277" x="56.5" y="206.9688"/><ellipse cx="149.75" cy="222.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M151.75,219.4688 Q151.9531,218.9688 152.1875,218.7188 Q152.4219,218.4688 152.6875,218.4688 Q153.1563,218.4688 153.4531,218.75 Q153.75,219.0313 153.75,219.6875 L153.75,221.25 Q153.75,221.9063 153.4688,222.1875 Q153.1875,222.4688 152.75,222.4688 Q152.3594,222.4688 152.1094,222.2969 Q151.8594,222.125 151.75,221.6719 Q151.7031,221.3594 151.5313,221.1875 Q151.2188,220.8594 150.6563,220.6719 Q150.0938,220.4688 149.5313,220.4688 Q148.8281,220.4688 148.2344,220.75 Q147.6563,221.0313 147.2031,221.6563 Q146.75,222.2813 146.75,223.1406 L146.75,224.0625 Q146.75,225.0938 147.5938,225.7813 Q148.4375,226.4688 149.9375,226.4688 Q150.8281,226.4688 151.4531,226.2656 Q151.8125,226.1563 152.2188,225.7969 Q152.4844,225.5938 152.625,225.5313 Q152.7656,225.4688 152.9375,225.4688 Q153.2656,225.4688 153.5,225.7344 Q153.75,225.9844 153.75,226.3438 Q153.75,226.6875 153.4063,227.0938 Q152.9063,227.6875 152.1094,228.0156 Q151.0625,228.4688 149.7813,228.4688 Q148.2813,228.4688 147.0781,227.875 Q146.1094,227.4063 145.4219,226.3906 Q144.75,225.375 144.75,224.1719 L144.75,223.0781 Q144.75,221.8281 145.3438,220.7344 Q145.9531,219.6406 147,219.0625 Q148.0625,218.4688 149.25,218.4688 Q149.9688,218.4688 150.5938,218.7188 Q151.2188,218.9688 151.75,219.4688 Z " fill="#000000"/><ellipse cx="175.25" cy="222.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="24" x="181.25" y="227.8789">final</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="44" x="208.25" y="227.8789">JsonUtil</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="57.5" x2="332.5" y1="238.9688" y2="238.9688"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="57.5" x2="332.5" y1="246.9688" y2="246.9688"/><ellipse cx="67.5" cy="257.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="26" x="76.5" y="262.3877">Gson</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="58" x="105.5" y="262.3877">getParser ()</text><ellipse cx="67.5" cy="271.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="251" x="76.5" y="276.2236">void registerTypeAdapter (Class&lt;?&gt; matchingClass,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="200" x="100.5" y="290.0596">Object adapter, boolean withSubclasses)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="79.5" y="303.8955"/><ellipse cx="67.5" cy="313.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="122" x="76.5" y="317.7314">String toJson (Object obj)</text><!--MD5=[f72f8ad6aaf73d77b05e402bfda701b7]
class IntegerJsonAdapter--><rect codeLine="93" fill="#FEFECE" height="154.2969" id="IntegerJsonAdapter" style="stroke:#D4AC0D;stroke-width:1.5;" width="279" x="368.5" y="188.4688"/><ellipse cx="411.4" cy="216.1094" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M413.4,212.6094 Q413.6031,212.1094 413.8375,211.8594 Q414.0719,211.6094 414.3375,211.6094 Q414.8063,211.6094 415.1031,211.8906 Q415.4,212.1719 415.4,212.8281 L415.4,214.3906 Q415.4,215.0469 415.1188,215.3281 Q414.8375,215.6094 414.4,215.6094 Q414.0094,215.6094 413.7594,215.4375 Q413.5094,215.2656 413.4,214.8125 Q413.3531,214.5 413.1813,214.3281 Q412.8688,214 412.3063,213.8125 Q411.7438,213.6094 411.1813,213.6094 Q410.4781,213.6094 409.8844,213.8906 Q409.3063,214.1719 408.8531,214.7969 Q408.4,215.4219 408.4,216.2813 L408.4,217.2031 Q408.4,218.2344 409.2438,218.9219 Q410.0875,219.6094 411.5875,219.6094 Q412.4781,219.6094 413.1031,219.4063 Q413.4625,219.2969 413.8688,218.9375 Q414.1344,218.7344 414.275,218.6719 Q414.4156,218.6094 414.5875,218.6094 Q414.9156,218.6094 415.15,218.875 Q415.4,219.125 415.4,219.4844 Q415.4,219.8281 415.0563,220.2344 Q414.5563,220.8281 413.7594,221.1563 Q412.7125,221.6094 411.4313,221.6094 Q409.9313,221.6094 408.7281,221.0156 Q407.7594,220.5469 407.0719,219.5313 Q406.4,218.5156 406.4,217.3125 L406.4,216.2188 Q406.4,214.9688 406.9938,213.875 Q407.6031,212.7813 408.65,212.2031 Q409.7125,211.6094 410.9,211.6094 Q411.6188,211.6094 412.2438,211.8594 Q412.8688,212.1094 413.4,212.6094 Z " fill="#000000"/><ellipse cx="436.6" cy="215.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="449.6" y="205.9258">&lt;&lt;</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="132" x="463.6" y="205.9258">JsonSerializer&lt;Integer&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="595.6" y="205.9258">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="442.6" y="221.0195">&lt;&lt;</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="146" x="456.6" y="221.0195">JsonDeserializer&lt;Integer&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="602.6" y="221.0195">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="108" x="475.6" y="236.1133">IntegerJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="369.5" x2="646.5" y1="243.75" y2="243.75"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="369.5" x2="646.5" y1="251.75" y2="251.75"/><ellipse cx="379.5" cy="262.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="388.5" y="267.1689">IntegerJsonAdapter ()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="391.5" y="281.0049"/><ellipse cx="379.5" cy="290.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="388.5" y="294.8408">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="451.5" y="294.8408">serialize (Integer src,</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="556.5" y="294.8408">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="583.5" y="294.8408">typeOfSrc,</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="412.5" y="308.6768">JsonSerializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="533.5" y="308.6768">context)</text><ellipse cx="379.5" cy="318.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="388.5" y="322.5127">Integer deserialize (</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="483.5" y="322.5127">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="23" x="546.5" y="322.5127">json,</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="572.5" y="322.5127">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="42" x="599.5" y="322.5127">typeOfT,</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="412.5" y="336.3486">JsonDeserializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="545.5" y="336.3486">context)</text><!--MD5=[514e1602104e75c9a95a46a815824089]
class ShortJsonAdapter--><rect codeLine="101" fill="#FEFECE" height="154.2969" id="ShortJsonAdapter" style="stroke:#D4AC0D;stroke-width:1.5;" width="272" x="683" y="188.4688"/><ellipse cx="727.25" cy="216.1094" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M729.25,212.6094 Q729.4531,212.1094 729.6875,211.8594 Q729.9219,211.6094 730.1875,211.6094 Q730.6563,211.6094 730.9531,211.8906 Q731.25,212.1719 731.25,212.8281 L731.25,214.3906 Q731.25,215.0469 730.9688,215.3281 Q730.6875,215.6094 730.25,215.6094 Q729.8594,215.6094 729.6094,215.4375 Q729.3594,215.2656 729.25,214.8125 Q729.2031,214.5 729.0313,214.3281 Q728.7188,214 728.1563,213.8125 Q727.5938,213.6094 727.0313,213.6094 Q726.3281,213.6094 725.7344,213.8906 Q725.1563,214.1719 724.7031,214.7969 Q724.25,215.4219 724.25,216.2813 L724.25,217.2031 Q724.25,218.2344 725.0938,218.9219 Q725.9375,219.6094 727.4375,219.6094 Q728.3281,219.6094 728.9531,219.4063 Q729.3125,219.2969 729.7188,218.9375 Q729.9844,218.7344 730.125,218.6719 Q730.2656,218.6094 730.4375,218.6094 Q730.7656,218.6094 731,218.875 Q731.25,219.125 731.25,219.4844 Q731.25,219.8281 730.9063,220.2344 Q730.4063,220.8281 729.6094,221.1563 Q728.5625,221.6094 727.2813,221.6094 Q725.7813,221.6094 724.5781,221.0156 Q723.6094,220.5469 722.9219,219.5313 Q722.25,218.5156 722.25,217.3125 L722.25,216.2188 Q722.25,214.9688 722.8438,213.875 Q723.4531,212.7813 724.5,212.2031 Q725.5625,211.6094 726.75,211.6094 Q727.4688,211.6094 728.0938,211.8594 Q728.7188,212.1094 729.25,212.6094 Z " fill="#000000"/><ellipse cx="752.75" cy="215.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="765.75" y="205.9258">&lt;&lt;</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="122" x="779.75" y="205.9258">JsonSerializer&lt;Short&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="901.75" y="205.9258">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="758.75" y="221.0195">&lt;&lt;</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="136" x="772.75" y="221.0195">JsonDeserializer&lt;Short&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="908.75" y="221.0195">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="98" x="791.75" y="236.1133">ShortJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="684" x2="954" y1="243.75" y2="243.75"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="684" x2="954" y1="251.75" y2="251.75"/><ellipse cx="694" cy="262.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="703" y="267.1689">ShortJsonAdapter ()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="706" y="281.0049"/><ellipse cx="694" cy="290.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="703" y="294.8408">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="766" y="294.8408">serialize (Short src,</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="864" y="294.8408">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="891" y="294.8408">typeOfSrc,</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="727" y="308.6768">JsonSerializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="848" y="308.6768">context)</text><ellipse cx="694" cy="318.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="703" y="322.5127">Short deserialize (</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="791" y="322.5127">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="23" x="854" y="322.5127">json,</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="880" y="322.5127">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="42" x="907" y="322.5127">typeOfT,</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="727" y="336.3486">JsonDeserializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="860" y="336.3486">context)</text><!--MD5=[52cc22ead8f9cede3c7076eefab9a46c]
class ByteJsonAdapter--><rect codeLine="109" fill="#FEFECE" height="154.2969" id="ByteJsonAdapter" style="stroke:#D4AC0D;stroke-width:1.5;" width="268" x="990" y="188.4688"/><ellipse cx="1034.75" cy="216.1094" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M1036.75,212.6094 Q1036.9531,212.1094 1037.1875,211.8594 Q1037.4219,211.6094 1037.6875,211.6094 Q1038.1563,211.6094 1038.4531,211.8906 Q1038.75,212.1719 1038.75,212.8281 L1038.75,214.3906 Q1038.75,215.0469 1038.4688,215.3281 Q1038.1875,215.6094 1037.75,215.6094 Q1037.3594,215.6094 1037.1094,215.4375 Q1036.8594,215.2656 1036.75,214.8125 Q1036.7031,214.5 1036.5313,214.3281 Q1036.2188,214 1035.6563,213.8125 Q1035.0938,213.6094 1034.5313,213.6094 Q1033.8281,213.6094 1033.2344,213.8906 Q1032.6563,214.1719 1032.2031,214.7969 Q1031.75,215.4219 1031.75,216.2813 L1031.75,217.2031 Q1031.75,218.2344 1032.5938,218.9219 Q1033.4375,219.6094 1034.9375,219.6094 Q1035.8281,219.6094 1036.4531,219.4063 Q1036.8125,219.2969 1037.2188,218.9375 Q1037.4844,218.7344 1037.625,218.6719 Q1037.7656,218.6094 1037.9375,218.6094 Q1038.2656,218.6094 1038.5,218.875 Q1038.75,219.125 1038.75,219.4844 Q1038.75,219.8281 1038.4063,220.2344 Q1037.9063,220.8281 1037.1094,221.1563 Q1036.0625,221.6094 1034.7813,221.6094 Q1033.2813,221.6094 1032.0781,221.0156 Q1031.1094,220.5469 1030.4219,219.5313 Q1029.75,218.5156 1029.75,217.3125 L1029.75,216.2188 Q1029.75,214.9688 1030.3438,213.875 Q1030.9531,212.7813 1032,212.2031 Q1033.0625,211.6094 1034.25,211.6094 Q1034.9688,211.6094 1035.5938,211.8594 Q1036.2188,212.1094 1036.75,212.6094 Z " fill="#000000"/><ellipse cx="1060.25" cy="215.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="1073.25" y="205.9258">&lt;&lt;</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="117" x="1087.25" y="205.9258">JsonSerializer&lt;Byte&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="1204.25" y="205.9258">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="1066.25" y="221.0195">&lt;&lt;</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="131" x="1080.25" y="221.0195">JsonDeserializer&lt;Byte&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="1211.25" y="221.0195">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="93" x="1099.25" y="236.1133">ByteJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="991" x2="1257" y1="243.75" y2="243.75"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="991" x2="1257" y1="251.75" y2="251.75"/><ellipse cx="1001" cy="262.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="1010" y="267.1689">ByteJsonAdapter ()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="1013" y="281.0049"/><ellipse cx="1001" cy="290.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="1010" y="294.8408">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="91" x="1073" y="294.8408">serialize (Byte src,</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="1167" y="294.8408">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="1194" y="294.8408">typeOfSrc,</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="1034" y="308.6768">JsonSerializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="1155" y="308.6768">context)</text><ellipse cx="1001" cy="318.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="1010" y="322.5127">Byte deserialize (</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="1094" y="322.5127">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="23" x="1157" y="322.5127">json,</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="1183" y="322.5127">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="42" x="1210" y="322.5127">typeOfT,</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="1034" y="336.3486">JsonDeserializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="1167" y="336.3486">context)</text><!--MD5=[3d84c5190c7a3821707931f3b8039d88]
class BodyError--><rect codeLine="117" fill="#FEFECE" height="103.3438" id="BodyError" style="stroke:#D4AC0D;stroke-width:1.5;" width="183" x="108.5" y="427.9688"/><ellipse cx="162.75" cy="443.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M164.75,440.4688 Q164.9531,439.9688 165.1875,439.7188 Q165.4219,439.4688 165.6875,439.4688 Q166.1563,439.4688 166.4531,439.75 Q166.75,440.0313 166.75,440.6875 L166.75,442.25 Q166.75,442.9063 166.4688,443.1875 Q166.1875,443.4688 165.75,443.4688 Q165.3594,443.4688 165.1094,443.2969 Q164.8594,443.125 164.75,442.6719 Q164.7031,442.3594 164.5313,442.1875 Q164.2188,441.8594 163.6563,441.6719 Q163.0938,441.4688 162.5313,441.4688 Q161.8281,441.4688 161.2344,441.75 Q160.6563,442.0313 160.2031,442.6563 Q159.75,443.2813 159.75,444.1406 L159.75,445.0625 Q159.75,446.0938 160.5938,446.7813 Q161.4375,447.4688 162.9375,447.4688 Q163.8281,447.4688 164.4531,447.2656 Q164.8125,447.1563 165.2188,446.7969 Q165.4844,446.5938 165.625,446.5313 Q165.7656,446.4688 165.9375,446.4688 Q166.2656,446.4688 166.5,446.7344 Q166.75,446.9844 166.75,447.3438 Q166.75,447.6875 166.4063,448.0938 Q165.9063,448.6875 165.1094,449.0156 Q164.0625,449.4688 162.7813,449.4688 Q161.2813,449.4688 160.0781,448.875 Q159.1094,448.4063 158.4219,447.3906 Q157.75,446.375 157.75,445.1719 L157.75,444.0781 Q157.75,442.8281 158.3438,441.7344 Q158.9531,440.6406 160,440.0625 Q161.0625,439.4688 162.25,439.4688 Q162.9688,439.4688 163.5938,439.7188 Q164.2188,439.9688 164.75,440.4688 Z " fill="#000000"/><ellipse cx="188.25" cy="443.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="55" x="194.25" y="448.8789">BodyError</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="109.5" x2="290.5" y1="459.9688" y2="459.9688"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="109.5" x2="290.5" y1="467.9688" y2="467.9688"/><ellipse cx="119.5" cy="478.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="128.5" y="483.3877">BodyError (Exception exception)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="131.5" y="497.2236"/><ellipse cx="119.5" cy="506.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="82" x="128.5" y="511.0596">String getCode ()</text><ellipse cx="119.5" cy="520.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="123" x="128.5" y="524.8955">Exception getException ()</text><!--MD5=[9a218190a85a7a5cf1f408f9962c53bf]
class BodyErrorJsonDeserializer--><rect codeLine="123" fill="#FEFECE" height="111.5313" id="BodyErrorJsonDeserializer" style="stroke:#D4AC0D;stroke-width:1.5;" width="295" x="326.5" y="423.4688"/><ellipse cx="369.4" cy="443.5625" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M371.4,440.0625 Q371.6031,439.5625 371.8375,439.3125 Q372.0719,439.0625 372.3375,439.0625 Q372.8063,439.0625 373.1031,439.3438 Q373.4,439.625 373.4,440.2813 L373.4,441.8438 Q373.4,442.5 373.1188,442.7813 Q372.8375,443.0625 372.4,443.0625 Q372.0094,443.0625 371.7594,442.8906 Q371.5094,442.7188 371.4,442.2656 Q371.3531,441.9531 371.1813,441.7813 Q370.8688,441.4531 370.3063,441.2656 Q369.7438,441.0625 369.1813,441.0625 Q368.4781,441.0625 367.8844,441.3438 Q367.3063,441.625 366.8531,442.25 Q366.4,442.875 366.4,443.7344 L366.4,444.6563 Q366.4,445.6875 367.2438,446.375 Q368.0875,447.0625 369.5875,447.0625 Q370.4781,447.0625 371.1031,446.8594 Q371.4625,446.75 371.8688,446.3906 Q372.1344,446.1875 372.275,446.125 Q372.4156,446.0625 372.5875,446.0625 Q372.9156,446.0625 373.15,446.3281 Q373.4,446.5781 373.4,446.9375 Q373.4,447.2813 373.0563,447.6875 Q372.5563,448.2813 371.7594,448.6094 Q370.7125,449.0625 369.4313,449.0625 Q367.9313,449.0625 366.7281,448.4688 Q365.7594,448 365.0719,446.9844 Q364.4,445.9688 364.4,444.7656 L364.4,443.6719 Q364.4,442.4219 364.9938,441.3281 Q365.6031,440.2344 366.65,439.6563 Q367.7125,439.0625 368.9,439.0625 Q369.6188,439.0625 370.2438,439.3125 Q370.8688,439.5625 371.4,440.0625 Z " fill="#000000"/><ellipse cx="394.6" cy="443.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="400.6" y="440.9258">&lt;&lt;</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="162" x="414.6" y="440.9258">JsonDeserializer&lt;BodyError&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="576.6" y="440.9258">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="148" x="421.6" y="456.0195">BodyErrorJsonDeserializer</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="327.5" x2="620.5" y1="463.6563" y2="463.6563"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="327.5" x2="620.5" y1="471.6563" y2="471.6563"/><ellipse cx="337.5" cy="482.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="140" x="346.5" y="487.0752">BodyErrorJsonDeserializer ()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="349.5" y="500.9111"/><ellipse cx="337.5" cy="510.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="346.5" y="514.7471">BodyError deserialize (</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="457.5" y="514.7471">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="23" x="520.5" y="514.7471">json,</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="546.5" y="514.7471">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="42" x="573.5" y="514.7471">typeOfT,</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="370.5" y="528.583">JsonDeserializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="503.5" y="528.583">context)</text><!--MD5=[fc62ed06551ba356a446c123e88cc84c]
class ThrowableJsonSerializer--><rect codeLine="129" fill="#FEFECE" height="111.5313" id="ThrowableJsonSerializer" style="stroke:#D4AC0D;stroke-width:1.5;" width="293" x="656.5" y="423.4688"/><ellipse cx="703.75" cy="443.5625" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M705.75,440.0625 Q705.9531,439.5625 706.1875,439.3125 Q706.4219,439.0625 706.6875,439.0625 Q707.1563,439.0625 707.4531,439.3438 Q707.75,439.625 707.75,440.2813 L707.75,441.8438 Q707.75,442.5 707.4688,442.7813 Q707.1875,443.0625 706.75,443.0625 Q706.3594,443.0625 706.1094,442.8906 Q705.8594,442.7188 705.75,442.2656 Q705.7031,441.9531 705.5313,441.7813 Q705.2188,441.4531 704.6563,441.2656 Q704.0938,441.0625 703.5313,441.0625 Q702.8281,441.0625 702.2344,441.3438 Q701.6563,441.625 701.2031,442.25 Q700.75,442.875 700.75,443.7344 L700.75,444.6563 Q700.75,445.6875 701.5938,446.375 Q702.4375,447.0625 703.9375,447.0625 Q704.8281,447.0625 705.4531,446.8594 Q705.8125,446.75 706.2188,446.3906 Q706.4844,446.1875 706.625,446.125 Q706.7656,446.0625 706.9375,446.0625 Q707.2656,446.0625 707.5,446.3281 Q707.75,446.5781 707.75,446.9375 Q707.75,447.2813 707.4063,447.6875 Q706.9063,448.2813 706.1094,448.6094 Q705.0625,449.0625 703.7813,449.0625 Q702.2813,449.0625 701.0781,448.4688 Q700.1094,448 699.4219,446.9844 Q698.75,445.9688 698.75,444.7656 L698.75,443.6719 Q698.75,442.4219 699.3438,441.3281 Q699.9531,440.2344 701,439.6563 Q702.0625,439.0625 703.25,439.0625 Q703.9688,439.0625 704.5938,439.3125 Q705.2188,439.5625 705.75,440.0625 Z " fill="#000000"/><ellipse cx="729.25" cy="443.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="735.25" y="440.9258">&lt;&lt;</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="151" x="749.25" y="440.9258">JsonSerializer&lt;Throwable&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="900.25" y="440.9258">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="137" x="756.25" y="456.0195">ThrowableJsonSerializer</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="657.5" x2="948.5" y1="463.6563" y2="463.6563"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="657.5" x2="948.5" y1="471.6563" y2="471.6563"/><ellipse cx="667.5" cy="482.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="676.5" y="487.0752">ThrowableJsonSerializer ()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="679.5" y="500.9111"/><ellipse cx="667.5" cy="510.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="676.5" y="514.7471">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="121" x="739.5" y="514.7471">serialize (Throwable src,</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="863.5" y="514.7471">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="890.5" y="514.7471">typeOfSrc,</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="700.5" y="528.583">JsonSerializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="821.5" y="528.583">context)</text><!--MD5=[f0f8c8dfcaa5a8f8c3b99a1fa7726780]
class ByteArrayJsonAdapter--><rect codeLine="135" fill="#FEFECE" height="154.2969" id="ByteArrayJsonAdapter" style="stroke:#D4AC0D;stroke-width:1.5;" width="273" x="984.5" y="402.4688"/><ellipse cx="1028.75" cy="430.1094" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M1030.75,426.6094 Q1030.9531,426.1094 1031.1875,425.8594 Q1031.4219,425.6094 1031.6875,425.6094 Q1032.1563,425.6094 1032.4531,425.8906 Q1032.75,426.1719 1032.75,426.8281 L1032.75,428.3906 Q1032.75,429.0469 1032.4688,429.3281 Q1032.1875,429.6094 1031.75,429.6094 Q1031.3594,429.6094 1031.1094,429.4375 Q1030.8594,429.2656 1030.75,428.8125 Q1030.7031,428.5 1030.5313,428.3281 Q1030.2188,428 1029.6563,427.8125 Q1029.0938,427.6094 1028.5313,427.6094 Q1027.8281,427.6094 1027.2344,427.8906 Q1026.6563,428.1719 1026.2031,428.7969 Q1025.75,429.4219 1025.75,430.2813 L1025.75,431.2031 Q1025.75,432.2344 1026.5938,432.9219 Q1027.4375,433.6094 1028.9375,433.6094 Q1029.8281,433.6094 1030.4531,433.4063 Q1030.8125,433.2969 1031.2188,432.9375 Q1031.4844,432.7344 1031.625,432.6719 Q1031.7656,432.6094 1031.9375,432.6094 Q1032.2656,432.6094 1032.5,432.875 Q1032.75,433.125 1032.75,433.4844 Q1032.75,433.8281 1032.4063,434.2344 Q1031.9063,434.8281 1031.1094,435.1563 Q1030.0625,435.6094 1028.7813,435.6094 Q1027.2813,435.6094 1026.0781,435.0156 Q1025.1094,434.5469 1024.4219,433.5313 Q1023.75,432.5156 1023.75,431.3125 L1023.75,430.2188 Q1023.75,428.9688 1024.3438,427.875 Q1024.9531,426.7813 1026,426.2031 Q1027.0625,425.6094 1028.25,425.6094 Q1028.9688,425.6094 1029.5938,425.8594 Q1030.2188,426.1094 1030.75,426.6094 Z " fill="#000000"/><ellipse cx="1054.25" cy="429.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="1067.25" y="419.9258">&lt;&lt;</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="123" x="1081.25" y="419.9258">JsonSerializer&lt;byte[]&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="1204.25" y="419.9258">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="1060.25" y="435.0195">&lt;&lt;</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="137" x="1074.25" y="435.0195">JsonDeserializer&lt;byte[]&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="1211.25" y="435.0195">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="122" x="1081.75" y="450.1133">ByteArrayJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="985.5" x2="1256.5" y1="457.75" y2="457.75"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="985.5" x2="1256.5" y1="465.75" y2="465.75"/><ellipse cx="995.5" cy="476.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="123" x="1004.5" y="481.1689">ByteArrayJsonAdapter ()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="1007.5" y="495.0049"/><ellipse cx="995.5" cy="504.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="1004.5" y="508.8408">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="1067.5" y="508.8408">serialize (byte[] src,</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="1166.5" y="508.8408">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="1193.5" y="508.8408">typeOfSrc,</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="1028.5" y="522.6768">JsonSerializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="1149.5" y="522.6768">context)</text><ellipse cx="995.5" cy="532.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="89" x="1004.5" y="536.5127">byte[] deserialize (</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="1093.5" y="536.5127">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="23" x="1156.5" y="536.5127">json,</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="1182.5" y="536.5127">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="42" x="1209.5" y="536.5127">typeOfT,</text><text fill="#000000" filter="url(#b128cbi83d19r00)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="1028.5" y="550.3486">JsonDeserializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="1161.5" y="550.3486">context)</text><!--MD5=[c34d1faeeea216c406a2d0eb3a604534]
class ContactCardCommonProtocol--><rect codeLine="145" fill="#FEFECE" height="103.3438" id="ContactCardCommonProtocol" style="stroke:#D4AC0D;stroke-width:1.5;" width="239" x="756.5" y="662.4688"/><ellipse cx="785" cy="678.4688" fill="#EB937F" rx="11" ry="11" style="stroke:#EB93DF;stroke-width:1.0;"/><path d="M783.5,679.4688 L783.5,681.4688 L787.5,681.4688 L787.5,680.4688 L787.5,679.9844 L788.125,679.4688 L788.5,679.4688 L788.875,679.4688 L789.5,679.9844 L789.5,680.4688 L789.5,683.4688 L781.5,683.4688 L781.0156,683.4688 L780.5,682.8438 L780.5,682.4688 L780.5,682.0938 L781.0156,681.4688 L781.5,681.4688 L781.5,681.4688 L781.5,675.4688 L781.5,675.4688 L781.0156,675.4688 L780.5,674.8438 L780.5,674.4688 L780.5,674.0938 L781.0156,673.4688 L781.5,673.4688 L789.5,673.4688 L789.5,676.4688 L789.5,676.9531 L788.875,677.4688 L788.5,677.4688 L788.125,677.4688 L787.5,676.9531 L787.5,676.4688 L787.5,675.4688 L783.5,675.4688 L783.5,677.4688 L784.5,677.4688 L784.5,676.9844 L784.5,676.9844 L785.125,676.4688 L785.5,676.4688 L785.875,676.4688 L786.5,676.9844 L786.5,677.4688 L786.5,679.4688 L786.5,679.9531 L785.875,680.4688 L785.875,680.4688 L785.5,680.4688 L785.125,680.4688 L784.5,679.9531 L784.5,679.9531 L784.5,679.4688 L783.5,679.4688 Z " fill="#000000"/><ellipse cx="807" cy="677.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="166" x="813" y="683.3789">ContactCardCommonProtocol</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="757.5" x2="994.5" y1="694.4688" y2="694.4688"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="59" x="762.5" y="709.8877">ISO_7816_3</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="79" x="762.5" y="723.7236">ISO_7816_3_TO</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="77" x="762.5" y="737.5596">ISO_7816_3_T1</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="227" x="762.5" y="751.3955">INNOVATRON_HIGH_SPEED_PROTOCOL_SAM</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="757.5" x2="994.5" y1="757.8125" y2="757.8125"/><!--MD5=[25bf49c9220c51f3412e028606b93688]
class ContactlessCardCommonProtocol--><rect codeLine="151" fill="#FEFECE" height="131.0156" id="ContactlessCardCommonProtocol" style="stroke:#D4AC0D;stroke-width:1.5;" width="231" x="490.5" y="648.4688"/><ellipse cx="505.5" cy="664.4688" fill="#EB937F" rx="11" ry="11" style="stroke:#EB93DF;stroke-width:1.0;"/><path d="M504,665.4688 L504,667.4688 L508,667.4688 L508,666.4688 L508,665.9844 L508.625,665.4688 L509,665.4688 L509.375,665.4688 L510,665.9844 L510,666.4688 L510,669.4688 L502,669.4688 L501.5156,669.4688 L501,668.8438 L501,668.4688 L501,668.0938 L501.5156,667.4688 L502,667.4688 L502,667.4688 L502,661.4688 L502,661.4688 L501.5156,661.4688 L501,660.8438 L501,660.4688 L501,660.0938 L501.5156,659.4688 L502,659.4688 L510,659.4688 L510,662.4688 L510,662.9531 L509.375,663.4688 L509,663.4688 L508.625,663.4688 L508,662.9531 L508,662.4688 L508,661.4688 L504,661.4688 L504,663.4688 L505,663.4688 L505,662.9844 L505,662.9844 L505.625,662.4688 L506,662.4688 L506.375,662.4688 L507,662.9844 L507,663.4688 L507,665.4688 L507,665.9531 L506.375,666.4688 L506.375,666.4688 L506,666.4688 L505.625,666.4688 L505,665.9531 L505,665.9531 L505,665.4688 L504,665.4688 Z " fill="#000000"/><ellipse cx="524.5" cy="663.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="188" x="530.5" y="669.3789">ContactlessCardCommonProtocol</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="491.5" x2="720.5" y1="680.4688" y2="680.4688"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="496.5" y="695.8877">ISO_14443_4</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="113" x="496.5" y="709.7236">NFC_A_ISO_14443_3A</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="496.5" y="723.5596">NFC_B_ISO_14443_3B</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="496.5" y="737.3955">NFC_F_JIS_6319_4</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="93" x="496.5" y="751.2314">NFC_V_ISO_15693</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="151" x="496.5" y="765.0674">INNOVATRON_B_PRIME_CARD</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="491.5" x2="720.5" y1="771.4844" y2="771.4844"/><!--MD5=[8131b4a44a46583043de07eab64a92b3]
link JsonUtil to BodyError--><!--MD5=[d2ff078f209ffd91996285657b7790b6]
link BodyError to protocol--><!--MD5=[d4f773b4dc2ac718f7fdcc66720bfc3b]
link BodyError to Assert--><!--MD5=[6757456dba33f4ac62c37eb7e7994c1a]
link Assert to ByteArrayUtil--><!--MD5=[6bb83c1742bc0e576ff68716e4c88e08]
link Assert to ApduUtil--><!--MD5=[51c341f8810c88afd783f70947e1e58c]
link Assert to BerTlvUtil--><!--MD5=[143569ac9ade465ae38e4ca7960a9cbc]
link IntegerJsonAdapter to ShortJsonAdapter--><!--MD5=[86ac63d3de75bba5b500deaeb7c6b390]
link ShortJsonAdapter to ByteJsonAdapter--><!--MD5=[4b79b04879894f31d1cee3ccb88bd6dd]
link IntegerJsonAdapter to BodyErrorJsonDeserializer--><!--MD5=[eeae8c364f66fa374381339649087f65]
link BodyErrorJsonDeserializer to ThrowableJsonSerializer--><!--MD5=[d29c4377d54c2e013645cda96df54644]
link ThrowableJsonSerializer to ByteArrayJsonAdapter--><!--MD5=[e8f35d81189c15e887e8742bdba1b291]
@startuml
title
    Keyple - keyple-util-java-lib - 2.1.+ (14/02/2022)
end title

' == THEME ==

'Couleurs issues de : https://htmlcolorcodes.com/fr/tableau-de-couleur/tableau-de-couleur-design-plat/
!define C_GREY1 F8F9F9
!define C_GREY2 F2F3F4
!define C_GREY3 E5E7E9
!define C_GREY4 D7DBDD
!define C_GREY5 CACFD2
!define C_GREY6 BDC3C7
!define C_LINK 3498DB
!define C_USE 27AE60

skinparam Shadowing false
skinparam ClassFontStyle italic
skinparam ClassBorderColor #D4AC0D
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
' Red
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
' Purple
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
' blue
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
' Green
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
' Grey
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype

' == CONTENT ==

legend top
    __Colors legend__ :
    * __External API references__ :
    ** <back:yellow>**com.google.code.gson**</back>
end legend

package "org.eclipse.keyple.core.util" as util {
    +class "**final** Assert" as Assert {
        +{static} Assert getInstance ()

        +Assert notNull (Object obj, String name)
        +Assert notEmpty (String obj, String name)
        +Assert notEmpty (Collection<? extends Object> obj, String name)
        +Assert notEmpty (byte[] obj, String name)
        +Assert isTrue (Boolean condition, String name)
        +Assert greaterOrEqual (Integer number, int minValue, String name)
        +Assert isEqual (Integer number, int value, String name)
        +Assert isInRange (Integer number, int minValue, int maxValue, String name)
    }
    +class "**final** ByteArrayUtil" as ByteArrayUtil {
        +{static} boolean isValidHexString (String hexString)
        +{static} String normalizeHexString (String hexString)
        +{static} byte[] fromHex (String hex)
        +{static} String toHex (byte[] byteArray)
        +{static} int twoBytesToInt (byte[] bytes, int offset)
        +{static} int twoBytesSignedToInt (byte[] bytes, int offset)
        +{static} int threeBytesToInt (byte[] bytes, int offset)
        +{static} int threeBytesSignedToInt (byte[] bytes, int offset)
        +{static} int fourBytesToInt (byte[] bytes, int offset)
    }
    +class "**final** ApduUtil" as ApduUtil {
        +{static} byte[] build (byte cla, byte ins, byte p1, byte p2, byte[] dataIn, Byte le)
        +{static} boolean isCase4 (byte[] apduCommand)
    }
    +class BerTlvUtil {
        +{static} Map<Integer, byte[]> parseSimple (byte[] tlvStructure, boolean primitiveOnly)
        +{static} boolean isConstructed (int tagId)
    }
    package json {
        +class "**final** JsonUtil" as JsonUtil {
            +{static} <back:yellow>Gson</back> getParser ()
            +{static} void registerTypeAdapter (Class<?> matchingClass,
                \tObject adapter, boolean withSubclasses)

            +{static} String toJson (Object obj)
        }
        +class "<<<back:yellow>JsonSerializer<Integer></back>>>\n<<<back:yellow>JsonDeserializer<Integer></back>>>\nIntegerJsonAdapter" as IntegerJsonAdapter {
            +IntegerJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Integer src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Integer deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Short></back>>>\n<<<back:yellow>JsonDeserializer<Short></back>>>\nShortJsonAdapter" as ShortJsonAdapter {
            +ShortJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Short src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Short deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Byte></back>>>\n<<<back:yellow>JsonDeserializer<Byte></back>>>\nByteJsonAdapter" as ByteJsonAdapter {
            +ByteJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Byte src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Byte deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class BodyError {
            +BodyError (Exception exception)

            +String getCode ()
            +Exception getException ()
        }
        +class "<<<back:yellow>JsonDeserializer<BodyError></back>>>\nBodyErrorJsonDeserializer" as BodyErrorJsonDeserializer {
            +BodyErrorJsonDeserializer ()

            +BodyError deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Throwable></back>>>\nThrowableJsonSerializer" as ThrowableJsonSerializer {
            +ThrowableJsonSerializer ()

            +<back:yellow>JsonElement</back> serialize (Throwable src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<byte[]></back>>>\n<<<back:yellow>JsonDeserializer<byte[]></back>>>\nByteArrayJsonAdapter" as ByteArrayJsonAdapter {
            +ByteArrayJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (byte[] src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +byte[] deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
    }
    package protocol {
        +enum ContactCardCommonProtocol {
            ISO_7816_3
            ISO_7816_3_TO
            ISO_7816_3_T1
            INNOVATRON_HIGH_SPEED_PROTOCOL_SAM
        }
        +enum ContactlessCardCommonProtocol {
            ISO_14443_4
            NFC_A_ISO_14443_3A
            NFC_B_ISO_14443_3B
            NFC_F_JIS_6319_4
            NFC_V_ISO_15693
            INNOVATRON_B_PRIME_CARD
        }
    }
}

' Associations

' == LAYOUT ==

JsonUtil -[hidden]- BodyError

BodyError -[hidden]- protocol
BodyError -[hidden]- Assert

Assert -[hidden]- ByteArrayUtil
Assert -[hidden]- ApduUtil
Assert -[hidden]- BerTlvUtil

' == STYLE ==

package util #C_GREY1 {}
package json #C_GREY2 {}
package protocol #C_GREY2 {}

@enduml

@startuml
title
    Keyple - keyple-util-java-lib - 2.1.+ (14/02/2022)
end title



skinparam Shadowing false
skinparam ClassFontStyle italic
skinparam ClassBorderColor #D4AC0D
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype


legend top
    __Colors legend__ :
    * __External API references__ :
    ** <back:yellow>**com.google.code.gson**</back>
end legend

package "org.eclipse.keyple.core.util" as util {
    +class "**final** Assert" as Assert {
        +{static} Assert getInstance ()

        +Assert notNull (Object obj, String name)
        +Assert notEmpty (String obj, String name)
        +Assert notEmpty (Collection<? extends Object> obj, String name)
        +Assert notEmpty (byte[] obj, String name)
        +Assert isTrue (Boolean condition, String name)
        +Assert greaterOrEqual (Integer number, int minValue, String name)
        +Assert isEqual (Integer number, int value, String name)
        +Assert isInRange (Integer number, int minValue, int maxValue, String name)
    }
    +class "**final** ByteArrayUtil" as ByteArrayUtil {
        +{static} boolean isValidHexString (String hexString)
        +{static} String normalizeHexString (String hexString)
        +{static} byte[] fromHex (String hex)
        +{static} String toHex (byte[] byteArray)
        +{static} int twoBytesToInt (byte[] bytes, int offset)
        +{static} int twoBytesSignedToInt (byte[] bytes, int offset)
        +{static} int threeBytesToInt (byte[] bytes, int offset)
        +{static} int threeBytesSignedToInt (byte[] bytes, int offset)
        +{static} int fourBytesToInt (byte[] bytes, int offset)
    }
    +class "**final** ApduUtil" as ApduUtil {
        +{static} byte[] build (byte cla, byte ins, byte p1, byte p2, byte[] dataIn, Byte le)
        +{static} boolean isCase4 (byte[] apduCommand)
    }
    +class BerTlvUtil {
        +{static} Map<Integer, byte[]> parseSimple (byte[] tlvStructure, boolean primitiveOnly)
        +{static} boolean isConstructed (int tagId)
    }
    package json {
        +class "**final** JsonUtil" as JsonUtil {
            +{static} <back:yellow>Gson</back> getParser ()
            +{static} void registerTypeAdapter (Class<?> matchingClass,
                \tObject adapter, boolean withSubclasses)

            +{static} String toJson (Object obj)
        }
        +class "<<<back:yellow>JsonSerializer<Integer></back>>>\n<<<back:yellow>JsonDeserializer<Integer></back>>>\nIntegerJsonAdapter" as IntegerJsonAdapter {
            +IntegerJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Integer src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Integer deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Short></back>>>\n<<<back:yellow>JsonDeserializer<Short></back>>>\nShortJsonAdapter" as ShortJsonAdapter {
            +ShortJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Short src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Short deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Byte></back>>>\n<<<back:yellow>JsonDeserializer<Byte></back>>>\nByteJsonAdapter" as ByteJsonAdapter {
            +ByteJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Byte src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Byte deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class BodyError {
            +BodyError (Exception exception)

            +String getCode ()
            +Exception getException ()
        }
        +class "<<<back:yellow>JsonDeserializer<BodyError></back>>>\nBodyErrorJsonDeserializer" as BodyErrorJsonDeserializer {
            +BodyErrorJsonDeserializer ()

            +BodyError deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Throwable></back>>>\nThrowableJsonSerializer" as ThrowableJsonSerializer {
            +ThrowableJsonSerializer ()

            +<back:yellow>JsonElement</back> serialize (Throwable src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<byte[]></back>>>\n<<<back:yellow>JsonDeserializer<byte[]></back>>>\nByteArrayJsonAdapter" as ByteArrayJsonAdapter {
            +ByteArrayJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (byte[] src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +byte[] deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
    }
    package protocol {
        +enum ContactCardCommonProtocol {
            ISO_7816_3
            ISO_7816_3_TO
            ISO_7816_3_T1
            INNOVATRON_HIGH_SPEED_PROTOCOL_SAM
        }
        +enum ContactlessCardCommonProtocol {
            ISO_14443_4
            NFC_A_ISO_14443_3A
            NFC_B_ISO_14443_3B
            NFC_F_JIS_6319_4
            NFC_V_ISO_15693
            INNOVATRON_B_PRIME_CARD
        }
    }
}



JsonUtil -[hidden]- BodyError

BodyError -[hidden]- protocol
BodyError -[hidden]- Assert

Assert -[hidden]- ByteArrayUtil
Assert -[hidden]- ApduUtil
Assert -[hidden]- BerTlvUtil


package util #F8F9F9 {}
package json #F2F3F4 {}
package protocol #F2F3F4 {}

@enduml

PlantUML version 1.2022.0(Tue Jan 11 17:16:42 CET 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: fr
Country: FR
--></g></svg>