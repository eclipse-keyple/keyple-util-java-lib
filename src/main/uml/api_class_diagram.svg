<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1363px" preserveAspectRatio="none" style="width:1247px;height:1363px;background:#FFFFFF;" version="1.1" viewBox="0 0 1247 1363" width="1247px" zoomAndPan="magnify"><defs><filter height="1" id="b162iuwskfhvog0" width="1" x="0" y="0"><feFlood flood-color="#FFFF00" result="flood"/><feComposite in="SourceGraphic" in2="flood" operator="over"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacing" textLength="379" x="427.5" y="18.6855">Keyple - keyple-util-java-lib - 2.1.+ (15/03/2022)</text><rect fill="#DDDDDD" height="62.8281" rx="5" ry="5" style="stroke:#000000;stroke-width:1.0;" width="198" x="517.5" y="30.6406"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="88" x="523.5" y="50.1738">Colors legend</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="615.5" y="50.1738">:</text><ellipse cx="529" cy="63.3594" fill="#000000" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:0.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="536.5" y="67.7832">External API references</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="688.5" y="67.7832">:</text><rect fill="#000000" height="3.5" style="stroke:#000000;stroke-width:0.0;" width="3.5" x="544.5" y="80.4688"/><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="160" x="549.5" y="85.3926">com.google.code.gson</text><!--MD5=[3e81cc6ee7da4fa8b6adc12b329096f6]
cluster util--><polygon fill="#F8F9F9" points="16,108.4688,213,108.4688,220,132.0781,1230,132.0781,1230,1356.4688,16,1356.4688,16,108.4688" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="16" x2="220" y1="132.0781" y2="132.0781"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="191" x="20" y="125.002">org.eclipse.keyple.core.util</text><!--MD5=[4ac75f36695ece63879c728112de416c]
cluster json--><polygon fill="#F2F3F4" points="40,698.4688,76,698.4688,83,722.0781,1206,722.0781,1206,1332.4688,40,1332.4688,40,698.4688" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="40" x2="83" y1="722.0781" y2="722.0781"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="30" x="44" y="715.002">json</text><!--MD5=[59e9faf83e5ffb743ef5750f57e8e967]
cluster protocol--><polygon fill="#F2F3F4" points="668,156.9688,733,156.9688,740,180.5781,1206,180.5781,1206,339.9688,668,339.9688,668,156.9688" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="668" x2="740" y1="180.5781" y2="180.5781"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="59" x="672" y="173.502">protocol</text><!--MD5=[748d96b9802ee0d94a77604226d4f903]
class Assert--><rect codeLine="54" fill="#FEFECE" height="200.1953" id="Assert" style="stroke:#D4AC0D;stroke-width:1.5;" width="387" x="262.5" y="158.4688"/><ellipse cx="415.75" cy="174.4688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M417.75,170.9688 Q417.9531,170.4688 418.1875,170.2188 Q418.4219,169.9688 418.6875,169.9688 Q419.1563,169.9688 419.4531,170.25 Q419.75,170.5313 419.75,171.1875 L419.75,172.75 Q419.75,173.4063 419.4688,173.6875 Q419.1875,173.9688 418.75,173.9688 Q418.3594,173.9688 418.1094,173.7969 Q417.8594,173.625 417.75,173.1719 Q417.7031,172.8594 417.5313,172.6875 Q417.2188,172.3594 416.6563,172.1719 Q416.0938,171.9688 415.5313,171.9688 Q414.8281,171.9688 414.2344,172.25 Q413.6563,172.5313 413.2031,173.1563 Q412.75,173.7813 412.75,174.6406 L412.75,175.5625 Q412.75,176.5938 413.5938,177.2813 Q414.4375,177.9688 415.9375,177.9688 Q416.8281,177.9688 417.4531,177.7656 Q417.8125,177.6563 418.2188,177.2969 Q418.4844,177.0938 418.625,177.0313 Q418.7656,176.9688 418.9375,176.9688 Q419.2656,176.9688 419.5,177.2344 Q419.75,177.4844 419.75,177.8438 Q419.75,178.1875 419.4063,178.5938 Q418.9063,179.1875 418.1094,179.5156 Q417.0625,179.9688 415.7813,179.9688 Q414.2813,179.9688 413.0781,179.375 Q412.1094,178.9063 411.4219,177.8906 Q410.75,176.875 410.75,175.6719 L410.75,174.5781 Q410.75,173.3281 411.3438,172.2344 Q411.9531,171.1406 413,170.5625 Q414.0625,169.9688 415.25,169.9688 Q415.9688,169.9688 416.5938,170.2188 Q417.2188,170.4688 417.75,170.9688 Z " fill="#000000"/><ellipse cx="441.25" cy="173.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="24" x="447.25" y="179.3789">final</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="34" x="474.25" y="179.3789">Assert</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="263.5" x2="648.5" y1="190.4688" y2="190.4688"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="263.5" x2="648.5" y1="198.4688" y2="198.4688"/><ellipse cx="273.5" cy="209.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="103" x="282.5" y="213.8877">Assert getInstance ()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="285.5" y="227.7236"/><ellipse cx="273.5" cy="237.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="282.5" y="241.5596">Assert notNull (Object obj, String name)</text><ellipse cx="273.5" cy="250.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="199" x="282.5" y="255.3955">Assert notEmpty (String obj, String name)</text><ellipse cx="273.5" cy="264.8125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="235" x="282.5" y="269.2314">Assert notEmpty (Collection&lt;?&gt; obj, String name)</text><ellipse cx="273.5" cy="278.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="198" x="282.5" y="283.0674">Assert notEmpty (byte[] obj, String name)</text><ellipse cx="273.5" cy="292.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="225" x="282.5" y="296.9033">Assert isTrue (Boolean condition, String name)</text><ellipse cx="273.5" cy="306.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="282.5" y="310.7393">Assert greaterOrEqual (Integer number, int minValue, String name)</text><ellipse cx="273.5" cy="320.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="282.5" y="324.5752">Assert isEqual (Integer number, int value, String name)</text><ellipse cx="273.5" cy="333.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="361" x="282.5" y="338.4111">Assert isInRange (Integer number, int minValue, int maxValue, String name)</text><ellipse cx="273.5" cy="347.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="214" x="282.5" y="352.2471">Assert isHexString (String hex, String name)</text><!--MD5=[27f29ba09c13b8ede23502b37e39f025]
class ByteArrayUtil--><rect codeLine="67" fill="#FEFECE" height="241.7031" id="ByteArrayUtil" style="stroke:#D4AC0D;stroke-width:1.5;" width="339" x="32.5" y="432.4688"/><ellipse cx="143.25" cy="448.4688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M145.25,444.9688 Q145.4531,444.4688 145.6875,444.2188 Q145.9219,443.9688 146.1875,443.9688 Q146.6563,443.9688 146.9531,444.25 Q147.25,444.5313 147.25,445.1875 L147.25,446.75 Q147.25,447.4063 146.9688,447.6875 Q146.6875,447.9688 146.25,447.9688 Q145.8594,447.9688 145.6094,447.7969 Q145.3594,447.625 145.25,447.1719 Q145.2031,446.8594 145.0313,446.6875 Q144.7188,446.3594 144.1563,446.1719 Q143.5938,445.9688 143.0313,445.9688 Q142.3281,445.9688 141.7344,446.25 Q141.1563,446.5313 140.7031,447.1563 Q140.25,447.7813 140.25,448.6406 L140.25,449.5625 Q140.25,450.5938 141.0938,451.2813 Q141.9375,451.9688 143.4375,451.9688 Q144.3281,451.9688 144.9531,451.7656 Q145.3125,451.6563 145.7188,451.2969 Q145.9844,451.0938 146.125,451.0313 Q146.2656,450.9688 146.4375,450.9688 Q146.7656,450.9688 147,451.2344 Q147.25,451.4844 147.25,451.8438 Q147.25,452.1875 146.9063,452.5938 Q146.4063,453.1875 145.6094,453.5156 Q144.5625,453.9688 143.2813,453.9688 Q141.7813,453.9688 140.5781,453.375 Q139.6094,452.9063 138.9219,451.8906 Q138.25,450.875 138.25,449.6719 L138.25,448.5781 Q138.25,447.3281 138.8438,446.2344 Q139.4531,445.1406 140.5,444.5625 Q141.5625,443.9688 142.75,443.9688 Q143.4688,443.9688 144.0938,444.2188 Q144.7188,444.4688 145.25,444.9688 Z " fill="#000000"/><ellipse cx="168.75" cy="447.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="24" x="174.75" y="453.3789">final</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="71" x="201.75" y="453.3789">ByteArrayUtil</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="33.5" x2="370.5" y1="464.4688" y2="464.4688"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="33.5" x2="370.5" y1="472.4688" y2="472.4688"/><ellipse cx="43.5" cy="483.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="271" x="52.5" y="487.8877">byte[] extractBytes (byte[] src, int bitOffset, int nbBytes)</text><ellipse cx="43.5" cy="497.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="313" x="52.5" y="501.7236">int extractInt (byte[] src, int offset, int nbBytes, boolean isSigned)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="55.5" y="515.5596"/><ellipse cx="43.5" cy="524.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="line-through" textLength="180" x="52.5" y="529.3955">boolean isValidHexString (String hex)</text><ellipse cx="43.5" cy="538.8125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="line-through" textLength="184" x="52.5" y="543.2314">String normalizeHexString (String hex)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="55.5" y="557.0674"/><ellipse cx="43.5" cy="566.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="line-through" textLength="131" x="52.5" y="570.9033">byte[] fromHex (String hex)</text><ellipse cx="43.5" cy="580.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="line-through" textLength="121" x="52.5" y="584.7393">String toHex (byte[] data)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="55.5" y="598.5752"/><ellipse cx="43.5" cy="607.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="line-through" textLength="201" x="52.5" y="612.4111">int twoBytesToInt (byte[] bytes, int offset)</text><ellipse cx="43.5" cy="621.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="line-through" textLength="234" x="52.5" y="626.2471">int twoBytesSignedToInt (byte[] bytes, int offset)</text><ellipse cx="43.5" cy="635.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="line-through" textLength="207" x="52.5" y="640.083">int threeBytesToInt (byte[] bytes, int offset)</text><ellipse cx="43.5" cy="649.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="line-through" textLength="240" x="52.5" y="653.9189">int threeBytesSignedToInt (byte[] bytes, int offset)</text><ellipse cx="43.5" cy="663.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="line-through" textLength="202" x="52.5" y="667.7549">int fourBytesToInt (byte[] bytes, int offset)</text><!--MD5=[844fd0b684b3a1a64c715634134b0ce5]
class HexUtil--><rect codeLine="83" fill="#FEFECE" height="227.8672" id="HexUtil" style="stroke:#D4AC0D;stroke-width:1.5;" width="159" x="50.5" y="144.4688"/><ellipse cx="87.55" cy="160.4688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M89.55,156.9688 Q89.7531,156.4688 89.9875,156.2188 Q90.2219,155.9688 90.4875,155.9688 Q90.9563,155.9688 91.2531,156.25 Q91.55,156.5313 91.55,157.1875 L91.55,158.75 Q91.55,159.4063 91.2688,159.6875 Q90.9875,159.9688 90.55,159.9688 Q90.1594,159.9688 89.9094,159.7969 Q89.6594,159.625 89.55,159.1719 Q89.5031,158.8594 89.3313,158.6875 Q89.0188,158.3594 88.4563,158.1719 Q87.8938,157.9688 87.3313,157.9688 Q86.6281,157.9688 86.0344,158.25 Q85.4563,158.5313 85.0031,159.1563 Q84.55,159.7813 84.55,160.6406 L84.55,161.5625 Q84.55,162.5938 85.3938,163.2813 Q86.2375,163.9688 87.7375,163.9688 Q88.6281,163.9688 89.2531,163.7656 Q89.6125,163.6563 90.0188,163.2969 Q90.2844,163.0938 90.425,163.0313 Q90.5656,162.9688 90.7375,162.9688 Q91.0656,162.9688 91.3,163.2344 Q91.55,163.4844 91.55,163.8438 Q91.55,164.1875 91.2063,164.5938 Q90.7063,165.1875 89.9094,165.5156 Q88.8625,165.9688 87.5813,165.9688 Q86.0813,165.9688 84.8781,165.375 Q83.9094,164.9063 83.2219,163.8906 Q82.55,162.875 82.55,161.6719 L82.55,160.5781 Q82.55,159.3281 83.1438,158.2344 Q83.7531,157.1406 84.8,156.5625 Q85.8625,155.9688 87.05,155.9688 Q87.7688,155.9688 88.3938,156.2188 Q89.0188,156.4688 89.55,156.9688 Z " fill="#000000"/><ellipse cx="111.45" cy="159.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="24" x="117.45" y="165.3789">final</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="40" x="144.45" y="165.3789">HexUtil</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="51.5" x2="208.5" y1="176.4688" y2="176.4688"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="51.5" x2="208.5" y1="184.4688" y2="184.4688"/><ellipse cx="61.5" cy="195.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="133" x="70.5" y="199.8877">boolean isValid (String hex)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="73.5" y="213.7236"/><ellipse cx="61.5" cy="223.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="127" x="70.5" y="227.5596">byte[] toBytes (String hex)</text><ellipse cx="61.5" cy="236.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="115" x="70.5" y="241.3955">byte toByte (String hex)</text><ellipse cx="61.5" cy="250.8125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="123" x="70.5" y="255.2314">short toShort (String hex)</text><ellipse cx="61.5" cy="264.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="94" x="70.5" y="269.0674">int toInt (String hex)</text><ellipse cx="61.5" cy="278.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="116" x="70.5" y="282.9033">long toLong (String hex)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="73.5" y="296.7393"/><ellipse cx="61.5" cy="306.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="114" x="70.5" y="310.5752">String toHex (byte[] val)</text><ellipse cx="61.5" cy="319.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="108" x="70.5" y="324.4111">String toHex (byte val)</text><ellipse cx="61.5" cy="333.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="112" x="70.5" y="338.2471">String toHex (short val)</text><ellipse cx="61.5" cy="347.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="98" x="70.5" y="352.083">String toHex (int val)</text><ellipse cx="61.5" cy="361.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="107" x="70.5" y="365.9189">String toHex (long val)</text><!--MD5=[458b3a9396e0ca5416a37f6d6326ccaf]
class ApduUtil--><rect codeLine="98" fill="#FEFECE" height="89.5078" id="ApduUtil" style="stroke:#D4AC0D;stroke-width:1.5;" width="359" x="406.5" y="508.4688"/><ellipse cx="539.25" cy="524.4688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M541.25,520.9688 Q541.4531,520.4688 541.6875,520.2188 Q541.9219,519.9688 542.1875,519.9688 Q542.6563,519.9688 542.9531,520.25 Q543.25,520.5313 543.25,521.1875 L543.25,522.75 Q543.25,523.4063 542.9688,523.6875 Q542.6875,523.9688 542.25,523.9688 Q541.8594,523.9688 541.6094,523.7969 Q541.3594,523.625 541.25,523.1719 Q541.2031,522.8594 541.0313,522.6875 Q540.7188,522.3594 540.1563,522.1719 Q539.5938,521.9688 539.0313,521.9688 Q538.3281,521.9688 537.7344,522.25 Q537.1563,522.5313 536.7031,523.1563 Q536.25,523.7813 536.25,524.6406 L536.25,525.5625 Q536.25,526.5938 537.0938,527.2813 Q537.9375,527.9688 539.4375,527.9688 Q540.3281,527.9688 540.9531,527.7656 Q541.3125,527.6563 541.7188,527.2969 Q541.9844,527.0938 542.125,527.0313 Q542.2656,526.9688 542.4375,526.9688 Q542.7656,526.9688 543,527.2344 Q543.25,527.4844 543.25,527.8438 Q543.25,528.1875 542.9063,528.5938 Q542.4063,529.1875 541.6094,529.5156 Q540.5625,529.9688 539.2813,529.9688 Q537.7813,529.9688 536.5781,529.375 Q535.6094,528.9063 534.9219,527.8906 Q534.25,526.875 534.25,525.6719 L534.25,524.5781 Q534.25,523.3281 534.8438,522.2344 Q535.4531,521.1406 536.5,520.5625 Q537.5625,519.9688 538.75,519.9688 Q539.4688,519.9688 540.0938,520.2188 Q540.7188,520.4688 541.25,520.9688 Z " fill="#000000"/><ellipse cx="564.75" cy="523.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="24" x="570.75" y="529.3789">final</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="47" x="597.75" y="529.3789">ApduUtil</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="407.5" x2="764.5" y1="540.4688" y2="540.4688"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="407.5" x2="764.5" y1="548.4688" y2="548.4688"/><ellipse cx="417.5" cy="559.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="333" x="426.5" y="563.8877">byte[] build (byte cla, byte ins, byte p1, byte p2, byte[] dataIn, Byte le)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="429.5" y="577.7236"/><ellipse cx="417.5" cy="587.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="192" x="426.5" y="591.5596">boolean isCase4 (byte[] apduCommand)</text><!--MD5=[967b5bdf980b1f0d408075c95cfc8699]
class BerTlvUtil--><rect codeLine="103" fill="#FEFECE" height="103.3438" id="BerTlvUtil" style="stroke:#D4AC0D;stroke-width:1.5;" width="391" x="800.5" y="501.9688"/><ellipse cx="959.75" cy="517.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M961.75,514.4688 Q961.9531,513.9688 962.1875,513.7188 Q962.4219,513.4688 962.6875,513.4688 Q963.1563,513.4688 963.4531,513.75 Q963.75,514.0313 963.75,514.6875 L963.75,516.25 Q963.75,516.9063 963.4688,517.1875 Q963.1875,517.4688 962.75,517.4688 Q962.3594,517.4688 962.1094,517.2969 Q961.8594,517.125 961.75,516.6719 Q961.7031,516.3594 961.5313,516.1875 Q961.2188,515.8594 960.6563,515.6719 Q960.0938,515.4688 959.5313,515.4688 Q958.8281,515.4688 958.2344,515.75 Q957.6563,516.0313 957.2031,516.6563 Q956.75,517.2813 956.75,518.1406 L956.75,519.0625 Q956.75,520.0938 957.5938,520.7813 Q958.4375,521.4688 959.9375,521.4688 Q960.8281,521.4688 961.4531,521.2656 Q961.8125,521.1563 962.2188,520.7969 Q962.4844,520.5938 962.625,520.5313 Q962.7656,520.4688 962.9375,520.4688 Q963.2656,520.4688 963.5,520.7344 Q963.75,520.9844 963.75,521.3438 Q963.75,521.6875 963.4063,522.0938 Q962.9063,522.6875 962.1094,523.0156 Q961.0625,523.4688 959.7813,523.4688 Q958.2813,523.4688 957.0781,522.875 Q956.1094,522.4063 955.4219,521.3906 Q954.75,520.375 954.75,519.1719 L954.75,518.0781 Q954.75,516.8281 955.3438,515.7344 Q955.9531,514.6406 957,514.0625 Q958.0625,513.4688 959.25,513.4688 Q959.9688,513.4688 960.5938,513.7188 Q961.2188,513.9688 961.75,514.4688 Z " fill="#000000"/><ellipse cx="985.25" cy="517.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="53" x="991.25" y="522.8789">BerTlvUtil</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="801.5" x2="1190.5" y1="533.9688" y2="533.9688"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="801.5" x2="1190.5" y1="541.9688" y2="541.9688"/><ellipse cx="811.5" cy="552.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="365" x="820.5" y="557.3877">Map&lt;Integer, byte[]&gt; parseSimple (byte[] tlvStructure, boolean primitiveOnly)</text><ellipse cx="811.5" cy="566.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="363" x="820.5" y="571.2236">Map&lt;Integer, List&lt;byte[]&gt;&gt; parse (byte[] tlvStructure, boolean primitiveOnly)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="823.5" y="585.0596"/><ellipse cx="811.5" cy="594.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="156" x="820.5" y="598.8955">boolean isConstructed (int tagId)</text><!--MD5=[ff1fef1d5f830c31212d01e346df5a91]
class JsonUtil--><rect codeLine="110" fill="#FEFECE" height="117.1797" id="JsonUtil" style="stroke:#D4AC0D;stroke-width:1.5;" width="277" x="56.5" y="752.9688"/><ellipse cx="149.75" cy="768.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M151.75,765.4688 Q151.9531,764.9688 152.1875,764.7188 Q152.4219,764.4688 152.6875,764.4688 Q153.1563,764.4688 153.4531,764.75 Q153.75,765.0313 153.75,765.6875 L153.75,767.25 Q153.75,767.9063 153.4688,768.1875 Q153.1875,768.4688 152.75,768.4688 Q152.3594,768.4688 152.1094,768.2969 Q151.8594,768.125 151.75,767.6719 Q151.7031,767.3594 151.5313,767.1875 Q151.2188,766.8594 150.6563,766.6719 Q150.0938,766.4688 149.5313,766.4688 Q148.8281,766.4688 148.2344,766.75 Q147.6563,767.0313 147.2031,767.6563 Q146.75,768.2813 146.75,769.1406 L146.75,770.0625 Q146.75,771.0938 147.5938,771.7813 Q148.4375,772.4688 149.9375,772.4688 Q150.8281,772.4688 151.4531,772.2656 Q151.8125,772.1563 152.2188,771.7969 Q152.4844,771.5938 152.625,771.5313 Q152.7656,771.4688 152.9375,771.4688 Q153.2656,771.4688 153.5,771.7344 Q153.75,771.9844 153.75,772.3438 Q153.75,772.6875 153.4063,773.0938 Q152.9063,773.6875 152.1094,774.0156 Q151.0625,774.4688 149.7813,774.4688 Q148.2813,774.4688 147.0781,773.875 Q146.1094,773.4063 145.4219,772.3906 Q144.75,771.375 144.75,770.1719 L144.75,769.0781 Q144.75,767.8281 145.3438,766.7344 Q145.9531,765.6406 147,765.0625 Q148.0625,764.4688 149.25,764.4688 Q149.9688,764.4688 150.5938,764.7188 Q151.2188,764.9688 151.75,765.4688 Z " fill="#000000"/><ellipse cx="175.25" cy="768.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="24" x="181.25" y="773.8789">final</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="44" x="208.25" y="773.8789">JsonUtil</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="57.5" x2="332.5" y1="784.9688" y2="784.9688"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="57.5" x2="332.5" y1="792.9688" y2="792.9688"/><ellipse cx="67.5" cy="803.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="26" x="76.5" y="808.3877">Gson</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="58" x="105.5" y="808.3877">getParser ()</text><ellipse cx="67.5" cy="817.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="251" x="76.5" y="822.2236">void registerTypeAdapter (Class&lt;?&gt; matchingClass,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="200" x="100.5" y="836.0596">Object adapter, boolean withSubclasses)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="79.5" y="849.8955"/><ellipse cx="67.5" cy="859.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="122" x="76.5" y="863.7314">String toJson (Object obj)</text><!--MD5=[3d84c5190c7a3821707931f3b8039d88]
class BodyError--><rect codeLine="117" fill="#FEFECE" height="103.3438" id="BodyError" style="stroke:#D4AC0D;stroke-width:1.5;" width="183" x="368.5" y="759.9688"/><ellipse cx="422.75" cy="775.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M424.75,772.4688 Q424.9531,771.9688 425.1875,771.7188 Q425.4219,771.4688 425.6875,771.4688 Q426.1563,771.4688 426.4531,771.75 Q426.75,772.0313 426.75,772.6875 L426.75,774.25 Q426.75,774.9063 426.4688,775.1875 Q426.1875,775.4688 425.75,775.4688 Q425.3594,775.4688 425.1094,775.2969 Q424.8594,775.125 424.75,774.6719 Q424.7031,774.3594 424.5313,774.1875 Q424.2188,773.8594 423.6563,773.6719 Q423.0938,773.4688 422.5313,773.4688 Q421.8281,773.4688 421.2344,773.75 Q420.6563,774.0313 420.2031,774.6563 Q419.75,775.2813 419.75,776.1406 L419.75,777.0625 Q419.75,778.0938 420.5938,778.7813 Q421.4375,779.4688 422.9375,779.4688 Q423.8281,779.4688 424.4531,779.2656 Q424.8125,779.1563 425.2188,778.7969 Q425.4844,778.5938 425.625,778.5313 Q425.7656,778.4688 425.9375,778.4688 Q426.2656,778.4688 426.5,778.7344 Q426.75,778.9844 426.75,779.3438 Q426.75,779.6875 426.4063,780.0938 Q425.9063,780.6875 425.1094,781.0156 Q424.0625,781.4688 422.7813,781.4688 Q421.2813,781.4688 420.0781,780.875 Q419.1094,780.4063 418.4219,779.3906 Q417.75,778.375 417.75,777.1719 L417.75,776.0781 Q417.75,774.8281 418.3438,773.7344 Q418.9531,772.6406 420,772.0625 Q421.0625,771.4688 422.25,771.4688 Q422.9688,771.4688 423.5938,771.7188 Q424.2188,771.9688 424.75,772.4688 Z " fill="#000000"/><ellipse cx="448.25" cy="775.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="55" x="454.25" y="780.8789">BodyError</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="369.5" x2="550.5" y1="791.9688" y2="791.9688"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="369.5" x2="550.5" y1="799.9688" y2="799.9688"/><ellipse cx="379.5" cy="810.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="388.5" y="815.3877">BodyError (Exception exception)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="391.5" y="829.2236"/><ellipse cx="379.5" cy="838.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="82" x="388.5" y="843.0596">String getCode ()</text><ellipse cx="379.5" cy="852.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="123" x="388.5" y="856.8955">Exception getException ()</text><!--MD5=[9a218190a85a7a5cf1f408f9962c53bf]
class BodyErrorJsonDeserializer--><rect codeLine="123" fill="#FEFECE" height="111.5313" id="BodyErrorJsonDeserializer" style="stroke:#D4AC0D;stroke-width:1.5;" width="295" x="586.5" y="755.4688"/><ellipse cx="629.4" cy="775.5625" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M631.4,772.0625 Q631.6031,771.5625 631.8375,771.3125 Q632.0719,771.0625 632.3375,771.0625 Q632.8063,771.0625 633.1031,771.3438 Q633.4,771.625 633.4,772.2813 L633.4,773.8438 Q633.4,774.5 633.1188,774.7813 Q632.8375,775.0625 632.4,775.0625 Q632.0094,775.0625 631.7594,774.8906 Q631.5094,774.7188 631.4,774.2656 Q631.3531,773.9531 631.1813,773.7813 Q630.8688,773.4531 630.3063,773.2656 Q629.7438,773.0625 629.1813,773.0625 Q628.4781,773.0625 627.8844,773.3438 Q627.3063,773.625 626.8531,774.25 Q626.4,774.875 626.4,775.7344 L626.4,776.6563 Q626.4,777.6875 627.2438,778.375 Q628.0875,779.0625 629.5875,779.0625 Q630.4781,779.0625 631.1031,778.8594 Q631.4625,778.75 631.8688,778.3906 Q632.1344,778.1875 632.275,778.125 Q632.4156,778.0625 632.5875,778.0625 Q632.9156,778.0625 633.15,778.3281 Q633.4,778.5781 633.4,778.9375 Q633.4,779.2813 633.0563,779.6875 Q632.5563,780.2813 631.7594,780.6094 Q630.7125,781.0625 629.4313,781.0625 Q627.9313,781.0625 626.7281,780.4688 Q625.7594,780 625.0719,778.9844 Q624.4,777.9688 624.4,776.7656 L624.4,775.6719 Q624.4,774.4219 624.9938,773.3281 Q625.6031,772.2344 626.65,771.6563 Q627.7125,771.0625 628.9,771.0625 Q629.6188,771.0625 630.2438,771.3125 Q630.8688,771.5625 631.4,772.0625 Z " fill="#000000"/><ellipse cx="654.6" cy="775.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="660.6" y="772.9258">&lt;&lt;</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="162" x="674.6" y="772.9258">JsonDeserializer&lt;BodyError&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="836.6" y="772.9258">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="148" x="681.6" y="788.0195">BodyErrorJsonDeserializer</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="587.5" x2="880.5" y1="795.6563" y2="795.6563"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="587.5" x2="880.5" y1="803.6563" y2="803.6563"/><ellipse cx="597.5" cy="814.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="140" x="606.5" y="819.0752">BodyErrorJsonDeserializer ()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="609.5" y="832.9111"/><ellipse cx="597.5" cy="842.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="606.5" y="846.7471">BodyError deserialize (</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="717.5" y="846.7471">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="23" x="780.5" y="846.7471">json,</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="806.5" y="846.7471">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="42" x="833.5" y="846.7471">typeOfT,</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="630.5" y="860.583">JsonDeserializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="763.5" y="860.583">context)</text><!--MD5=[f0f8c8dfcaa5a8f8c3b99a1fa7726780]
class ByteArrayJsonAdapter--><rect codeLine="129" fill="#FEFECE" height="154.2969" id="ByteArrayJsonAdapter" style="stroke:#D4AC0D;stroke-width:1.5;" width="273" x="916.5" y="734.4688"/><ellipse cx="960.75" cy="762.1094" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M962.75,758.6094 Q962.9531,758.1094 963.1875,757.8594 Q963.4219,757.6094 963.6875,757.6094 Q964.1563,757.6094 964.4531,757.8906 Q964.75,758.1719 964.75,758.8281 L964.75,760.3906 Q964.75,761.0469 964.4688,761.3281 Q964.1875,761.6094 963.75,761.6094 Q963.3594,761.6094 963.1094,761.4375 Q962.8594,761.2656 962.75,760.8125 Q962.7031,760.5 962.5313,760.3281 Q962.2188,760 961.6563,759.8125 Q961.0938,759.6094 960.5313,759.6094 Q959.8281,759.6094 959.2344,759.8906 Q958.6563,760.1719 958.2031,760.7969 Q957.75,761.4219 957.75,762.2813 L957.75,763.2031 Q957.75,764.2344 958.5938,764.9219 Q959.4375,765.6094 960.9375,765.6094 Q961.8281,765.6094 962.4531,765.4063 Q962.8125,765.2969 963.2188,764.9375 Q963.4844,764.7344 963.625,764.6719 Q963.7656,764.6094 963.9375,764.6094 Q964.2656,764.6094 964.5,764.875 Q964.75,765.125 964.75,765.4844 Q964.75,765.8281 964.4063,766.2344 Q963.9063,766.8281 963.1094,767.1563 Q962.0625,767.6094 960.7813,767.6094 Q959.2813,767.6094 958.0781,767.0156 Q957.1094,766.5469 956.4219,765.5313 Q955.75,764.5156 955.75,763.3125 L955.75,762.2188 Q955.75,760.9688 956.3438,759.875 Q956.9531,758.7813 958,758.2031 Q959.0625,757.6094 960.25,757.6094 Q960.9688,757.6094 961.5938,757.8594 Q962.2188,758.1094 962.75,758.6094 Z " fill="#000000"/><ellipse cx="986.25" cy="761.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="999.25" y="751.9258">&lt;&lt;</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="123" x="1013.25" y="751.9258">JsonSerializer&lt;byte[]&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="1136.25" y="751.9258">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="992.25" y="767.0195">&lt;&lt;</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="137" x="1006.25" y="767.0195">JsonDeserializer&lt;byte[]&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="1143.25" y="767.0195">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="122" x="1013.75" y="782.1133">ByteArrayJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="917.5" x2="1188.5" y1="789.75" y2="789.75"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="917.5" x2="1188.5" y1="797.75" y2="797.75"/><ellipse cx="927.5" cy="808.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="123" x="936.5" y="813.1689">ByteArrayJsonAdapter ()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="939.5" y="827.0049"/><ellipse cx="927.5" cy="836.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="936.5" y="840.8408">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="999.5" y="840.8408">serialize (byte[] src,</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="1098.5" y="840.8408">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="1125.5" y="840.8408">typeOfSrc,</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="960.5" y="854.6768">JsonSerializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="1081.5" y="854.6768">context)</text><ellipse cx="927.5" cy="864.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="89" x="936.5" y="868.5127">byte[] deserialize (</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="1025.5" y="868.5127">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="23" x="1088.5" y="868.5127">json,</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="1114.5" y="868.5127">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="42" x="1141.5" y="868.5127">typeOfT,</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="960.5" y="882.3486">JsonDeserializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="1093.5" y="882.3486">context)</text><!--MD5=[52cc22ead8f9cede3c7076eefab9a46c]
class ByteJsonAdapter--><rect codeLine="137" fill="#FEFECE" height="154.2969" id="ByteJsonAdapter" style="stroke:#D4AC0D;stroke-width:1.5;" width="268" x="300" y="948.4688"/><ellipse cx="344.75" cy="976.1094" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M346.75,972.6094 Q346.9531,972.1094 347.1875,971.8594 Q347.4219,971.6094 347.6875,971.6094 Q348.1563,971.6094 348.4531,971.8906 Q348.75,972.1719 348.75,972.8281 L348.75,974.3906 Q348.75,975.0469 348.4688,975.3281 Q348.1875,975.6094 347.75,975.6094 Q347.3594,975.6094 347.1094,975.4375 Q346.8594,975.2656 346.75,974.8125 Q346.7031,974.5 346.5313,974.3281 Q346.2188,974 345.6563,973.8125 Q345.0938,973.6094 344.5313,973.6094 Q343.8281,973.6094 343.2344,973.8906 Q342.6563,974.1719 342.2031,974.7969 Q341.75,975.4219 341.75,976.2813 L341.75,977.2031 Q341.75,978.2344 342.5938,978.9219 Q343.4375,979.6094 344.9375,979.6094 Q345.8281,979.6094 346.4531,979.4063 Q346.8125,979.2969 347.2188,978.9375 Q347.4844,978.7344 347.625,978.6719 Q347.7656,978.6094 347.9375,978.6094 Q348.2656,978.6094 348.5,978.875 Q348.75,979.125 348.75,979.4844 Q348.75,979.8281 348.4063,980.2344 Q347.9063,980.8281 347.1094,981.1563 Q346.0625,981.6094 344.7813,981.6094 Q343.2813,981.6094 342.0781,981.0156 Q341.1094,980.5469 340.4219,979.5313 Q339.75,978.5156 339.75,977.3125 L339.75,976.2188 Q339.75,974.9688 340.3438,973.875 Q340.9531,972.7813 342,972.2031 Q343.0625,971.6094 344.25,971.6094 Q344.9688,971.6094 345.5938,971.8594 Q346.2188,972.1094 346.75,972.6094 Z " fill="#000000"/><ellipse cx="370.25" cy="975.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="383.25" y="965.9258">&lt;&lt;</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="117" x="397.25" y="965.9258">JsonSerializer&lt;Byte&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="514.25" y="965.9258">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="376.25" y="981.0195">&lt;&lt;</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="131" x="390.25" y="981.0195">JsonDeserializer&lt;Byte&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="521.25" y="981.0195">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="93" x="409.25" y="996.1133">ByteJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="301" x2="567" y1="1003.75" y2="1003.75"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="301" x2="567" y1="1011.75" y2="1011.75"/><ellipse cx="311" cy="1022.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="320" y="1027.1689">ByteJsonAdapter ()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="323" y="1041.0049"/><ellipse cx="311" cy="1050.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="320" y="1054.8408">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="91" x="383" y="1054.8408">serialize (Byte src,</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="477" y="1054.8408">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="504" y="1054.8408">typeOfSrc,</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="344" y="1068.6768">JsonSerializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="465" y="1068.6768">context)</text><ellipse cx="311" cy="1078.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="320" y="1082.5127">Byte deserialize (</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="404" y="1082.5127">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="23" x="467" y="1082.5127">json,</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="493" y="1082.5127">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="42" x="520" y="1082.5127">typeOfT,</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="344" y="1096.3486">JsonDeserializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="477" y="1096.3486">context)</text><!--MD5=[514e1602104e75c9a95a46a815824089]
class ShortJsonAdapter--><rect codeLine="145" fill="#FEFECE" height="154.2969" id="ShortJsonAdapter" style="stroke:#D4AC0D;stroke-width:1.5;" width="272" x="603" y="948.4688"/><ellipse cx="647.25" cy="976.1094" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M649.25,972.6094 Q649.4531,972.1094 649.6875,971.8594 Q649.9219,971.6094 650.1875,971.6094 Q650.6563,971.6094 650.9531,971.8906 Q651.25,972.1719 651.25,972.8281 L651.25,974.3906 Q651.25,975.0469 650.9688,975.3281 Q650.6875,975.6094 650.25,975.6094 Q649.8594,975.6094 649.6094,975.4375 Q649.3594,975.2656 649.25,974.8125 Q649.2031,974.5 649.0313,974.3281 Q648.7188,974 648.1563,973.8125 Q647.5938,973.6094 647.0313,973.6094 Q646.3281,973.6094 645.7344,973.8906 Q645.1563,974.1719 644.7031,974.7969 Q644.25,975.4219 644.25,976.2813 L644.25,977.2031 Q644.25,978.2344 645.0938,978.9219 Q645.9375,979.6094 647.4375,979.6094 Q648.3281,979.6094 648.9531,979.4063 Q649.3125,979.2969 649.7188,978.9375 Q649.9844,978.7344 650.125,978.6719 Q650.2656,978.6094 650.4375,978.6094 Q650.7656,978.6094 651,978.875 Q651.25,979.125 651.25,979.4844 Q651.25,979.8281 650.9063,980.2344 Q650.4063,980.8281 649.6094,981.1563 Q648.5625,981.6094 647.2813,981.6094 Q645.7813,981.6094 644.5781,981.0156 Q643.6094,980.5469 642.9219,979.5313 Q642.25,978.5156 642.25,977.3125 L642.25,976.2188 Q642.25,974.9688 642.8438,973.875 Q643.4531,972.7813 644.5,972.2031 Q645.5625,971.6094 646.75,971.6094 Q647.4688,971.6094 648.0938,971.8594 Q648.7188,972.1094 649.25,972.6094 Z " fill="#000000"/><ellipse cx="672.75" cy="975.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="685.75" y="965.9258">&lt;&lt;</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="122" x="699.75" y="965.9258">JsonSerializer&lt;Short&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="821.75" y="965.9258">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="678.75" y="981.0195">&lt;&lt;</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="136" x="692.75" y="981.0195">JsonDeserializer&lt;Short&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="828.75" y="981.0195">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="98" x="711.75" y="996.1133">ShortJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="604" x2="874" y1="1003.75" y2="1003.75"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="604" x2="874" y1="1011.75" y2="1011.75"/><ellipse cx="614" cy="1022.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="623" y="1027.1689">ShortJsonAdapter ()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="626" y="1041.0049"/><ellipse cx="614" cy="1050.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="623" y="1054.8408">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="686" y="1054.8408">serialize (Short src,</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="784" y="1054.8408">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="811" y="1054.8408">typeOfSrc,</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="647" y="1068.6768">JsonSerializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="768" y="1068.6768">context)</text><ellipse cx="614" cy="1078.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="623" y="1082.5127">Short deserialize (</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="711" y="1082.5127">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="23" x="774" y="1082.5127">json,</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="800" y="1082.5127">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="42" x="827" y="1082.5127">typeOfT,</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="647" y="1096.3486">JsonDeserializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="780" y="1096.3486">context)</text><!--MD5=[f72f8ad6aaf73d77b05e402bfda701b7]
class IntegerJsonAdapter--><rect codeLine="153" fill="#FEFECE" height="154.2969" id="IntegerJsonAdapter" style="stroke:#D4AC0D;stroke-width:1.5;" width="279" x="910.5" y="948.4688"/><ellipse cx="953.4" cy="976.1094" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M955.4,972.6094 Q955.6031,972.1094 955.8375,971.8594 Q956.0719,971.6094 956.3375,971.6094 Q956.8063,971.6094 957.1031,971.8906 Q957.4,972.1719 957.4,972.8281 L957.4,974.3906 Q957.4,975.0469 957.1188,975.3281 Q956.8375,975.6094 956.4,975.6094 Q956.0094,975.6094 955.7594,975.4375 Q955.5094,975.2656 955.4,974.8125 Q955.3531,974.5 955.1813,974.3281 Q954.8688,974 954.3063,973.8125 Q953.7438,973.6094 953.1813,973.6094 Q952.4781,973.6094 951.8844,973.8906 Q951.3063,974.1719 950.8531,974.7969 Q950.4,975.4219 950.4,976.2813 L950.4,977.2031 Q950.4,978.2344 951.2438,978.9219 Q952.0875,979.6094 953.5875,979.6094 Q954.4781,979.6094 955.1031,979.4063 Q955.4625,979.2969 955.8688,978.9375 Q956.1344,978.7344 956.275,978.6719 Q956.4156,978.6094 956.5875,978.6094 Q956.9156,978.6094 957.15,978.875 Q957.4,979.125 957.4,979.4844 Q957.4,979.8281 957.0563,980.2344 Q956.5563,980.8281 955.7594,981.1563 Q954.7125,981.6094 953.4313,981.6094 Q951.9313,981.6094 950.7281,981.0156 Q949.7594,980.5469 949.0719,979.5313 Q948.4,978.5156 948.4,977.3125 L948.4,976.2188 Q948.4,974.9688 948.9938,973.875 Q949.6031,972.7813 950.65,972.2031 Q951.7125,971.6094 952.9,971.6094 Q953.6188,971.6094 954.2438,971.8594 Q954.8688,972.1094 955.4,972.6094 Z " fill="#000000"/><ellipse cx="978.6" cy="975.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="991.6" y="965.9258">&lt;&lt;</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="132" x="1005.6" y="965.9258">JsonSerializer&lt;Integer&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="1137.6" y="965.9258">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="984.6" y="981.0195">&lt;&lt;</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="146" x="998.6" y="981.0195">JsonDeserializer&lt;Integer&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="1144.6" y="981.0195">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="108" x="1017.6" y="996.1133">IntegerJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="911.5" x2="1188.5" y1="1003.75" y2="1003.75"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="911.5" x2="1188.5" y1="1011.75" y2="1011.75"/><ellipse cx="921.5" cy="1022.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="930.5" y="1027.1689">IntegerJsonAdapter ()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="933.5" y="1041.0049"/><ellipse cx="921.5" cy="1050.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="930.5" y="1054.8408">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="993.5" y="1054.8408">serialize (Integer src,</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="1098.5" y="1054.8408">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="1125.5" y="1054.8408">typeOfSrc,</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="954.5" y="1068.6768">JsonSerializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="1075.5" y="1068.6768">context)</text><ellipse cx="921.5" cy="1078.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="930.5" y="1082.5127">Integer deserialize (</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="1025.5" y="1082.5127">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="23" x="1088.5" y="1082.5127">json,</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="1114.5" y="1082.5127">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="42" x="1141.5" y="1082.5127">typeOfT,</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="954.5" y="1096.3486">JsonDeserializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="1087.5" y="1096.3486">context)</text><!--MD5=[6dc912724c38cd3a0ccd19a15c425c35]
class LongJsonAdapter--><rect codeLine="161" fill="#FEFECE" height="154.2969" id="LongJsonAdapter" style="stroke:#D4AC0D;stroke-width:1.5;" width="270" x="299" y="1162.4688"/><ellipse cx="342.8" cy="1190.1094" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M344.8,1186.6094 Q345.0031,1186.1094 345.2375,1185.8594 Q345.4719,1185.6094 345.7375,1185.6094 Q346.2063,1185.6094 346.5031,1185.8906 Q346.8,1186.1719 346.8,1186.8281 L346.8,1188.3906 Q346.8,1189.0469 346.5188,1189.3281 Q346.2375,1189.6094 345.8,1189.6094 Q345.4094,1189.6094 345.1594,1189.4375 Q344.9094,1189.2656 344.8,1188.8125 Q344.7531,1188.5 344.5813,1188.3281 Q344.2688,1188 343.7063,1187.8125 Q343.1438,1187.6094 342.5813,1187.6094 Q341.8781,1187.6094 341.2844,1187.8906 Q340.7063,1188.1719 340.2531,1188.7969 Q339.8,1189.4219 339.8,1190.2813 L339.8,1191.2031 Q339.8,1192.2344 340.6438,1192.9219 Q341.4875,1193.6094 342.9875,1193.6094 Q343.8781,1193.6094 344.5031,1193.4063 Q344.8625,1193.2969 345.2688,1192.9375 Q345.5344,1192.7344 345.675,1192.6719 Q345.8156,1192.6094 345.9875,1192.6094 Q346.3156,1192.6094 346.55,1192.875 Q346.8,1193.125 346.8,1193.4844 Q346.8,1193.8281 346.4563,1194.2344 Q345.9563,1194.8281 345.1594,1195.1563 Q344.1125,1195.6094 342.8313,1195.6094 Q341.3313,1195.6094 340.1281,1195.0156 Q339.1594,1194.5469 338.4719,1193.5313 Q337.8,1192.5156 337.8,1191.3125 L337.8,1190.2188 Q337.8,1188.9688 338.3938,1187.875 Q339.0031,1186.7813 340.05,1186.2031 Q341.1125,1185.6094 342.3,1185.6094 Q343.0188,1185.6094 343.6438,1185.8594 Q344.2688,1186.1094 344.8,1186.6094 Z " fill="#000000"/><ellipse cx="368.2" cy="1189.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="381.2" y="1179.9258">&lt;&lt;</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="121" x="395.2" y="1179.9258">JsonSerializer&lt;Long&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="516.2" y="1179.9258">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="374.2" y="1195.0195">&lt;&lt;</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="135" x="388.2" y="1195.0195">JsonDeserializer&lt;Long&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="523.2" y="1195.0195">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="97" x="407.2" y="1210.1133">LongJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="300" x2="568" y1="1217.75" y2="1217.75"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="300" x2="568" y1="1225.75" y2="1225.75"/><ellipse cx="310" cy="1236.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="319" y="1241.1689">LongJsonAdapter ()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="322" y="1255.0049"/><ellipse cx="310" cy="1264.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="319" y="1268.8408">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="93" x="382" y="1268.8408">serialize (Long src,</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="478" y="1268.8408">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="505" y="1268.8408">typeOfSrc,</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="343" y="1282.6768">JsonSerializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="464" y="1282.6768">context)</text><ellipse cx="310" cy="1292.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="86" x="319" y="1296.5127">Long deserialize (</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="405" y="1296.5127">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="23" x="468" y="1296.5127">json,</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="494" y="1296.5127">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="42" x="521" y="1296.5127">typeOfT,</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="343" y="1310.3486">JsonDeserializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="476" y="1310.3486">context)</text><!--MD5=[fc62ed06551ba356a446c123e88cc84c]
class ThrowableJsonSerializer--><rect codeLine="169" fill="#FEFECE" height="111.5313" id="ThrowableJsonSerializer" style="stroke:#D4AC0D;stroke-width:1.5;" width="293" x="604.5" y="1183.4688"/><ellipse cx="651.75" cy="1203.5625" fill="#ADD1B2" rx="11" ry="11" style="stroke:#ADD1B2;stroke-width:1.0;"/><path d="M653.75,1200.0625 Q653.9531,1199.5625 654.1875,1199.3125 Q654.4219,1199.0625 654.6875,1199.0625 Q655.1563,1199.0625 655.4531,1199.3438 Q655.75,1199.625 655.75,1200.2813 L655.75,1201.8438 Q655.75,1202.5 655.4688,1202.7813 Q655.1875,1203.0625 654.75,1203.0625 Q654.3594,1203.0625 654.1094,1202.8906 Q653.8594,1202.7188 653.75,1202.2656 Q653.7031,1201.9531 653.5313,1201.7813 Q653.2188,1201.4531 652.6563,1201.2656 Q652.0938,1201.0625 651.5313,1201.0625 Q650.8281,1201.0625 650.2344,1201.3438 Q649.6563,1201.625 649.2031,1202.25 Q648.75,1202.875 648.75,1203.7344 L648.75,1204.6563 Q648.75,1205.6875 649.5938,1206.375 Q650.4375,1207.0625 651.9375,1207.0625 Q652.8281,1207.0625 653.4531,1206.8594 Q653.8125,1206.75 654.2188,1206.3906 Q654.4844,1206.1875 654.625,1206.125 Q654.7656,1206.0625 654.9375,1206.0625 Q655.2656,1206.0625 655.5,1206.3281 Q655.75,1206.5781 655.75,1206.9375 Q655.75,1207.2813 655.4063,1207.6875 Q654.9063,1208.2813 654.1094,1208.6094 Q653.0625,1209.0625 651.7813,1209.0625 Q650.2813,1209.0625 649.0781,1208.4688 Q648.1094,1208 647.4219,1206.9844 Q646.75,1205.9688 646.75,1204.7656 L646.75,1203.6719 Q646.75,1202.4219 647.3438,1201.3281 Q647.9531,1200.2344 649,1199.6563 Q650.0625,1199.0625 651.25,1199.0625 Q651.9688,1199.0625 652.5938,1199.3125 Q653.2188,1199.5625 653.75,1200.0625 Z " fill="#000000"/><ellipse cx="677.25" cy="1203.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="683.25" y="1200.9258">&lt;&lt;</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="151" x="697.25" y="1200.9258">JsonSerializer&lt;Throwable&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="848.25" y="1200.9258">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="137" x="704.25" y="1216.0195">ThrowableJsonSerializer</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="605.5" x2="896.5" y1="1223.6563" y2="1223.6563"/><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="605.5" x2="896.5" y1="1231.6563" y2="1231.6563"/><ellipse cx="615.5" cy="1242.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="624.5" y="1247.0752">ThrowableJsonSerializer ()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="627.5" y="1260.9111"/><ellipse cx="615.5" cy="1270.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="624.5" y="1274.7471">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="121" x="687.5" y="1274.7471">serialize (Throwable src,</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="811.5" y="1274.7471">Type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="838.5" y="1274.7471">typeOfSrc,</text><text fill="#000000" filter="url(#b162iuwskfhvog0)" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="648.5" y="1288.583">JsonSerializationContext</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="769.5" y="1288.583">context)</text><!--MD5=[c34d1faeeea216c406a2d0eb3a604534]
class ContactCardCommonProtocol--><rect codeLine="177" fill="#FEFECE" height="103.3438" id="ContactCardCommonProtocol" style="stroke:#D4AC0D;stroke-width:1.5;" width="239" x="950.5" y="206.9688"/><ellipse cx="979" cy="222.9688" fill="#EB937F" rx="11" ry="11" style="stroke:#EB93DF;stroke-width:1.0;"/><path d="M977.5,223.9688 L977.5,225.9688 L981.5,225.9688 L981.5,224.9688 L981.5,224.4844 L982.125,223.9688 L982.5,223.9688 L982.875,223.9688 L983.5,224.4844 L983.5,224.9688 L983.5,227.9688 L975.5,227.9688 L975.0156,227.9688 L974.5,227.3438 L974.5,226.9688 L974.5,226.5938 L975.0156,225.9688 L975.5,225.9688 L975.5,225.9688 L975.5,219.9688 L975.5,219.9688 L975.0156,219.9688 L974.5,219.3438 L974.5,218.9688 L974.5,218.5938 L975.0156,217.9688 L975.5,217.9688 L983.5,217.9688 L983.5,220.9688 L983.5,221.4531 L982.875,221.9688 L982.5,221.9688 L982.125,221.9688 L981.5,221.4531 L981.5,220.9688 L981.5,219.9688 L977.5,219.9688 L977.5,221.9688 L978.5,221.9688 L978.5,221.4844 L978.5,221.4844 L979.125,220.9688 L979.5,220.9688 L979.875,220.9688 L980.5,221.4844 L980.5,221.9688 L980.5,223.9688 L980.5,224.4531 L979.875,224.9688 L979.875,224.9688 L979.5,224.9688 L979.125,224.9688 L978.5,224.4531 L978.5,224.4531 L978.5,223.9688 L977.5,223.9688 Z " fill="#000000"/><ellipse cx="1001" cy="222.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="166" x="1007" y="227.8789">ContactCardCommonProtocol</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="951.5" x2="1188.5" y1="238.9688" y2="238.9688"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="59" x="956.5" y="254.3877">ISO_7816_3</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="79" x="956.5" y="268.2236">ISO_7816_3_TO</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="77" x="956.5" y="282.0596">ISO_7816_3_T1</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="227" x="956.5" y="295.8955">INNOVATRON_HIGH_SPEED_PROTOCOL_SAM</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="951.5" x2="1188.5" y1="302.3125" y2="302.3125"/><!--MD5=[25bf49c9220c51f3412e028606b93688]
class ContactlessCardCommonProtocol--><rect codeLine="183" fill="#FEFECE" height="131.0156" id="ContactlessCardCommonProtocol" style="stroke:#D4AC0D;stroke-width:1.5;" width="231" x="684.5" y="192.9688"/><ellipse cx="699.5" cy="208.9688" fill="#EB937F" rx="11" ry="11" style="stroke:#EB93DF;stroke-width:1.0;"/><path d="M698,209.9688 L698,211.9688 L702,211.9688 L702,210.9688 L702,210.4844 L702.625,209.9688 L703,209.9688 L703.375,209.9688 L704,210.4844 L704,210.9688 L704,213.9688 L696,213.9688 L695.5156,213.9688 L695,213.3438 L695,212.9688 L695,212.5938 L695.5156,211.9688 L696,211.9688 L696,211.9688 L696,205.9688 L696,205.9688 L695.5156,205.9688 L695,205.3438 L695,204.9688 L695,204.5938 L695.5156,203.9688 L696,203.9688 L704,203.9688 L704,206.9688 L704,207.4531 L703.375,207.9688 L703,207.9688 L702.625,207.9688 L702,207.4531 L702,206.9688 L702,205.9688 L698,205.9688 L698,207.9688 L699,207.9688 L699,207.4844 L699,207.4844 L699.625,206.9688 L700,206.9688 L700.375,206.9688 L701,207.4844 L701,207.9688 L701,209.9688 L701,210.4531 L700.375,210.9688 L700.375,210.9688 L700,210.9688 L699.625,210.9688 L699,210.4531 L699,210.4531 L699,209.9688 L698,209.9688 Z " fill="#000000"/><ellipse cx="718.5" cy="208.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="188" x="724.5" y="213.8789">ContactlessCardCommonProtocol</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="685.5" x2="914.5" y1="224.9688" y2="224.9688"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="690.5" y="240.3877">ISO_14443_4</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="113" x="690.5" y="254.2236">NFC_A_ISO_14443_3A</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="690.5" y="268.0596">NFC_B_ISO_14443_3B</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="690.5" y="281.8955">NFC_F_JIS_6319_4</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="93" x="690.5" y="295.7314">NFC_V_ISO_15693</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="151" x="690.5" y="309.5674">INNOVATRON_B_PRIME_CARD</text><line style="stroke:#D4AC0D;stroke-width:1.5;" x1="685.5" x2="914.5" y1="315.9844" y2="315.9844"/><!--MD5=[c9115abaf16ca91dc45c56264012f3ce]
link ByteArrayUtil to JsonUtil--><!--MD5=[6757456dba33f4ac62c37eb7e7994c1a]
link Assert to ByteArrayUtil--><!--MD5=[6bb83c1742bc0e576ff68716e4c88e08]
link Assert to ApduUtil--><!--MD5=[51c341f8810c88afd783f70947e1e58c]
link Assert to BerTlvUtil--><!--MD5=[63c32666aa556676165fa82fe8e7d846]
link BodyError to BodyErrorJsonDeserializer--><!--MD5=[08746151aa5e153f689b7b74edeef126]
link BodyErrorJsonDeserializer to ByteArrayJsonAdapter--><!--MD5=[80fae33031f982e6563876cc46d9a6ed]
link BodyError to ByteJsonAdapter--><!--MD5=[74a774788e2ebe36c764067b7b13dc93]
link ByteJsonAdapter to ShortJsonAdapter--><!--MD5=[144e8010900f21ba7827d9f9ed97ae0a]
link ShortJsonAdapter to IntegerJsonAdapter--><!--MD5=[d4e6ba726e90018d5db2cb9e659ad2ad]
link ByteJsonAdapter to LongJsonAdapter--><!--MD5=[b4ef75a519b7920b59101ffe2f8e0ad6]
link LongJsonAdapter to ThrowableJsonSerializer--><!--MD5=[b8ad057637209241f2d10e3379329958]
@startuml
title
    Keyple - keyple-util-java-lib - 2.1.+ (15/03/2022)
end title

' == THEME ==

'Couleurs issues de : https://htmlcolorcodes.com/fr/tableau-de-couleur/tableau-de-couleur-design-plat/
!define C_GREY1 F8F9F9
!define C_GREY2 F2F3F4
!define C_GREY3 E5E7E9
!define C_GREY4 D7DBDD
!define C_GREY5 CACFD2
!define C_GREY6 BDC3C7
!define C_LINK 3498DB
!define C_USE 27AE60

skinparam Shadowing false
skinparam ClassFontStyle italic
skinparam ClassBorderColor #D4AC0D
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
' Red
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
' Purple
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
' blue
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
' Green
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
' Grey
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype

' == CONTENT ==

legend top
    __Colors legend__ :
    * __External API references__ :
    ** <back:yellow>**com.google.code.gson**</back>
end legend

package "org.eclipse.keyple.core.util" as util {
    +class "**final** Assert" as Assert {
        +{static} Assert getInstance ()

        +Assert notNull (Object obj, String name)
        +Assert notEmpty (String obj, String name)
        +Assert notEmpty (Collection<?> obj, String name)
        +Assert notEmpty (byte[] obj, String name)
        +Assert isTrue (Boolean condition, String name)
        +Assert greaterOrEqual (Integer number, int minValue, String name)
        +Assert isEqual (Integer number, int value, String name)
        +Assert isInRange (Integer number, int minValue, int maxValue, String name)
        +Assert isHexString (String hex, String name)
    }
    +class "**final** ByteArrayUtil" as ByteArrayUtil {
        +{static} byte[] extractBytes (byte[] src, int bitOffset, int nbBytes)
        +{static} int extractInt (byte[] src, int offset, int nbBytes, boolean isSigned)

        +<s>boolean isValidHexString (String hex)
        +<s>String normalizeHexString (String hex)

        +<s>byte[] fromHex (String hex)
        +<s>String toHex (byte[] data)

        +<s>int twoBytesToInt (byte[] bytes, int offset)
        +<s>int twoBytesSignedToInt (byte[] bytes, int offset)
        +<s>int threeBytesToInt (byte[] bytes, int offset)
        +<s>int threeBytesSignedToInt (byte[] bytes, int offset)
        +<s>int fourBytesToInt (byte[] bytes, int offset)
    }
    +class "**final** HexUtil" as HexUtil {
        +{static} boolean isValid (String hex)

        +{static} byte[] toBytes (String hex)
        +{static} byte toByte (String hex)
        +{static} short toShort (String hex)
        +{static} int toInt (String hex)
        +{static} long toLong (String hex)

        +{static} String toHex (byte[] val)
        +{static} String toHex (byte val)
        +{static} String toHex (short val)
        +{static} String toHex (int val)
        +{static} String toHex (long val)
    }
    +class "**final** ApduUtil" as ApduUtil {
        +{static} byte[] build (byte cla, byte ins, byte p1, byte p2, byte[] dataIn, Byte le)

        +{static} boolean isCase4 (byte[] apduCommand)
    }
    +class BerTlvUtil {
        +{static} Map<Integer, byte[]> parseSimple (byte[] tlvStructure, boolean primitiveOnly)
        +{static} Map<Integer, List<byte[]>> parse (byte[] tlvStructure, boolean primitiveOnly)

        +{static} boolean isConstructed (int tagId)
    }
    package json {
        +class "**final** JsonUtil" as JsonUtil {
            +{static} <back:yellow>Gson</back> getParser ()
            +{static} void registerTypeAdapter (Class<?> matchingClass,
                \tObject adapter, boolean withSubclasses)

            +{static} String toJson (Object obj)
        }
        +class BodyError {
            +BodyError (Exception exception)

            +String getCode ()
            +Exception getException ()
        }
        +class "<<<back:yellow>JsonDeserializer<BodyError></back>>>\nBodyErrorJsonDeserializer" as BodyErrorJsonDeserializer {
            +BodyErrorJsonDeserializer ()

            +BodyError deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<byte[]></back>>>\n<<<back:yellow>JsonDeserializer<byte[]></back>>>\nByteArrayJsonAdapter" as ByteArrayJsonAdapter {
            +ByteArrayJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (byte[] src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +byte[] deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Byte></back>>>\n<<<back:yellow>JsonDeserializer<Byte></back>>>\nByteJsonAdapter" as ByteJsonAdapter {
            +ByteJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Byte src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Byte deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Short></back>>>\n<<<back:yellow>JsonDeserializer<Short></back>>>\nShortJsonAdapter" as ShortJsonAdapter {
            +ShortJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Short src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Short deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Integer></back>>>\n<<<back:yellow>JsonDeserializer<Integer></back>>>\nIntegerJsonAdapter" as IntegerJsonAdapter {
            +IntegerJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Integer src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Integer deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Long></back>>>\n<<<back:yellow>JsonDeserializer<Long></back>>>\nLongJsonAdapter" as LongJsonAdapter {
            +LongJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Long src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Long deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Throwable></back>>>\nThrowableJsonSerializer" as ThrowableJsonSerializer {
            +ThrowableJsonSerializer ()

            +<back:yellow>JsonElement</back> serialize (Throwable src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
        }
    }
    package protocol {
        +enum ContactCardCommonProtocol {
            ISO_7816_3
            ISO_7816_3_TO
            ISO_7816_3_T1
            INNOVATRON_HIGH_SPEED_PROTOCOL_SAM
        }
        +enum ContactlessCardCommonProtocol {
            ISO_14443_4
            NFC_A_ISO_14443_3A
            NFC_B_ISO_14443_3B
            NFC_F_JIS_6319_4
            NFC_V_ISO_15693
            INNOVATRON_B_PRIME_CARD
        }
    }
}

' Associations

' == LAYOUT ==

ByteArrayUtil -[hidden]- JsonUtil

Assert -[hidden]- ByteArrayUtil
Assert -[hidden]- ApduUtil
Assert -[hidden]- BerTlvUtil

' == STYLE ==

package util #C_GREY1 {}
package json #C_GREY2 {}
package protocol #C_GREY2 {}

@enduml

@startuml
title
    Keyple - keyple-util-java-lib - 2.1.+ (15/03/2022)
end title



skinparam Shadowing false
skinparam ClassFontStyle italic
skinparam ClassBorderColor #D4AC0D
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype


legend top
    __Colors legend__ :
    * __External API references__ :
    ** <back:yellow>**com.google.code.gson**</back>
end legend

package "org.eclipse.keyple.core.util" as util {
    +class "**final** Assert" as Assert {
        +{static} Assert getInstance ()

        +Assert notNull (Object obj, String name)
        +Assert notEmpty (String obj, String name)
        +Assert notEmpty (Collection<?> obj, String name)
        +Assert notEmpty (byte[] obj, String name)
        +Assert isTrue (Boolean condition, String name)
        +Assert greaterOrEqual (Integer number, int minValue, String name)
        +Assert isEqual (Integer number, int value, String name)
        +Assert isInRange (Integer number, int minValue, int maxValue, String name)
        +Assert isHexString (String hex, String name)
    }
    +class "**final** ByteArrayUtil" as ByteArrayUtil {
        +{static} byte[] extractBytes (byte[] src, int bitOffset, int nbBytes)
        +{static} int extractInt (byte[] src, int offset, int nbBytes, boolean isSigned)

        +<s>boolean isValidHexString (String hex)
        +<s>String normalizeHexString (String hex)

        +<s>byte[] fromHex (String hex)
        +<s>String toHex (byte[] data)

        +<s>int twoBytesToInt (byte[] bytes, int offset)
        +<s>int twoBytesSignedToInt (byte[] bytes, int offset)
        +<s>int threeBytesToInt (byte[] bytes, int offset)
        +<s>int threeBytesSignedToInt (byte[] bytes, int offset)
        +<s>int fourBytesToInt (byte[] bytes, int offset)
    }
    +class "**final** HexUtil" as HexUtil {
        +{static} boolean isValid (String hex)

        +{static} byte[] toBytes (String hex)
        +{static} byte toByte (String hex)
        +{static} short toShort (String hex)
        +{static} int toInt (String hex)
        +{static} long toLong (String hex)

        +{static} String toHex (byte[] val)
        +{static} String toHex (byte val)
        +{static} String toHex (short val)
        +{static} String toHex (int val)
        +{static} String toHex (long val)
    }
    +class "**final** ApduUtil" as ApduUtil {
        +{static} byte[] build (byte cla, byte ins, byte p1, byte p2, byte[] dataIn, Byte le)

        +{static} boolean isCase4 (byte[] apduCommand)
    }
    +class BerTlvUtil {
        +{static} Map<Integer, byte[]> parseSimple (byte[] tlvStructure, boolean primitiveOnly)
        +{static} Map<Integer, List<byte[]>> parse (byte[] tlvStructure, boolean primitiveOnly)

        +{static} boolean isConstructed (int tagId)
    }
    package json {
        +class "**final** JsonUtil" as JsonUtil {
            +{static} <back:yellow>Gson</back> getParser ()
            +{static} void registerTypeAdapter (Class<?> matchingClass,
                \tObject adapter, boolean withSubclasses)

            +{static} String toJson (Object obj)
        }
        +class BodyError {
            +BodyError (Exception exception)

            +String getCode ()
            +Exception getException ()
        }
        +class "<<<back:yellow>JsonDeserializer<BodyError></back>>>\nBodyErrorJsonDeserializer" as BodyErrorJsonDeserializer {
            +BodyErrorJsonDeserializer ()

            +BodyError deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<byte[]></back>>>\n<<<back:yellow>JsonDeserializer<byte[]></back>>>\nByteArrayJsonAdapter" as ByteArrayJsonAdapter {
            +ByteArrayJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (byte[] src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +byte[] deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Byte></back>>>\n<<<back:yellow>JsonDeserializer<Byte></back>>>\nByteJsonAdapter" as ByteJsonAdapter {
            +ByteJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Byte src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Byte deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Short></back>>>\n<<<back:yellow>JsonDeserializer<Short></back>>>\nShortJsonAdapter" as ShortJsonAdapter {
            +ShortJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Short src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Short deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Integer></back>>>\n<<<back:yellow>JsonDeserializer<Integer></back>>>\nIntegerJsonAdapter" as IntegerJsonAdapter {
            +IntegerJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Integer src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Integer deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Long></back>>>\n<<<back:yellow>JsonDeserializer<Long></back>>>\nLongJsonAdapter" as LongJsonAdapter {
            +LongJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Long src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Long deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Throwable></back>>>\nThrowableJsonSerializer" as ThrowableJsonSerializer {
            +ThrowableJsonSerializer ()

            +<back:yellow>JsonElement</back> serialize (Throwable src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
        }
    }
    package protocol {
        +enum ContactCardCommonProtocol {
            ISO_7816_3
            ISO_7816_3_TO
            ISO_7816_3_T1
            INNOVATRON_HIGH_SPEED_PROTOCOL_SAM
        }
        +enum ContactlessCardCommonProtocol {
            ISO_14443_4
            NFC_A_ISO_14443_3A
            NFC_B_ISO_14443_3B
            NFC_F_JIS_6319_4
            NFC_V_ISO_15693
            INNOVATRON_B_PRIME_CARD
        }
    }
}



ByteArrayUtil -[hidden]- JsonUtil

Assert -[hidden]- ByteArrayUtil
Assert -[hidden]- ApduUtil
Assert -[hidden]- BerTlvUtil


package util #F8F9F9 {}
package json #F2F3F4 {}
package protocol #F2F3F4 {}

@enduml

PlantUML version 1.2022.1(Tue Feb 01 19:19:58 CET 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: fr
Country: FR
--></g></svg>