@startuml
title
    Keyple - keyple-util-java-lib - 2.2.+ (30/09/2022)
end title

' == THEME ==

'Couleurs issues de : https://htmlcolorcodes.com/fr/tableau-de-couleur/tableau-de-couleur-design-plat/
!define C_GREY1 F8F9F9
!define C_GREY2 F2F3F4
!define C_GREY3 E5E7E9
!define C_GREY4 D7DBDD
!define C_GREY5 CACFD2
!define C_GREY6 BDC3C7
!define C_LINK 3498DB
!define C_USE 27AE60

' -- Styles that don't work with new version of plantuml --
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
' -- END --

skinparam ClassBorderThickness 2
skinparam ArrowThickness 2

' Yellow
skinparam ClassBackgroundColor #FEFECE
skinparam ClassBorderColor #D4AC0D
' Red
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
' Purple
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
' blue
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
' Green
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
' Grey
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype

' == CONTENT ==

legend top
    __Colors legend__ :
    * __External API references__ :
    ** <back:yellow>**com.google.code.gson**</back>
end legend

package "org.eclipse.keyple.core.util" as util {
    +class "**final** Assert" as Assert {
        +{static} Assert getInstance ()

        +Assert notNull (Object obj, String name)
        +Assert notEmpty (String obj, String name)
        +Assert notEmpty (Collection<?> obj, String name)
        +Assert notEmpty (byte[] obj, String name)
        +Assert isTrue (Boolean condition, String name)
        +Assert greaterOrEqual (Integer number, int minValue, String name)
        +Assert isEqual (Integer number, int value, String name)
        +Assert isInRange (Integer number, int minValue, int maxValue, String name)
        +Assert isHexString (String hex, String name)
    }
    +class "**final** ByteArrayUtil" as ByteArrayUtil {
        +{static} byte[] extractBytes (byte[] src, int bitOffset, int nbBytes)
        +{static} int extractInt (byte[] src, int offset, int nbBytes, boolean isSigned)

        +<s>boolean isValidHexString (String hex)
        +<s>String normalizeHexString (String hex)

        +<s>byte[] fromHex (String hex)
        +<s>String toHex (byte[] data)

        +<s>int twoBytesToInt (byte[] bytes, int offset)
        +<s>int twoBytesSignedToInt (byte[] bytes, int offset)
        +<s>int threeBytesToInt (byte[] bytes, int offset)
        +<s>int threeBytesSignedToInt (byte[] bytes, int offset)
        +<s>int fourBytesToInt (byte[] bytes, int offset)
    }
    +class "**final** HexUtil" as HexUtil {
        +{static} boolean isValid (String hex)

        +{static} byte[] toByteArray (String hex)
        +{static} byte toByte (String hex)
        +{static} short toShort (String hex)
        +{static} int toInt (String hex)
        +{static} long toLong (String hex)

        +{static} String toHex (byte[] tab)
        +{static} String toHex (byte val)
        +{static} String toHex (short val)
        +{static} String toHex (int val)
        +{static} String toHex (long val)
    }
    +class "**final** ApduUtil" as ApduUtil {
        +{static} byte[] build (byte cla, byte ins, byte p1, byte p2, byte[] dataIn, Byte le)

        +{static} boolean isCase4 (byte[] apduCommand)
    }
    +class BerTlvUtil {
        +{static} Map<Integer, byte[]> parseSimple (byte[] tlvStructure, boolean primitiveOnly)
        +{static} Map<Integer, List<byte[]>> parse (byte[] tlvStructure, boolean primitiveOnly)

        +{static} boolean isConstructed (int tagId)
    }
    package json {
        +class "**final** JsonUtil" as JsonUtil {
            +{static} <back:yellow>Gson</back> getParser ()
            +{static} void registerTypeAdapter (Class<?> matchingClass,
                \tObject adapter, boolean withSubclasses)

            +{static} String toJson (Object obj)
        }
        +class BodyError {
            +BodyError (Exception exception)

            +String getCode ()
            +Exception getException ()
        }
        +class "<<<back:yellow>JsonDeserializer<BodyError></back>>>\nBodyErrorJsonDeserializer" as BodyErrorJsonDeserializer {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<byte[]></back>>>\n<<<back:yellow>JsonDeserializer<byte[]></back>>>\nByteArrayJsonAdapter" as ByteArrayJsonAdapter {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Byte></back>>>\n<<<back:yellow>JsonDeserializer<Byte></back>>>\nByteJsonAdapter" as ByteJsonAdapter {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Short></back>>>\n<<<back:yellow>JsonDeserializer<Short></back>>>\nShortJsonAdapter" as ShortJsonAdapter {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Integer></back>>>\n<<<back:yellow>JsonDeserializer<Integer></back>>>\nIntegerJsonAdapter" as IntegerJsonAdapter {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Long></back>>>\n<<<back:yellow>JsonDeserializer<Long></back>>>\nLongJsonAdapter" as LongJsonAdapter {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Throwable></back>>>\nThrowableJsonSerializer" as ThrowableJsonSerializer {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Date></back>>>\nDateJsonSerializer" as DateJsonSerializer {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Calendar></back>>>\n<<<back:yellow>JsonDeserializer<Calendar></back>>>\nCalendarJsonAdapter" as CalendarJsonAdapter {
            __
            ...
        }
    }
    package protocol {
        +enum "<s>ContactCardCommonProtocol</s>" as ContactCardCommonProtocol {
            <s>ISO_7816_3
            <s>ISO_7816_3_TO
            <s>ISO_7816_3_T1
            <s>INNOVATRON_HIGH_SPEED_PROTOCOL_SAM
        }
        +enum "<s>ContactlessCardCommonProtocol</s>" as ContactlessCardCommonProtocol {
            <s>ISO_14443_4
            <s>NFC_A_ISO_14443_3A
            <s>NFC_B_ISO_14443_3B
            <s>NFC_F_JIS_6319_4
            <s>NFC_V_ISO_15693
            <s>INNOVATRON_B_PRIME_CARD
        }
    }
}

' Associations

' == LAYOUT ==

ByteArrayUtil -[hidden]- JsonUtil

Assert -[hidden]- ByteArrayUtil
Assert -[hidden]- ApduUtil
Assert -[hidden]- BerTlvUtil

' == STYLE ==

package util #C_GREY1 {}
package json #C_GREY2 {}
package protocol #C_GREY2 {}

@enduml