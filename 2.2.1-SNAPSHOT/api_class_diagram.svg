<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1261px" preserveAspectRatio="none" style="width:1527px;height:1261px;background:#FFFFFF;" version="1.1" viewBox="0 0 1527 1261" width="1527px" zoomAndPan="magnify"><defs><filter height="1" id="b180i5m1pk54t50" width="1" x="0" y="0"><feFlood flood-color="#FFFF00" result="flood"/><feComposite in="SourceGraphic" in2="flood" operator="over"/></filter></defs><g><rect fill="none" height="25.6406" id="_title" style="stroke:none;stroke-width:1.0;" width="331" x="591" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="321" x="596" y="22.6738">Keyple - keyple-util-java-lib - 2.2.+ (30/09/2022)</text><rect fill="#DDDDDD" height="58.9219" id="_legend" rx="7.5" ry="7.5" style="stroke:#000000;stroke-width:1.0;" width="198" x="657.5" y="44.6406"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="88" x="663.5" y="63.3145">Colors legend</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="755.5" y="63.3145">:</text><ellipse cx="669" cy="74.4219" fill="#000000" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:0.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="676.5" y="78.9551">External API references</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="828.5" y="78.9551">:</text><rect fill="#000000" height="3.5" style="stroke:#000000;stroke-width:0.0;" width="3.5" x="684.5" y="89.5625"/><text fill="#000000" filter="url(#b180i5m1pk54t50)" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="160" x="689.5" y="94.5957">com.google.code.gson</text><!--MD5=[3e81cc6ee7da4fa8b6adc12b329096f6]
cluster util--><g id="cluster_util"><path d="M8.5,118.5625 L200.5,118.5625 A3.75,3.75 0 0 1 203,121.0625 L210,140.2031 L1517.5,140.2031 A2.5,2.5 0 0 1 1520,142.7031 L1520,1252.0625 A2.5,2.5 0 0 1 1517.5,1254.5625 L8.5,1254.5625 A2.5,2.5 0 0 1 6,1252.0625 L6,121.0625 A2.5,2.5 0 0 1 8.5,118.5625 " fill="#F8F9F9" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="210" y1="140.2031" y2="140.2031"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="191" x="10" y="133.2363">org.eclipse.keyple.core.util</text></g><!--MD5=[4ac75f36695ece63879c728112de416c]
cluster json--><g id="cluster_json"><path d="M32.5,756.5625 L63.5,756.5625 A3.75,3.75 0 0 1 66,759.0625 L73,778.2031 L1493.5,778.2031 A2.5,2.5 0 0 1 1496,780.7031 L1496,1228.0625 A2.5,2.5 0 0 1 1493.5,1230.5625 L32.5,1230.5625 A2.5,2.5 0 0 1 30,1228.0625 L30,759.0625 A2.5,2.5 0 0 1 32.5,756.5625 " fill="#F2F3F4" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="30" x2="73" y1="778.2031" y2="778.2031"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="30" x="34" y="771.2363">json</text></g><!--MD5=[59e9faf83e5ffb743ef5750f57e8e967]
cluster protocol--><g id="cluster_protocol"><path d="M855.5,173.0625 L915.5,173.0625 A3.75,3.75 0 0 1 918,175.5625 L925,194.7031 L1493.5,194.7031 A2.5,2.5 0 0 1 1496,197.2031 L1496,362.5625 A2.5,2.5 0 0 1 1493.5,365.0625 L855.5,365.0625 A2.5,2.5 0 0 1 853,362.5625 L853,175.5625 A2.5,2.5 0 0 1 855.5,173.0625 " fill="#F2F3F4" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="853" x2="925" y1="194.7031" y2="194.7031"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="59" x="857" y="187.7363">protocol</text></g><!--MD5=[748d96b9802ee0d94a77604226d4f903]
class Assert--><g id="elem_Assert"><rect codeLine="60" fill="#FEFECE" height="220.0469" id="Assert" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="500" x="334" y="168.0625"/><ellipse cx="537.25" cy="184.0625" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M539.25,180.5625 Q539.4531,180.0625 539.6875,179.8125 Q539.9219,179.5625 540.1875,179.5625 Q540.6563,179.5625 540.9531,179.8438 Q541.25,180.125 541.25,180.7813 L541.25,182.3438 Q541.25,183 540.9688,183.2813 Q540.6875,183.5625 540.25,183.5625 Q539.8594,183.5625 539.6094,183.3906 Q539.3594,183.2188 539.25,182.7656 Q539.2031,182.4531 539.0313,182.2813 Q538.7188,181.9531 538.1563,181.7656 Q537.5938,181.5625 537.0313,181.5625 Q536.3281,181.5625 535.7344,181.8438 Q535.1563,182.125 534.7031,182.75 Q534.25,183.375 534.25,184.2344 L534.25,185.1563 Q534.25,186.1875 535.0938,186.875 Q535.9375,187.5625 537.4375,187.5625 Q538.3281,187.5625 538.9531,187.3594 Q539.3125,187.25 539.7188,186.8906 Q539.9844,186.6875 540.125,186.625 Q540.2656,186.5625 540.4375,186.5625 Q540.7656,186.5625 541,186.8281 Q541.25,187.0781 541.25,187.4375 Q541.25,187.7813 540.9063,188.1875 Q540.4063,188.7813 539.6094,189.1094 Q538.5625,189.5625 537.2813,189.5625 Q535.7813,189.5625 534.5781,188.9688 Q533.6094,188.5 532.9219,187.4844 Q532.25,186.4688 532.25,185.2656 L532.25,184.1719 Q532.25,182.9219 532.8438,181.8281 Q533.4531,180.7344 534.5,180.1563 Q535.5625,179.5625 536.75,179.5625 Q537.4688,179.5625 538.0938,179.8125 Q538.7188,180.0625 539.25,180.5625 Z " fill="#000000"/><ellipse cx="562.75" cy="183.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="30" x="568.75" y="188.916">final</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="40" x="602.75" y="188.916">Assert</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="335" x2="833" y1="200.0625" y2="200.0625"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="335" x2="833" y1="208.0625" y2="208.0625"/><ellipse cx="345" cy="221.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="131" x="354" y="224.7363">Assert getInstance ()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="354" y="240.377">Â </text><ellipse cx="345" cy="252.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="249" x="354" y="256.0176">Assert notNull (Object obj, String name)</text><ellipse cx="345" cy="268.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="261" x="354" y="271.6582">Assert notEmpty (String obj, String name)</text><ellipse cx="345" cy="283.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="310" x="354" y="287.2988">Assert notEmpty (Collection&lt;?&gt; obj, String name)</text><ellipse cx="345" cy="299.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="259" x="354" y="302.9395">Assert notEmpty (byte[] obj, String name)</text><ellipse cx="345" cy="315.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="354" y="318.5801">Assert isTrue (Boolean condition, String name)</text><ellipse cx="345" cy="330.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="421" x="354" y="334.2207">Assert greaterOrEqual (Integer number, int minValue, String name)</text><ellipse cx="345" cy="346.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="345" x="354" y="349.8613">Assert isEqual (Integer number, int value, String name)</text><ellipse cx="345" cy="362.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="474" x="354" y="365.502">Assert isInRange (Integer number, int minValue, int maxValue, String name)</text><ellipse cx="345" cy="377.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="275" x="354" y="381.1426">Assert isHexString (String hex, String name)</text></g><!--MD5=[27f29ba09c13b8ede23502b37e39f025]
class ByteArrayUtil--><g id="elem_ByteArrayUtil"><rect codeLine="73" fill="#FEFECE" height="266.9688" id="ByteArrayUtil" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="431" x="22.5" y="463.5625"/><ellipse cx="170.75" cy="479.5625" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M172.75,476.0625 Q172.9531,475.5625 173.1875,475.3125 Q173.4219,475.0625 173.6875,475.0625 Q174.1563,475.0625 174.4531,475.3438 Q174.75,475.625 174.75,476.2813 L174.75,477.8438 Q174.75,478.5 174.4688,478.7813 Q174.1875,479.0625 173.75,479.0625 Q173.3594,479.0625 173.1094,478.8906 Q172.8594,478.7188 172.75,478.2656 Q172.7031,477.9531 172.5313,477.7813 Q172.2188,477.4531 171.6563,477.2656 Q171.0938,477.0625 170.5313,477.0625 Q169.8281,477.0625 169.2344,477.3438 Q168.6563,477.625 168.2031,478.25 Q167.75,478.875 167.75,479.7344 L167.75,480.6563 Q167.75,481.6875 168.5938,482.375 Q169.4375,483.0625 170.9375,483.0625 Q171.8281,483.0625 172.4531,482.8594 Q172.8125,482.75 173.2188,482.3906 Q173.4844,482.1875 173.625,482.125 Q173.7656,482.0625 173.9375,482.0625 Q174.2656,482.0625 174.5,482.3281 Q174.75,482.5781 174.75,482.9375 Q174.75,483.2813 174.4063,483.6875 Q173.9063,484.2813 173.1094,484.6094 Q172.0625,485.0625 170.7813,485.0625 Q169.2813,485.0625 168.0781,484.4688 Q167.1094,484 166.4219,482.9844 Q165.75,481.9688 165.75,480.7656 L165.75,479.6719 Q165.75,478.4219 166.3438,477.3281 Q166.9531,476.2344 168,475.6563 Q169.0625,475.0625 170.25,475.0625 Q170.9688,475.0625 171.5938,475.3125 Q172.2188,475.5625 172.75,476.0625 Z " fill="#000000"/><ellipse cx="196.25" cy="479.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="30" x="202.25" y="484.416">final</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="236.25" y="484.416">ByteArrayUtil</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="23.5" x2="452.5" y1="495.5625" y2="495.5625"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="23.5" x2="452.5" y1="503.5625" y2="503.5625"/><ellipse cx="33.5" cy="516.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="346" x="42.5" y="520.2363">byte[] extractBytes (byte[] src, int bitOffset, int nbBytes)</text><ellipse cx="33.5" cy="532.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="405" x="42.5" y="535.877">int extractInt (byte[] src, int offset, int nbBytes, boolean isSigned)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="42.5" y="551.5176">Â </text><ellipse cx="33.5" cy="563.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="233" x="42.5" y="567.1582">boolean isValidHexString (String hex)</text><ellipse cx="33.5" cy="579.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="238" x="42.5" y="582.7988">String normalizeHexString (String hex)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="42.5" y="598.4395">Â </text><ellipse cx="33.5" cy="610.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="167" x="42.5" y="614.0801">byte[] fromHex (String hex)</text><ellipse cx="33.5" cy="626.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="157" x="42.5" y="629.7207">String toHex (byte[] data)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="42.5" y="645.3613">Â </text><ellipse cx="33.5" cy="657.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="256" x="42.5" y="661.002">int twoBytesToInt (byte[] bytes, int offset)</text><ellipse cx="33.5" cy="673.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="300" x="42.5" y="676.6426">int twoBytesSignedToInt (byte[] bytes, int offset)</text><ellipse cx="33.5" cy="688.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="268" x="42.5" y="692.2832">int threeBytesToInt (byte[] bytes, int offset)</text><ellipse cx="33.5" cy="704.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="312" x="42.5" y="707.9238">int threeBytesSignedToInt (byte[] bytes, int offset)</text><ellipse cx="33.5" cy="720.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="260" x="42.5" y="723.5645">int fourBytesToInt (byte[] bytes, int offset)</text></g><!--MD5=[844fd0b684b3a1a64c715634134b0ce5]
class HexUtil--><g id="elem_HexUtil"><rect codeLine="89" fill="#FEFECE" height="251.3281" id="HexUtil" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="216" x="53" y="152.5625"/><ellipse cx="113.25" cy="168.5625" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M115.25,165.0625 Q115.4531,164.5625 115.6875,164.3125 Q115.9219,164.0625 116.1875,164.0625 Q116.6563,164.0625 116.9531,164.3438 Q117.25,164.625 117.25,165.2813 L117.25,166.8438 Q117.25,167.5 116.9688,167.7813 Q116.6875,168.0625 116.25,168.0625 Q115.8594,168.0625 115.6094,167.8906 Q115.3594,167.7188 115.25,167.2656 Q115.2031,166.9531 115.0313,166.7813 Q114.7188,166.4531 114.1563,166.2656 Q113.5938,166.0625 113.0313,166.0625 Q112.3281,166.0625 111.7344,166.3438 Q111.1563,166.625 110.7031,167.25 Q110.25,167.875 110.25,168.7344 L110.25,169.6563 Q110.25,170.6875 111.0938,171.375 Q111.9375,172.0625 113.4375,172.0625 Q114.3281,172.0625 114.9531,171.8594 Q115.3125,171.75 115.7188,171.3906 Q115.9844,171.1875 116.125,171.125 Q116.2656,171.0625 116.4375,171.0625 Q116.7656,171.0625 117,171.3281 Q117.25,171.5781 117.25,171.9375 Q117.25,172.2813 116.9063,172.6875 Q116.4063,173.2813 115.6094,173.6094 Q114.5625,174.0625 113.2813,174.0625 Q111.7813,174.0625 110.5781,173.4688 Q109.6094,173 108.9219,171.9844 Q108.25,170.9688 108.25,169.7656 L108.25,168.6719 Q108.25,167.4219 108.8438,166.3281 Q109.4531,165.2344 110.5,164.6563 Q111.5625,164.0625 112.75,164.0625 Q113.4688,164.0625 114.0938,164.3125 Q114.7188,164.5625 115.25,165.0625 Z " fill="#000000"/><ellipse cx="138.75" cy="168.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="30" x="144.75" y="173.416">final</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="42" x="178.75" y="173.416">HexUtil</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="54" x2="268" y1="184.5625" y2="184.5625"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="54" x2="268" y1="192.5625" y2="192.5625"/><ellipse cx="64" cy="205.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="173" x="73" y="209.2363">boolean isValid (String hex)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="73" y="224.877">Â </text><ellipse cx="64" cy="237.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="190" x="73" y="240.5176">byte[] toByteArray (String hex)</text><ellipse cx="64" cy="252.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="73" y="256.1582">byte toByte (String hex)</text><ellipse cx="64" cy="268.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="73" y="271.7988">short toShort (String hex)</text><ellipse cx="64" cy="284.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="123" x="73" y="287.4395">int toInt (String hex)</text><ellipse cx="64" cy="299.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="152" x="73" y="303.0801">long toLong (String hex)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="73" y="318.7207">Â </text><ellipse cx="64" cy="331.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="149" x="73" y="334.3613">String toHex (byte[] tab)</text><ellipse cx="64" cy="346.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="139" x="73" y="350.002">String toHex (byte val)</text><ellipse cx="64" cy="362.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="144" x="73" y="365.6426">String toHex (short val)</text><ellipse cx="64" cy="377.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="127" x="73" y="381.2832">String toHex (int val)</text><ellipse cx="64" cy="393.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="139" x="73" y="396.9238">String toHex (long val)</text></g><!--MD5=[458b3a9396e0ca5416a37f6d6326ccaf]
class ApduUtil--><g id="elem_ApduUtil"><rect codeLine="104" fill="#FEFECE" height="94.9219" id="ApduUtil" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="462" x="489" y="549.5625"/><ellipse cx="667.25" cy="565.5625" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M669.25,562.0625 Q669.4531,561.5625 669.6875,561.3125 Q669.9219,561.0625 670.1875,561.0625 Q670.6563,561.0625 670.9531,561.3438 Q671.25,561.625 671.25,562.2813 L671.25,563.8438 Q671.25,564.5 670.9688,564.7813 Q670.6875,565.0625 670.25,565.0625 Q669.8594,565.0625 669.6094,564.8906 Q669.3594,564.7188 669.25,564.2656 Q669.2031,563.9531 669.0313,563.7813 Q668.7188,563.4531 668.1563,563.2656 Q667.5938,563.0625 667.0313,563.0625 Q666.3281,563.0625 665.7344,563.3438 Q665.1563,563.625 664.7031,564.25 Q664.25,564.875 664.25,565.7344 L664.25,566.6563 Q664.25,567.6875 665.0938,568.375 Q665.9375,569.0625 667.4375,569.0625 Q668.3281,569.0625 668.9531,568.8594 Q669.3125,568.75 669.7188,568.3906 Q669.9844,568.1875 670.125,568.125 Q670.2656,568.0625 670.4375,568.0625 Q670.7656,568.0625 671,568.3281 Q671.25,568.5781 671.25,568.9375 Q671.25,569.2813 670.9063,569.6875 Q670.4063,570.2813 669.6094,570.6094 Q668.5625,571.0625 667.2813,571.0625 Q665.7813,571.0625 664.5781,570.4688 Q663.6094,570 662.9219,568.9844 Q662.25,567.9688 662.25,566.7656 L662.25,565.6719 Q662.25,564.4219 662.8438,563.3281 Q663.4531,562.2344 664.5,561.6563 Q665.5625,561.0625 666.75,561.0625 Q667.4688,561.0625 668.0938,561.3125 Q668.7188,561.5625 669.25,562.0625 Z " fill="#000000"/><ellipse cx="692.75" cy="565.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="30" x="698.75" y="570.416">final</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="732.75" y="570.416">ApduUtil</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="490" x2="950" y1="581.5625" y2="581.5625"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="490" x2="950" y1="589.5625" y2="589.5625"/><ellipse cx="500" cy="602.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="436" x="509" y="606.2363">byte[] build (byte cla, byte ins, byte p1, byte p2, byte[] dataIn, Byte le)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="509" y="621.877">Â </text><ellipse cx="500" cy="634.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="255" x="509" y="637.5176">boolean isCase4 (byte[] apduCommand)</text></g><!--MD5=[967b5bdf980b1f0d408075c95cfc8699]
class BerTlvUtil--><g id="elem_BerTlvUtil"><rect codeLine="109" fill="#FEFECE" height="110.5625" id="BerTlvUtil" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="507" x="986.5" y="541.5625"/><ellipse cx="1200.25" cy="557.5625" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1202.25,554.0625 Q1202.4531,553.5625 1202.6875,553.3125 Q1202.9219,553.0625 1203.1875,553.0625 Q1203.6563,553.0625 1203.9531,553.3438 Q1204.25,553.625 1204.25,554.2813 L1204.25,555.8438 Q1204.25,556.5 1203.9688,556.7813 Q1203.6875,557.0625 1203.25,557.0625 Q1202.8594,557.0625 1202.6094,556.8906 Q1202.3594,556.7188 1202.25,556.2656 Q1202.2031,555.9531 1202.0313,555.7813 Q1201.7188,555.4531 1201.1563,555.2656 Q1200.5938,555.0625 1200.0313,555.0625 Q1199.3281,555.0625 1198.7344,555.3438 Q1198.1563,555.625 1197.7031,556.25 Q1197.25,556.875 1197.25,557.7344 L1197.25,558.6563 Q1197.25,559.6875 1198.0938,560.375 Q1198.9375,561.0625 1200.4375,561.0625 Q1201.3281,561.0625 1201.9531,560.8594 Q1202.3125,560.75 1202.7188,560.3906 Q1202.9844,560.1875 1203.125,560.125 Q1203.2656,560.0625 1203.4375,560.0625 Q1203.7656,560.0625 1204,560.3281 Q1204.25,560.5781 1204.25,560.9375 Q1204.25,561.2813 1203.9063,561.6875 Q1203.4063,562.2813 1202.6094,562.6094 Q1201.5625,563.0625 1200.2813,563.0625 Q1198.7813,563.0625 1197.5781,562.4688 Q1196.6094,562 1195.9219,560.9844 Q1195.25,559.9688 1195.25,558.7656 L1195.25,557.6719 Q1195.25,556.4219 1195.8438,555.3281 Q1196.4531,554.2344 1197.5,553.6563 Q1198.5625,553.0625 1199.75,553.0625 Q1200.4688,553.0625 1201.0938,553.3125 Q1201.7188,553.5625 1202.25,554.0625 Z " fill="#000000"/><ellipse cx="1225.75" cy="557.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="1231.75" y="562.416">BerTlvUtil</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="987.5" x2="1492.5" y1="573.5625" y2="573.5625"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="987.5" x2="1492.5" y1="581.5625" y2="581.5625"/><ellipse cx="997.5" cy="594.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="481" x="1006.5" y="598.2363">Map&lt;Integer, byte[]&gt; parseSimple (byte[] tlvStructure, boolean primitiveOnly)</text><ellipse cx="997.5" cy="610.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="477" x="1006.5" y="613.877">Map&lt;Integer, List&lt;byte[]&gt;&gt; parse (byte[] tlvStructure, boolean primitiveOnly)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="1006.5" y="629.5176">Â </text><ellipse cx="997.5" cy="641.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="206" x="1006.5" y="645.1582">boolean isConstructed (int tagId)</text></g><!--MD5=[ff1fef1d5f830c31212d01e346df5a91]
class JsonUtil--><g id="elem_JsonUtil"><rect codeLine="116" fill="#FEFECE" height="126.2031" id="JsonUtil" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="354" x="46" y="790.5625"/><ellipse cx="172.25" cy="806.5625" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M174.25,803.0625 Q174.4531,802.5625 174.6875,802.3125 Q174.9219,802.0625 175.1875,802.0625 Q175.6563,802.0625 175.9531,802.3438 Q176.25,802.625 176.25,803.2813 L176.25,804.8438 Q176.25,805.5 175.9688,805.7813 Q175.6875,806.0625 175.25,806.0625 Q174.8594,806.0625 174.6094,805.8906 Q174.3594,805.7188 174.25,805.2656 Q174.2031,804.9531 174.0313,804.7813 Q173.7188,804.4531 173.1563,804.2656 Q172.5938,804.0625 172.0313,804.0625 Q171.3281,804.0625 170.7344,804.3438 Q170.1563,804.625 169.7031,805.25 Q169.25,805.875 169.25,806.7344 L169.25,807.6563 Q169.25,808.6875 170.0938,809.375 Q170.9375,810.0625 172.4375,810.0625 Q173.3281,810.0625 173.9531,809.8594 Q174.3125,809.75 174.7188,809.3906 Q174.9844,809.1875 175.125,809.125 Q175.2656,809.0625 175.4375,809.0625 Q175.7656,809.0625 176,809.3281 Q176.25,809.5781 176.25,809.9375 Q176.25,810.2813 175.9063,810.6875 Q175.4063,811.2813 174.6094,811.6094 Q173.5625,812.0625 172.2813,812.0625 Q170.7813,812.0625 169.5781,811.4688 Q168.6094,811 167.9219,809.9844 Q167.25,808.9688 167.25,807.7656 L167.25,806.6719 Q167.25,805.4219 167.8438,804.3281 Q168.4531,803.2344 169.5,802.6563 Q170.5625,802.0625 171.75,802.0625 Q172.4688,802.0625 173.0938,802.3125 Q173.7188,802.5625 174.25,803.0625 Z " fill="#000000"/><ellipse cx="197.75" cy="806.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="30" x="203.75" y="811.416">final</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="48" x="237.75" y="811.416">JsonUtil</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="47" x2="399" y1="822.5625" y2="822.5625"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="47" x2="399" y1="830.5625" y2="830.5625"/><ellipse cx="57" cy="843.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b180i5m1pk54t50)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="34" x="66" y="847.2363">Gson</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="76" x="104" y="847.2363">getParser ()</text><ellipse cx="57" cy="859.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="328" x="66" y="862.877">void registerTypeAdapter (Class&lt;?&gt; matchingClass,</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="258" x="98" y="878.5176">Object adapter, boolean withSubclasses)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="66" y="894.1582">Â </text><ellipse cx="57" cy="906.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="160" x="66" y="909.7988">String toJson (Object obj)</text></g><!--MD5=[3d84c5190c7a3821707931f3b8039d88]
class BodyError--><g id="elem_BodyError"><rect codeLine="123" fill="#FEFECE" height="110.5625" id="BodyError" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="229" x="435.5" y="798.0625"/><ellipse cx="508.25" cy="814.0625" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M510.25,810.5625 Q510.4531,810.0625 510.6875,809.8125 Q510.9219,809.5625 511.1875,809.5625 Q511.6563,809.5625 511.9531,809.8438 Q512.25,810.125 512.25,810.7813 L512.25,812.3438 Q512.25,813 511.9688,813.2813 Q511.6875,813.5625 511.25,813.5625 Q510.8594,813.5625 510.6094,813.3906 Q510.3594,813.2188 510.25,812.7656 Q510.2031,812.4531 510.0313,812.2813 Q509.7188,811.9531 509.1563,811.7656 Q508.5938,811.5625 508.0313,811.5625 Q507.3281,811.5625 506.7344,811.8438 Q506.1563,812.125 505.7031,812.75 Q505.25,813.375 505.25,814.2344 L505.25,815.1563 Q505.25,816.1875 506.0938,816.875 Q506.9375,817.5625 508.4375,817.5625 Q509.3281,817.5625 509.9531,817.3594 Q510.3125,817.25 510.7188,816.8906 Q510.9844,816.6875 511.125,816.625 Q511.2656,816.5625 511.4375,816.5625 Q511.7656,816.5625 512,816.8281 Q512.25,817.0781 512.25,817.4375 Q512.25,817.7813 511.9063,818.1875 Q511.4063,818.7813 510.6094,819.1094 Q509.5625,819.5625 508.2813,819.5625 Q506.7813,819.5625 505.5781,818.9688 Q504.6094,818.5 503.9219,817.4844 Q503.25,816.4688 503.25,815.2656 L503.25,814.1719 Q503.25,812.9219 503.8438,811.8281 Q504.4531,810.7344 505.5,810.1563 Q506.5625,809.5625 507.75,809.5625 Q508.4688,809.5625 509.0938,809.8125 Q509.7188,810.0625 510.25,810.5625 Z " fill="#000000"/><ellipse cx="533.75" cy="813.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="539.75" y="818.916">BodyError</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="436.5" x2="663.5" y1="830.0625" y2="830.0625"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="436.5" x2="663.5" y1="838.0625" y2="838.0625"/><ellipse cx="446.5" cy="851.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="203" x="455.5" y="854.7363">BodyError (Exception exception)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="455.5" y="870.377">Â </text><ellipse cx="446.5" cy="882.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="455.5" y="886.0176">String getCode ()</text><ellipse cx="446.5" cy="898.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="455.5" y="901.6582">Exception getException ()</text></g><!--MD5=[9a218190a85a7a5cf1f408f9962c53bf]
class BodyErrorJsonDeserializer--><g id="elem_BodyErrorJsonDeserializer"><rect codeLine="129" fill="#FEFECE" height="72.9219" id="BodyErrorJsonDeserializer" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="258" x="700" y="817.0625"/><ellipse cx="715" cy="837.7031" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M717,834.2031 Q717.2031,833.7031 717.4375,833.4531 Q717.6719,833.2031 717.9375,833.2031 Q718.4063,833.2031 718.7031,833.4844 Q719,833.7656 719,834.4219 L719,835.9844 Q719,836.6406 718.7188,836.9219 Q718.4375,837.2031 718,837.2031 Q717.6094,837.2031 717.3594,837.0313 Q717.1094,836.8594 717,836.4063 Q716.9531,836.0938 716.7813,835.9219 Q716.4688,835.5938 715.9063,835.4063 Q715.3438,835.2031 714.7813,835.2031 Q714.0781,835.2031 713.4844,835.4844 Q712.9063,835.7656 712.4531,836.3906 Q712,837.0156 712,837.875 L712,838.7969 Q712,839.8281 712.8438,840.5156 Q713.6875,841.2031 715.1875,841.2031 Q716.0781,841.2031 716.7031,841 Q717.0625,840.8906 717.4688,840.5313 Q717.7344,840.3281 717.875,840.2656 Q718.0156,840.2031 718.1875,840.2031 Q718.5156,840.2031 718.75,840.4688 Q719,840.7188 719,841.0781 Q719,841.4219 718.6563,841.8281 Q718.1563,842.4219 717.3594,842.75 Q716.3125,843.2031 715.0313,843.2031 Q713.5313,843.2031 712.3281,842.6094 Q711.3594,842.1406 710.6719,841.125 Q710,840.1094 710,838.9063 L710,837.8125 Q710,836.5625 710.5938,835.4688 Q711.2031,834.375 712.25,833.7969 Q713.3125,833.2031 714.5,833.2031 Q715.2188,833.2031 715.8438,833.4531 Q716.4688,833.7031 717,834.2031 Z " fill="#000000"/><ellipse cx="734" cy="837.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="740" y="834.7363">&lt;&lt;</text><text fill="#000000" filter="url(#b180i5m1pk54t50)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="756" y="834.7363">JsonDeserializer&lt;BodyError&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="939" y="834.7363">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="764" y="850.377">BodyErrorJsonDeserializer</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="701" x2="957" y1="858.3438" y2="858.3438"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="701" x2="957" y1="866.3438" y2="866.3438"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="12" x="706" y="883.0176">...</text></g><!--MD5=[f0f8c8dfcaa5a8f8c3b99a1fa7726780]
class ByteArrayJsonAdapter--><g id="elem_ByteArrayJsonAdapter"><rect codeLine="133" fill="#FEFECE" height="88.5625" id="ByteArrayJsonAdapter" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="229" x="993.5" y="809.0625"/><ellipse cx="1008.5" cy="837.5234" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1010.5,834.0234 Q1010.7031,833.5234 1010.9375,833.2734 Q1011.1719,833.0234 1011.4375,833.0234 Q1011.9063,833.0234 1012.2031,833.3047 Q1012.5,833.5859 1012.5,834.2422 L1012.5,835.8047 Q1012.5,836.4609 1012.2188,836.7422 Q1011.9375,837.0234 1011.5,837.0234 Q1011.1094,837.0234 1010.8594,836.8516 Q1010.6094,836.6797 1010.5,836.2266 Q1010.4531,835.9141 1010.2813,835.7422 Q1009.9688,835.4141 1009.4063,835.2266 Q1008.8438,835.0234 1008.2813,835.0234 Q1007.5781,835.0234 1006.9844,835.3047 Q1006.4063,835.5859 1005.9531,836.2109 Q1005.5,836.8359 1005.5,837.6953 L1005.5,838.6172 Q1005.5,839.6484 1006.3438,840.3359 Q1007.1875,841.0234 1008.6875,841.0234 Q1009.5781,841.0234 1010.2031,840.8203 Q1010.5625,840.7109 1010.9688,840.3516 Q1011.2344,840.1484 1011.375,840.0859 Q1011.5156,840.0234 1011.6875,840.0234 Q1012.0156,840.0234 1012.25,840.2891 Q1012.5,840.5391 1012.5,840.8984 Q1012.5,841.2422 1012.1563,841.6484 Q1011.6563,842.2422 1010.8594,842.5703 Q1009.8125,843.0234 1008.5313,843.0234 Q1007.0313,843.0234 1005.8281,842.4297 Q1004.8594,841.9609 1004.1719,840.9453 Q1003.5,839.9297 1003.5,838.7266 L1003.5,837.6328 Q1003.5,836.3828 1004.0938,835.2891 Q1004.7031,834.1953 1005.75,833.6172 Q1006.8125,833.0234 1008,833.0234 Q1008.7188,833.0234 1009.3438,833.2734 Q1009.9688,833.5234 1010.5,834.0234 Z " fill="#000000"/><ellipse cx="1027.5" cy="837.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1041.5" y="826.7363">&lt;&lt;</text><text fill="#000000" filter="url(#b180i5m1pk54t50)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="1057.5" y="826.7363">JsonSerializer&lt;byte[]&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1195.5" y="826.7363">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1033.5" y="842.377">&lt;&lt;</text><text fill="#000000" filter="url(#b180i5m1pk54t50)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="1049.5" y="842.377">JsonDeserializer&lt;byte[]&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1203.5" y="842.377">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="1056" y="858.0176">ByteArrayJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="994.5" x2="1221.5" y1="865.9844" y2="865.9844"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="994.5" x2="1221.5" y1="873.9844" y2="873.9844"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="12" x="999.5" y="890.6582">...</text></g><!--MD5=[52cc22ead8f9cede3c7076eefab9a46c]
class ByteJsonAdapter--><g id="elem_ByteJsonAdapter"><rect codeLine="137" fill="#FEFECE" height="88.5625" id="ByteJsonAdapter" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="222" x="1258" y="809.0625"/><ellipse cx="1273" cy="837.5234" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1275,834.0234 Q1275.2031,833.5234 1275.4375,833.2734 Q1275.6719,833.0234 1275.9375,833.0234 Q1276.4063,833.0234 1276.7031,833.3047 Q1277,833.5859 1277,834.2422 L1277,835.8047 Q1277,836.4609 1276.7188,836.7422 Q1276.4375,837.0234 1276,837.0234 Q1275.6094,837.0234 1275.3594,836.8516 Q1275.1094,836.6797 1275,836.2266 Q1274.9531,835.9141 1274.7813,835.7422 Q1274.4688,835.4141 1273.9063,835.2266 Q1273.3438,835.0234 1272.7813,835.0234 Q1272.0781,835.0234 1271.4844,835.3047 Q1270.9063,835.5859 1270.4531,836.2109 Q1270,836.8359 1270,837.6953 L1270,838.6172 Q1270,839.6484 1270.8438,840.3359 Q1271.6875,841.0234 1273.1875,841.0234 Q1274.0781,841.0234 1274.7031,840.8203 Q1275.0625,840.7109 1275.4688,840.3516 Q1275.7344,840.1484 1275.875,840.0859 Q1276.0156,840.0234 1276.1875,840.0234 Q1276.5156,840.0234 1276.75,840.2891 Q1277,840.5391 1277,840.8984 Q1277,841.2422 1276.6563,841.6484 Q1276.1563,842.2422 1275.3594,842.5703 Q1274.3125,843.0234 1273.0313,843.0234 Q1271.5313,843.0234 1270.3281,842.4297 Q1269.3594,841.9609 1268.6719,840.9453 Q1268,839.9297 1268,838.7266 L1268,837.6328 Q1268,836.3828 1268.5938,835.2891 Q1269.2031,834.1953 1270.25,833.6172 Q1271.3125,833.0234 1272.5,833.0234 Q1273.2188,833.0234 1273.8438,833.2734 Q1274.4688,833.5234 1275,834.0234 Z " fill="#000000"/><ellipse cx="1292" cy="837.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1306" y="826.7363">&lt;&lt;</text><text fill="#000000" filter="url(#b180i5m1pk54t50)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="1322" y="826.7363">JsonSerializer&lt;Byte&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1453" y="826.7363">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1298" y="842.377">&lt;&lt;</text><text fill="#000000" filter="url(#b180i5m1pk54t50)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="1314" y="842.377">JsonDeserializer&lt;Byte&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1461" y="842.377">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="1334" y="858.0176">ByteJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="1259" x2="1479" y1="865.9844" y2="865.9844"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="1259" x2="1479" y1="873.9844" y2="873.9844"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="12" x="1264" y="890.6582">...</text></g><!--MD5=[514e1602104e75c9a95a46a815824089]
class ShortJsonAdapter--><g id="elem_ShortJsonAdapter"><rect codeLine="141" fill="#FEFECE" height="88.5625" id="ShortJsonAdapter" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="228" x="436" y="976.5625"/><ellipse cx="451" cy="1005.0234" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M453,1001.5234 Q453.2031,1001.0234 453.4375,1000.7734 Q453.6719,1000.5234 453.9375,1000.5234 Q454.4063,1000.5234 454.7031,1000.8047 Q455,1001.0859 455,1001.7422 L455,1003.3047 Q455,1003.9609 454.7188,1004.2422 Q454.4375,1004.5234 454,1004.5234 Q453.6094,1004.5234 453.3594,1004.3516 Q453.1094,1004.1797 453,1003.7266 Q452.9531,1003.4141 452.7813,1003.2422 Q452.4688,1002.9141 451.9063,1002.7266 Q451.3438,1002.5234 450.7813,1002.5234 Q450.0781,1002.5234 449.4844,1002.8047 Q448.9063,1003.0859 448.4531,1003.7109 Q448,1004.3359 448,1005.1953 L448,1006.1172 Q448,1007.1484 448.8438,1007.8359 Q449.6875,1008.5234 451.1875,1008.5234 Q452.0781,1008.5234 452.7031,1008.3203 Q453.0625,1008.2109 453.4688,1007.8516 Q453.7344,1007.6484 453.875,1007.5859 Q454.0156,1007.5234 454.1875,1007.5234 Q454.5156,1007.5234 454.75,1007.7891 Q455,1008.0391 455,1008.3984 Q455,1008.7422 454.6563,1009.1484 Q454.1563,1009.7422 453.3594,1010.0703 Q452.3125,1010.5234 451.0313,1010.5234 Q449.5313,1010.5234 448.3281,1009.9297 Q447.3594,1009.4609 446.6719,1008.4453 Q446,1007.4297 446,1006.2266 L446,1005.1328 Q446,1003.8828 446.5938,1002.7891 Q447.2031,1001.6953 448.25,1001.1172 Q449.3125,1000.5234 450.5,1000.5234 Q451.2188,1000.5234 451.8438,1000.7734 Q452.4688,1001.0234 453,1001.5234 Z " fill="#000000"/><ellipse cx="470" cy="1004.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="484" y="994.2363">&lt;&lt;</text><text fill="#000000" filter="url(#b180i5m1pk54t50)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="500" y="994.2363">JsonSerializer&lt;Short&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="637" y="994.2363">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="476" y="1009.877">&lt;&lt;</text><text fill="#000000" filter="url(#b180i5m1pk54t50)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="492" y="1009.877">JsonDeserializer&lt;Short&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="645" y="1009.877">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="512" y="1025.5176">ShortJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="437" x2="663" y1="1033.4844" y2="1033.4844"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="437" x2="663" y1="1041.4844" y2="1041.4844"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="12" x="442" y="1058.1582">...</text></g><!--MD5=[f72f8ad6aaf73d77b05e402bfda701b7]
class IntegerJsonAdapter--><g id="elem_IntegerJsonAdapter"><rect codeLine="145" fill="#FEFECE" height="88.5625" id="IntegerJsonAdapter" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="238" x="699" y="976.5625"/><ellipse cx="714" cy="1005.0234" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M716,1001.5234 Q716.2031,1001.0234 716.4375,1000.7734 Q716.6719,1000.5234 716.9375,1000.5234 Q717.4063,1000.5234 717.7031,1000.8047 Q718,1001.0859 718,1001.7422 L718,1003.3047 Q718,1003.9609 717.7188,1004.2422 Q717.4375,1004.5234 717,1004.5234 Q716.6094,1004.5234 716.3594,1004.3516 Q716.1094,1004.1797 716,1003.7266 Q715.9531,1003.4141 715.7813,1003.2422 Q715.4688,1002.9141 714.9063,1002.7266 Q714.3438,1002.5234 713.7813,1002.5234 Q713.0781,1002.5234 712.4844,1002.8047 Q711.9063,1003.0859 711.4531,1003.7109 Q711,1004.3359 711,1005.1953 L711,1006.1172 Q711,1007.1484 711.8438,1007.8359 Q712.6875,1008.5234 714.1875,1008.5234 Q715.0781,1008.5234 715.7031,1008.3203 Q716.0625,1008.2109 716.4688,1007.8516 Q716.7344,1007.6484 716.875,1007.5859 Q717.0156,1007.5234 717.1875,1007.5234 Q717.5156,1007.5234 717.75,1007.7891 Q718,1008.0391 718,1008.3984 Q718,1008.7422 717.6563,1009.1484 Q717.1563,1009.7422 716.3594,1010.0703 Q715.3125,1010.5234 714.0313,1010.5234 Q712.5313,1010.5234 711.3281,1009.9297 Q710.3594,1009.4609 709.6719,1008.4453 Q709,1007.4297 709,1006.2266 L709,1005.1328 Q709,1003.8828 709.5938,1002.7891 Q710.2031,1001.6953 711.25,1001.1172 Q712.3125,1000.5234 713.5,1000.5234 Q714.2188,1000.5234 714.8438,1000.7734 Q715.4688,1001.0234 716,1001.5234 Z " fill="#000000"/><ellipse cx="733" cy="1004.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="747" y="994.2363">&lt;&lt;</text><text fill="#000000" filter="url(#b180i5m1pk54t50)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="763" y="994.2363">JsonSerializer&lt;Integer&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="910" y="994.2363">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="739" y="1009.877">&lt;&lt;</text><text fill="#000000" filter="url(#b180i5m1pk54t50)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="755" y="1009.877">JsonDeserializer&lt;Integer&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="918" y="1009.877">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="775" y="1025.5176">IntegerJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="700" x2="936" y1="1033.4844" y2="1033.4844"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="700" x2="936" y1="1041.4844" y2="1041.4844"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="12" x="705" y="1058.1582">...</text></g><!--MD5=[6dc912724c38cd3a0ccd19a15c425c35]
class LongJsonAdapter--><g id="elem_LongJsonAdapter"><rect codeLine="149" fill="#FEFECE" height="88.5625" id="LongJsonAdapter" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="226" x="972" y="976.5625"/><ellipse cx="987" cy="1005.0234" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M989,1001.5234 Q989.2031,1001.0234 989.4375,1000.7734 Q989.6719,1000.5234 989.9375,1000.5234 Q990.4063,1000.5234 990.7031,1000.8047 Q991,1001.0859 991,1001.7422 L991,1003.3047 Q991,1003.9609 990.7188,1004.2422 Q990.4375,1004.5234 990,1004.5234 Q989.6094,1004.5234 989.3594,1004.3516 Q989.1094,1004.1797 989,1003.7266 Q988.9531,1003.4141 988.7813,1003.2422 Q988.4688,1002.9141 987.9063,1002.7266 Q987.3438,1002.5234 986.7813,1002.5234 Q986.0781,1002.5234 985.4844,1002.8047 Q984.9063,1003.0859 984.4531,1003.7109 Q984,1004.3359 984,1005.1953 L984,1006.1172 Q984,1007.1484 984.8438,1007.8359 Q985.6875,1008.5234 987.1875,1008.5234 Q988.0781,1008.5234 988.7031,1008.3203 Q989.0625,1008.2109 989.4688,1007.8516 Q989.7344,1007.6484 989.875,1007.5859 Q990.0156,1007.5234 990.1875,1007.5234 Q990.5156,1007.5234 990.75,1007.7891 Q991,1008.0391 991,1008.3984 Q991,1008.7422 990.6563,1009.1484 Q990.1563,1009.7422 989.3594,1010.0703 Q988.3125,1010.5234 987.0313,1010.5234 Q985.5313,1010.5234 984.3281,1009.9297 Q983.3594,1009.4609 982.6719,1008.4453 Q982,1007.4297 982,1006.2266 L982,1005.1328 Q982,1003.8828 982.5938,1002.7891 Q983.2031,1001.6953 984.25,1001.1172 Q985.3125,1000.5234 986.5,1000.5234 Q987.2188,1000.5234 987.8438,1000.7734 Q988.4688,1001.0234 989,1001.5234 Z " fill="#000000"/><ellipse cx="1006" cy="1004.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1020" y="994.2363">&lt;&lt;</text><text fill="#000000" filter="url(#b180i5m1pk54t50)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="1036" y="994.2363">JsonSerializer&lt;Long&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1171" y="994.2363">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1012" y="1009.877">&lt;&lt;</text><text fill="#000000" filter="url(#b180i5m1pk54t50)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="1028" y="1009.877">JsonDeserializer&lt;Long&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1179" y="1009.877">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="1048" y="1025.5176">LongJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="973" x2="1197" y1="1033.4844" y2="1033.4844"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="973" x2="1197" y1="1041.4844" y2="1041.4844"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="12" x="978" y="1058.1582">...</text></g><!--MD5=[fc62ed06551ba356a446c123e88cc84c]
class ThrowableJsonSerializer--><g id="elem_ThrowableJsonSerializer"><rect codeLine="153" fill="#FEFECE" height="72.9219" id="ThrowableJsonSerializer" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="244" x="1233" y="984.5625"/><ellipse cx="1248" cy="1005.2031" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1250,1001.7031 Q1250.2031,1001.2031 1250.4375,1000.9531 Q1250.6719,1000.7031 1250.9375,1000.7031 Q1251.4063,1000.7031 1251.7031,1000.9844 Q1252,1001.2656 1252,1001.9219 L1252,1003.4844 Q1252,1004.1406 1251.7188,1004.4219 Q1251.4375,1004.7031 1251,1004.7031 Q1250.6094,1004.7031 1250.3594,1004.5313 Q1250.1094,1004.3594 1250,1003.9063 Q1249.9531,1003.5938 1249.7813,1003.4219 Q1249.4688,1003.0938 1248.9063,1002.9063 Q1248.3438,1002.7031 1247.7813,1002.7031 Q1247.0781,1002.7031 1246.4844,1002.9844 Q1245.9063,1003.2656 1245.4531,1003.8906 Q1245,1004.5156 1245,1005.375 L1245,1006.2969 Q1245,1007.3281 1245.8438,1008.0156 Q1246.6875,1008.7031 1248.1875,1008.7031 Q1249.0781,1008.7031 1249.7031,1008.5 Q1250.0625,1008.3906 1250.4688,1008.0313 Q1250.7344,1007.8281 1250.875,1007.7656 Q1251.0156,1007.7031 1251.1875,1007.7031 Q1251.5156,1007.7031 1251.75,1007.9688 Q1252,1008.2188 1252,1008.5781 Q1252,1008.9219 1251.6563,1009.3281 Q1251.1563,1009.9219 1250.3594,1010.25 Q1249.3125,1010.7031 1248.0313,1010.7031 Q1246.5313,1010.7031 1245.3281,1010.1094 Q1244.3594,1009.6406 1243.6719,1008.625 Q1243,1007.6094 1243,1006.4063 L1243,1005.3125 Q1243,1004.0625 1243.5938,1002.9688 Q1244.2031,1001.875 1245.25,1001.2969 Q1246.3125,1000.7031 1247.5,1000.7031 Q1248.2188,1000.7031 1248.8438,1000.9531 Q1249.4688,1001.2031 1250,1001.7031 Z " fill="#000000"/><ellipse cx="1267" cy="1004.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1273" y="1002.2363">&lt;&lt;</text><text fill="#000000" filter="url(#b180i5m1pk54t50)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="1289" y="1002.2363">JsonSerializer&lt;Throwable&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1458" y="1002.2363">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="1297" y="1017.877">ThrowableJsonSerializer</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="1234" x2="1476" y1="1025.8438" y2="1025.8438"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="1234" x2="1476" y1="1033.8438" y2="1033.8438"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="12" x="1239" y="1050.5176">...</text></g><!--MD5=[0b4c12d696acca224052807877415f32]
class DateJsonSerializer--><g id="elem_DateJsonSerializer"><rect codeLine="157" fill="#FEFECE" height="72.9219" id="DateJsonSerializer" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="208" x="446" y="1133.5625"/><ellipse cx="461" cy="1154.2031" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M463,1150.7031 Q463.2031,1150.2031 463.4375,1149.9531 Q463.6719,1149.7031 463.9375,1149.7031 Q464.4063,1149.7031 464.7031,1149.9844 Q465,1150.2656 465,1150.9219 L465,1152.4844 Q465,1153.1406 464.7188,1153.4219 Q464.4375,1153.7031 464,1153.7031 Q463.6094,1153.7031 463.3594,1153.5313 Q463.1094,1153.3594 463,1152.9063 Q462.9531,1152.5938 462.7813,1152.4219 Q462.4688,1152.0938 461.9063,1151.9063 Q461.3438,1151.7031 460.7813,1151.7031 Q460.0781,1151.7031 459.4844,1151.9844 Q458.9063,1152.2656 458.4531,1152.8906 Q458,1153.5156 458,1154.375 L458,1155.2969 Q458,1156.3281 458.8438,1157.0156 Q459.6875,1157.7031 461.1875,1157.7031 Q462.0781,1157.7031 462.7031,1157.5 Q463.0625,1157.3906 463.4688,1157.0313 Q463.7344,1156.8281 463.875,1156.7656 Q464.0156,1156.7031 464.1875,1156.7031 Q464.5156,1156.7031 464.75,1156.9688 Q465,1157.2188 465,1157.5781 Q465,1157.9219 464.6563,1158.3281 Q464.1563,1158.9219 463.3594,1159.25 Q462.3125,1159.7031 461.0313,1159.7031 Q459.5313,1159.7031 458.3281,1159.1094 Q457.3594,1158.6406 456.6719,1157.625 Q456,1156.6094 456,1155.4063 L456,1154.3125 Q456,1153.0625 456.5938,1151.9688 Q457.2031,1150.875 458.25,1150.2969 Q459.3125,1149.7031 460.5,1149.7031 Q461.2188,1149.7031 461.8438,1149.9531 Q462.4688,1150.2031 463,1150.7031 Z " fill="#000000"/><ellipse cx="480" cy="1153.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="486" y="1151.2363">&lt;&lt;</text><text fill="#000000" filter="url(#b180i5m1pk54t50)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="502" y="1151.2363">JsonSerializer&lt;Date&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="635" y="1151.2363">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="510" y="1166.877">DateJsonSerializer</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="447" x2="653" y1="1174.8438" y2="1174.8438"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="447" x2="653" y1="1182.8438" y2="1182.8438"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="12" x="452" y="1199.5176">...</text></g><!--MD5=[98409bc23f539a909f220981762cd449]
class CalendarJsonAdapter--><g id="elem_CalendarJsonAdapter"><rect codeLine="161" fill="#FEFECE" height="88.5625" id="CalendarJsonAdapter" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="252" x="689" y="1125.5625"/><ellipse cx="704" cy="1154.0234" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M706,1150.5234 Q706.2031,1150.0234 706.4375,1149.7734 Q706.6719,1149.5234 706.9375,1149.5234 Q707.4063,1149.5234 707.7031,1149.8047 Q708,1150.0859 708,1150.7422 L708,1152.3047 Q708,1152.9609 707.7188,1153.2422 Q707.4375,1153.5234 707,1153.5234 Q706.6094,1153.5234 706.3594,1153.3516 Q706.1094,1153.1797 706,1152.7266 Q705.9531,1152.4141 705.7813,1152.2422 Q705.4688,1151.9141 704.9063,1151.7266 Q704.3438,1151.5234 703.7813,1151.5234 Q703.0781,1151.5234 702.4844,1151.8047 Q701.9063,1152.0859 701.4531,1152.7109 Q701,1153.3359 701,1154.1953 L701,1155.1172 Q701,1156.1484 701.8438,1156.8359 Q702.6875,1157.5234 704.1875,1157.5234 Q705.0781,1157.5234 705.7031,1157.3203 Q706.0625,1157.2109 706.4688,1156.8516 Q706.7344,1156.6484 706.875,1156.5859 Q707.0156,1156.5234 707.1875,1156.5234 Q707.5156,1156.5234 707.75,1156.7891 Q708,1157.0391 708,1157.3984 Q708,1157.7422 707.6563,1158.1484 Q707.1563,1158.7422 706.3594,1159.0703 Q705.3125,1159.5234 704.0313,1159.5234 Q702.5313,1159.5234 701.3281,1158.9297 Q700.3594,1158.4609 699.6719,1157.4453 Q699,1156.4297 699,1155.2266 L699,1154.1328 Q699,1152.8828 699.5938,1151.7891 Q700.2031,1150.6953 701.25,1150.1172 Q702.3125,1149.5234 703.5,1149.5234 Q704.2188,1149.5234 704.8438,1149.7734 Q705.4688,1150.0234 706,1150.5234 Z " fill="#000000"/><ellipse cx="723" cy="1153.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="737" y="1143.2363">&lt;&lt;</text><text fill="#000000" filter="url(#b180i5m1pk54t50)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="753" y="1143.2363">JsonSerializer&lt;Calendar&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="914" y="1143.2363">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="729" y="1158.877">&lt;&lt;</text><text fill="#000000" filter="url(#b180i5m1pk54t50)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="745" y="1158.877">JsonDeserializer&lt;Calendar&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="922" y="1158.877">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="765" y="1174.5176">CalendarJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="690" x2="940" y1="1182.4844" y2="1182.4844"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="690" x2="940" y1="1190.4844" y2="1190.4844"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="12" x="695" y="1207.1582">...</text></g><!--MD5=[c34d1faeeea216c406a2d0eb3a604534]
class ContactCardCommonProtocol--><g id="elem_ContactCardCommonProtocol"><rect codeLine="167" fill="#FEFECE" height="110.5625" id="ContactCardCommonProtocol" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="319" x="1160.5" y="222.5625"/><ellipse cx="1216.25" cy="238.5625" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1214.75,239.5625 L1214.75,241.5625 L1218.75,241.5625 L1218.75,240.5625 L1218.75,240.0781 L1219.375,239.5625 L1219.75,239.5625 L1220.125,239.5625 L1220.75,240.0781 L1220.75,240.5625 L1220.75,243.5625 L1212.75,243.5625 L1212.2656,243.5625 L1211.75,242.9375 L1211.75,242.5625 L1211.75,242.1875 L1212.2656,241.5625 L1212.75,241.5625 L1212.75,241.5625 L1212.75,235.5625 L1212.75,235.5625 L1212.2656,235.5625 L1211.75,234.9375 L1211.75,234.5625 L1211.75,234.1875 L1212.2656,233.5625 L1212.75,233.5625 L1220.75,233.5625 L1220.75,236.5625 L1220.75,237.0469 L1220.125,237.5625 L1219.75,237.5625 L1219.375,237.5625 L1218.75,237.0469 L1218.75,236.5625 L1218.75,235.5625 L1214.75,235.5625 L1214.75,237.5625 L1215.75,237.5625 L1215.75,237.0781 L1215.75,237.0781 L1216.375,236.5625 L1216.75,236.5625 L1217.125,236.5625 L1217.75,237.0781 L1217.75,237.5625 L1217.75,239.5625 L1217.75,240.0469 L1217.125,240.5625 L1217.125,240.5625 L1216.75,240.5625 L1216.375,240.5625 L1215.75,240.0469 L1215.75,240.0469 L1215.75,239.5625 L1214.75,239.5625 Z " fill="#000000"/><ellipse cx="1241.75" cy="238.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="188" x="1247.75" y="243.416">ContactCardCommonProtocol</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="1161.5" x2="1478.5" y1="254.5625" y2="254.5625"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="79" x="1166.5" y="271.2363">ISO_7816_3</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="107" x="1166.5" y="286.877">ISO_7816_3_TO</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="104" x="1166.5" y="302.5176">ISO_7816_3_T1</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="307" x="1166.5" y="318.1582">INNOVATRON_HIGH_SPEED_PROTOCOL_SAM</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="1161.5" x2="1478.5" y1="325.125" y2="325.125"/></g><!--MD5=[25bf49c9220c51f3412e028606b93688]
class ContactlessCardCommonProtocol--><g id="elem_ContactlessCardCommonProtocol"><rect codeLine="173" fill="#FEFECE" height="141.8438" id="ContactlessCardCommonProtocol" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="256" x="869" y="207.0625"/><ellipse cx="884" cy="223.0625" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M882.5,224.0625 L882.5,226.0625 L886.5,226.0625 L886.5,225.0625 L886.5,224.5781 L887.125,224.0625 L887.5,224.0625 L887.875,224.0625 L888.5,224.5781 L888.5,225.0625 L888.5,228.0625 L880.5,228.0625 L880.0156,228.0625 L879.5,227.4375 L879.5,227.0625 L879.5,226.6875 L880.0156,226.0625 L880.5,226.0625 L880.5,226.0625 L880.5,220.0625 L880.5,220.0625 L880.0156,220.0625 L879.5,219.4375 L879.5,219.0625 L879.5,218.6875 L880.0156,218.0625 L880.5,218.0625 L888.5,218.0625 L888.5,221.0625 L888.5,221.5469 L887.875,222.0625 L887.5,222.0625 L887.125,222.0625 L886.5,221.5469 L886.5,221.0625 L886.5,220.0625 L882.5,220.0625 L882.5,222.0625 L883.5,222.0625 L883.5,221.5781 L883.5,221.5781 L884.125,221.0625 L884.5,221.0625 L884.875,221.0625 L885.5,221.5781 L885.5,222.0625 L885.5,224.0625 L885.5,224.5469 L884.875,225.0625 L884.875,225.0625 L884.5,225.0625 L884.125,225.0625 L883.5,224.5469 L883.5,224.5469 L883.5,224.0625 L882.5,224.0625 Z " fill="#000000"/><ellipse cx="903" cy="222.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="213" x="909" y="227.916">ContactlessCardCommonProtocol</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="870" x2="1124" y1="239.0625" y2="239.0625"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="87" x="875" y="255.7363">ISO_14443_4</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="149" x="875" y="271.377">NFC_A_ISO_14443_3A</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="149" x="875" y="287.0176">NFC_B_ISO_14443_3B</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="127" x="875" y="302.6582">NFC_F_JIS_6319_4</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="124" x="875" y="318.2988">NFC_V_ISO_15693</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="203" x="875" y="333.9395">INNOVATRON_B_PRIME_CARD</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="870" x2="1124" y1="340.9063" y2="340.9063"/></g><!--MD5=[c9115abaf16ca91dc45c56264012f3ce]
link ByteArrayUtil to JsonUtil--><!--MD5=[6757456dba33f4ac62c37eb7e7994c1a]
link Assert to ByteArrayUtil--><!--MD5=[6bb83c1742bc0e576ff68716e4c88e08]
link Assert to ApduUtil--><!--MD5=[51c341f8810c88afd783f70947e1e58c]
link Assert to BerTlvUtil--><!--MD5=[197c64909a542a7a975be6c0d20b9e75]
@startuml
title
    Keyple - keyple-util-java-lib - 2.2.+ (30/09/2022)
end title

' == THEME ==

'Couleurs issues de : https://htmlcolorcodes.com/fr/tableau-de-couleur/tableau-de-couleur-design-plat/
!define C_GREY1 F8F9F9
!define C_GREY2 F2F3F4
!define C_GREY3 E5E7E9
!define C_GREY4 D7DBDD
!define C_GREY5 CACFD2
!define C_GREY6 BDC3C7
!define C_LINK 3498DB
!define C_USE 27AE60

' - - Styles that don't work with new version of plantuml - -
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
' - - END - -

skinparam ClassBorderThickness 2
skinparam ArrowThickness 2

' Yellow
skinparam ClassBackgroundColor #FEFECE
skinparam ClassBorderColor #D4AC0D
' Red
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
' Purple
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
' blue
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
' Green
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
' Grey
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype

' == CONTENT ==

legend top
    __Colors legend__ :
    * __External API references__ :
    ** <back:yellow>**com.google.code.gson**</back>
end legend

package "org.eclipse.keyple.core.util" as util {
    +class "**final** Assert" as Assert {
        +{static} Assert getInstance ()

        +Assert notNull (Object obj, String name)
        +Assert notEmpty (String obj, String name)
        +Assert notEmpty (Collection<?> obj, String name)
        +Assert notEmpty (byte[] obj, String name)
        +Assert isTrue (Boolean condition, String name)
        +Assert greaterOrEqual (Integer number, int minValue, String name)
        +Assert isEqual (Integer number, int value, String name)
        +Assert isInRange (Integer number, int minValue, int maxValue, String name)
        +Assert isHexString (String hex, String name)
    }
    +class "**final** ByteArrayUtil" as ByteArrayUtil {
        +{static} byte[] extractBytes (byte[] src, int bitOffset, int nbBytes)
        +{static} int extractInt (byte[] src, int offset, int nbBytes, boolean isSigned)

        +<s>boolean isValidHexString (String hex)
        +<s>String normalizeHexString (String hex)

        +<s>byte[] fromHex (String hex)
        +<s>String toHex (byte[] data)

        +<s>int twoBytesToInt (byte[] bytes, int offset)
        +<s>int twoBytesSignedToInt (byte[] bytes, int offset)
        +<s>int threeBytesToInt (byte[] bytes, int offset)
        +<s>int threeBytesSignedToInt (byte[] bytes, int offset)
        +<s>int fourBytesToInt (byte[] bytes, int offset)
    }
    +class "**final** HexUtil" as HexUtil {
        +{static} boolean isValid (String hex)

        +{static} byte[] toByteArray (String hex)
        +{static} byte toByte (String hex)
        +{static} short toShort (String hex)
        +{static} int toInt (String hex)
        +{static} long toLong (String hex)

        +{static} String toHex (byte[] tab)
        +{static} String toHex (byte val)
        +{static} String toHex (short val)
        +{static} String toHex (int val)
        +{static} String toHex (long val)
    }
    +class "**final** ApduUtil" as ApduUtil {
        +{static} byte[] build (byte cla, byte ins, byte p1, byte p2, byte[] dataIn, Byte le)

        +{static} boolean isCase4 (byte[] apduCommand)
    }
    +class BerTlvUtil {
        +{static} Map<Integer, byte[]> parseSimple (byte[] tlvStructure, boolean primitiveOnly)
        +{static} Map<Integer, List<byte[]>> parse (byte[] tlvStructure, boolean primitiveOnly)

        +{static} boolean isConstructed (int tagId)
    }
    package json {
        +class "**final** JsonUtil" as JsonUtil {
            +{static} <back:yellow>Gson</back> getParser ()
            +{static} void registerTypeAdapter (Class<?> matchingClass,
                \tObject adapter, boolean withSubclasses)

            +{static} String toJson (Object obj)
        }
        +class BodyError {
            +BodyError (Exception exception)

            +String getCode ()
            +Exception getException ()
        }
        +class "<<<back:yellow>JsonDeserializer<BodyError></back>>>\nBodyErrorJsonDeserializer" as BodyErrorJsonDeserializer {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<byte[]></back>>>\n<<<back:yellow>JsonDeserializer<byte[]></back>>>\nByteArrayJsonAdapter" as ByteArrayJsonAdapter {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Byte></back>>>\n<<<back:yellow>JsonDeserializer<Byte></back>>>\nByteJsonAdapter" as ByteJsonAdapter {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Short></back>>>\n<<<back:yellow>JsonDeserializer<Short></back>>>\nShortJsonAdapter" as ShortJsonAdapter {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Integer></back>>>\n<<<back:yellow>JsonDeserializer<Integer></back>>>\nIntegerJsonAdapter" as IntegerJsonAdapter {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Long></back>>>\n<<<back:yellow>JsonDeserializer<Long></back>>>\nLongJsonAdapter" as LongJsonAdapter {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Throwable></back>>>\nThrowableJsonSerializer" as ThrowableJsonSerializer {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Date></back>>>\nDateJsonSerializer" as DateJsonSerializer {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Calendar></back>>>\n<<<back:yellow>JsonDeserializer<Calendar></back>>>\nCalendarJsonAdapter" as CalendarJsonAdapter {
            __
            ...
        }
    }
    package protocol {
        +enum "<s>ContactCardCommonProtocol</s>" as ContactCardCommonProtocol {
            <s>ISO_7816_3
            <s>ISO_7816_3_TO
            <s>ISO_7816_3_T1
            <s>INNOVATRON_HIGH_SPEED_PROTOCOL_SAM
        }
        +enum "<s>ContactlessCardCommonProtocol</s>" as ContactlessCardCommonProtocol {
            <s>ISO_14443_4
            <s>NFC_A_ISO_14443_3A
            <s>NFC_B_ISO_14443_3B
            <s>NFC_F_JIS_6319_4
            <s>NFC_V_ISO_15693
            <s>INNOVATRON_B_PRIME_CARD
        }
    }
}

' Associations

' == LAYOUT ==

ByteArrayUtil -[hidden]- JsonUtil

Assert -[hidden]- ByteArrayUtil
Assert -[hidden]- ApduUtil
Assert -[hidden]- BerTlvUtil

' == STYLE ==

package util #C_GREY1 {}
package json #C_GREY2 {}
package protocol #C_GREY2 {}

@enduml

@startuml
title
    Keyple - keyple-util-java-lib - 2.2.+ (30/09/2022)
end title



skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF

skinparam ClassBorderThickness 2
skinparam ArrowThickness 2

skinparam ClassBackgroundColor #FEFECE
skinparam ClassBorderColor #D4AC0D
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype


legend top
    __Colors legend__ :
    * __External API references__ :
    ** <back:yellow>**com.google.code.gson**</back>
end legend

package "org.eclipse.keyple.core.util" as util {
    +class "**final** Assert" as Assert {
        +{static} Assert getInstance ()

        +Assert notNull (Object obj, String name)
        +Assert notEmpty (String obj, String name)
        +Assert notEmpty (Collection<?> obj, String name)
        +Assert notEmpty (byte[] obj, String name)
        +Assert isTrue (Boolean condition, String name)
        +Assert greaterOrEqual (Integer number, int minValue, String name)
        +Assert isEqual (Integer number, int value, String name)
        +Assert isInRange (Integer number, int minValue, int maxValue, String name)
        +Assert isHexString (String hex, String name)
    }
    +class "**final** ByteArrayUtil" as ByteArrayUtil {
        +{static} byte[] extractBytes (byte[] src, int bitOffset, int nbBytes)
        +{static} int extractInt (byte[] src, int offset, int nbBytes, boolean isSigned)

        +<s>boolean isValidHexString (String hex)
        +<s>String normalizeHexString (String hex)

        +<s>byte[] fromHex (String hex)
        +<s>String toHex (byte[] data)

        +<s>int twoBytesToInt (byte[] bytes, int offset)
        +<s>int twoBytesSignedToInt (byte[] bytes, int offset)
        +<s>int threeBytesToInt (byte[] bytes, int offset)
        +<s>int threeBytesSignedToInt (byte[] bytes, int offset)
        +<s>int fourBytesToInt (byte[] bytes, int offset)
    }
    +class "**final** HexUtil" as HexUtil {
        +{static} boolean isValid (String hex)

        +{static} byte[] toByteArray (String hex)
        +{static} byte toByte (String hex)
        +{static} short toShort (String hex)
        +{static} int toInt (String hex)
        +{static} long toLong (String hex)

        +{static} String toHex (byte[] tab)
        +{static} String toHex (byte val)
        +{static} String toHex (short val)
        +{static} String toHex (int val)
        +{static} String toHex (long val)
    }
    +class "**final** ApduUtil" as ApduUtil {
        +{static} byte[] build (byte cla, byte ins, byte p1, byte p2, byte[] dataIn, Byte le)

        +{static} boolean isCase4 (byte[] apduCommand)
    }
    +class BerTlvUtil {
        +{static} Map<Integer, byte[]> parseSimple (byte[] tlvStructure, boolean primitiveOnly)
        +{static} Map<Integer, List<byte[]>> parse (byte[] tlvStructure, boolean primitiveOnly)

        +{static} boolean isConstructed (int tagId)
    }
    package json {
        +class "**final** JsonUtil" as JsonUtil {
            +{static} <back:yellow>Gson</back> getParser ()
            +{static} void registerTypeAdapter (Class<?> matchingClass,
                \tObject adapter, boolean withSubclasses)

            +{static} String toJson (Object obj)
        }
        +class BodyError {
            +BodyError (Exception exception)

            +String getCode ()
            +Exception getException ()
        }
        +class "<<<back:yellow>JsonDeserializer<BodyError></back>>>\nBodyErrorJsonDeserializer" as BodyErrorJsonDeserializer {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<byte[]></back>>>\n<<<back:yellow>JsonDeserializer<byte[]></back>>>\nByteArrayJsonAdapter" as ByteArrayJsonAdapter {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Byte></back>>>\n<<<back:yellow>JsonDeserializer<Byte></back>>>\nByteJsonAdapter" as ByteJsonAdapter {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Short></back>>>\n<<<back:yellow>JsonDeserializer<Short></back>>>\nShortJsonAdapter" as ShortJsonAdapter {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Integer></back>>>\n<<<back:yellow>JsonDeserializer<Integer></back>>>\nIntegerJsonAdapter" as IntegerJsonAdapter {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Long></back>>>\n<<<back:yellow>JsonDeserializer<Long></back>>>\nLongJsonAdapter" as LongJsonAdapter {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Throwable></back>>>\nThrowableJsonSerializer" as ThrowableJsonSerializer {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Date></back>>>\nDateJsonSerializer" as DateJsonSerializer {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Calendar></back>>>\n<<<back:yellow>JsonDeserializer<Calendar></back>>>\nCalendarJsonAdapter" as CalendarJsonAdapter {
            __
            ...
        }
    }
    package protocol {
        +enum "<s>ContactCardCommonProtocol</s>" as ContactCardCommonProtocol {
            <s>ISO_7816_3
            <s>ISO_7816_3_TO
            <s>ISO_7816_3_T1
            <s>INNOVATRON_HIGH_SPEED_PROTOCOL_SAM
        }
        +enum "<s>ContactlessCardCommonProtocol</s>" as ContactlessCardCommonProtocol {
            <s>ISO_14443_4
            <s>NFC_A_ISO_14443_3A
            <s>NFC_B_ISO_14443_3B
            <s>NFC_F_JIS_6319_4
            <s>NFC_V_ISO_15693
            <s>INNOVATRON_B_PRIME_CARD
        }
    }
}



ByteArrayUtil -[hidden]- JsonUtil

Assert -[hidden]- ByteArrayUtil
Assert -[hidden]- ApduUtil
Assert -[hidden]- BerTlvUtil


package util #F8F9F9 {}
package json #F2F3F4 {}
package protocol #F2F3F4 {}

@enduml

PlantUML version 1.2022.7(Mon Aug 22 19:01:30 CEST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: fr
Country: FR
--></g></svg>