<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1361px" preserveAspectRatio="none" style="width:1545px;height:1361px;background:#FFFFFF;" version="1.1" viewBox="0 0 1545 1361" width="1545px" zoomAndPan="magnify"><defs><filter height="1" id="b1tsvfxwbscxzv0" width="1" x="0" y="0"><feFlood flood-color="#FFFF00" result="flood"/><feComposite in="SourceGraphic" in2="flood" operator="over"/></filter></defs><g><rect fill="none" height="25.6406" id="_title" style="stroke:none;stroke-width:1.0;" width="333" x="599" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="323" x="604" y="22.6738">Keyple - keyple-util-java-lib - 2.3.+ (2022-11-03)</text><rect fill="#DDDDDD" height="56.9219" id="_legend" rx="7.5" ry="7.5" style="stroke:#000000;stroke-width:1.0;" width="186" x="672.5" y="48.6406"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="88" x="677.5" y="66.3145">Colors legend</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="769.5" y="66.3145">:</text><ellipse cx="683" cy="77.4219" fill="#000000" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:0.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="689.5" y="81.9551">External API references</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="841.5" y="81.9551">:</text><rect fill="#000000" height="3.5" style="stroke:#000000;stroke-width:0.0;" width="3.5" x="686.5" y="90.5625"/><text fill="#000000" filter="url(#b1tsvfxwbscxzv0)" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="160" x="693.5" y="97.5957">com.google.code.gson</text><!--MD5=[3e81cc6ee7da4fa8b6adc12b329096f6]
cluster util--><g id="cluster_util"><path d="M8.5,124.5625 L200.5,124.5625 A3.75,3.75 0 0 1 203,127.0625 L210,146.2031 L1535.5,146.2031 A2.5,2.5 0 0 1 1538,148.7031 L1538,1352.0625 A2.5,2.5 0 0 1 1535.5,1354.5625 L8.5,1354.5625 A2.5,2.5 0 0 1 6,1352.0625 L6,127.0625 A2.5,2.5 0 0 1 8.5,124.5625 " fill="#F8F9F9" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="210" y1="146.2031" y2="146.2031"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="191" x="10" y="139.2363">org.eclipse.keyple.core.util</text></g><!--MD5=[4ac75f36695ece63879c728112de416c]
cluster json--><g id="cluster_json"><path d="M50.5,856.5625 L81.5,856.5625 A3.75,3.75 0 0 1 84,859.0625 L91,878.2031 L1511.5,878.2031 A2.5,2.5 0 0 1 1514,880.7031 L1514,1328.0625 A2.5,2.5 0 0 1 1511.5,1330.5625 L50.5,1330.5625 A2.5,2.5 0 0 1 48,1328.0625 L48,859.0625 A2.5,2.5 0 0 1 50.5,856.5625 " fill="#F2F3F4" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="48" x2="91" y1="878.2031" y2="878.2031"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="30" x="52" y="871.2363">json</text></g><!--MD5=[59e9faf83e5ffb743ef5750f57e8e967]
cluster protocol--><g id="cluster_protocol"><path d="M873.5,179.0625 L933.5,179.0625 A3.75,3.75 0 0 1 936,181.5625 L943,200.7031 L1511.5,200.7031 A2.5,2.5 0 0 1 1514,203.2031 L1514,368.5625 A2.5,2.5 0 0 1 1511.5,371.0625 L873.5,371.0625 A2.5,2.5 0 0 1 871,368.5625 L871,181.5625 A2.5,2.5 0 0 1 873.5,179.0625 " fill="#F2F3F4" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="871" x2="943" y1="200.7031" y2="200.7031"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="59" x="875" y="193.7363">protocol</text></g><!--MD5=[748d96b9802ee0d94a77604226d4f903]
class Assert--><g id="elem_Assert"><rect codeLine="60" fill="#FEFECE" height="220.0469" id="Assert" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="500" x="352" y="174.0625"/><ellipse cx="555.25" cy="190.0625" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M558.0156,185.9375 Q558.1719,185.7188 558.3594,185.6094 Q558.5469,185.5 558.7656,185.5 Q559.1406,185.5 559.375,185.7656 Q559.6094,186.0156 559.6094,186.625 L559.6094,188.0781 Q559.6094,188.6875 559.375,188.9531 Q559.1406,189.2188 558.7656,189.2188 Q558.4219,189.2188 558.2188,189.0156 Q558.0156,188.8281 557.9063,188.3125 Q557.8594,187.9531 557.6719,187.7656 Q557.3438,187.3906 556.7344,187.1719 Q556.125,186.9531 555.5,186.9531 Q554.7344,186.9531 554.0938,187.2813 Q553.4688,187.6094 552.9688,188.3594 Q552.4844,189.1094 552.4844,190.1406 L552.4844,191.2344 Q552.4844,192.4688 553.375,193.2969 Q554.2656,194.1094 555.8594,194.1094 Q556.7969,194.1094 557.4531,193.8594 Q557.8438,193.7031 558.2656,193.2656 Q558.5313,193 558.6719,192.9219 Q558.8281,192.8438 559.0313,192.8438 Q559.3594,192.8438 559.6094,193.1094 Q559.875,193.3594 559.875,193.7031 Q559.875,194.0469 559.5313,194.4531 Q559.0313,195.0313 558.2344,195.3594 Q557.1563,195.8125 555.8594,195.8125 Q554.3438,195.8125 553.1406,195.1875 Q552.1563,194.6875 551.4688,193.625 Q550.7813,192.5469 550.7813,191.2656 L550.7813,190.1094 Q550.7813,188.7813 551.3906,187.6406 Q552.0156,186.4844 553.1094,185.875 Q554.2031,185.25 555.4375,185.25 Q556.1719,185.25 556.8125,185.4219 Q557.4688,185.5781 558.0156,185.9375 Z " fill="#000000"/><ellipse cx="580.75" cy="189.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="30" x="586.75" y="194.916">final</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="40" x="620.75" y="194.916">Assert</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="353" x2="851" y1="206.0625" y2="206.0625"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="353" x2="851" y1="214.0625" y2="214.0625"/><ellipse cx="363" cy="227.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="131" x="372" y="230.7363">Assert getInstance ()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="372" y="246.377">Â </text><ellipse cx="363" cy="258.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="249" x="372" y="262.0176">Assert notNull (Object obj, String name)</text><ellipse cx="363" cy="274.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="261" x="372" y="277.6582">Assert notEmpty (String obj, String name)</text><ellipse cx="363" cy="289.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="310" x="372" y="293.2988">Assert notEmpty (Collection&lt;?&gt; obj, String name)</text><ellipse cx="363" cy="305.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="259" x="372" y="308.9395">Assert notEmpty (byte[] obj, String name)</text><ellipse cx="363" cy="321.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="372" y="324.5801">Assert isTrue (Boolean condition, String name)</text><ellipse cx="363" cy="336.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="421" x="372" y="340.2207">Assert greaterOrEqual (Integer number, int minValue, String name)</text><ellipse cx="363" cy="352.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="345" x="372" y="355.8613">Assert isEqual (Integer number, int value, String name)</text><ellipse cx="363" cy="368.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="474" x="372" y="371.502">Assert isInRange (Integer number, int minValue, int maxValue, String name)</text><ellipse cx="363" cy="383.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="275" x="372" y="387.1426">Assert isHexString (String hex, String name)</text></g><!--MD5=[27f29ba09c13b8ede23502b37e39f025]
class ByteArrayUtil--><g id="elem_ByteArrayUtil"><rect codeLine="73" fill="#FEFECE" height="360.8125" id="ByteArrayUtil" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="460" x="22" y="469.5625"/><ellipse cx="184.75" cy="485.5625" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M187.5156,481.4375 Q187.6719,481.2188 187.8594,481.1094 Q188.0469,481 188.2656,481 Q188.6406,481 188.875,481.2656 Q189.1094,481.5156 189.1094,482.125 L189.1094,483.5781 Q189.1094,484.1875 188.875,484.4531 Q188.6406,484.7188 188.2656,484.7188 Q187.9219,484.7188 187.7188,484.5156 Q187.5156,484.3281 187.4063,483.8125 Q187.3594,483.4531 187.1719,483.2656 Q186.8438,482.8906 186.2344,482.6719 Q185.625,482.4531 185,482.4531 Q184.2344,482.4531 183.5938,482.7813 Q182.9688,483.1094 182.4688,483.8594 Q181.9844,484.6094 181.9844,485.6406 L181.9844,486.7344 Q181.9844,487.9688 182.875,488.7969 Q183.7656,489.6094 185.3594,489.6094 Q186.2969,489.6094 186.9531,489.3594 Q187.3438,489.2031 187.7656,488.7656 Q188.0313,488.5 188.1719,488.4219 Q188.3281,488.3438 188.5313,488.3438 Q188.8594,488.3438 189.1094,488.6094 Q189.375,488.8594 189.375,489.2031 Q189.375,489.5469 189.0313,489.9531 Q188.5313,490.5313 187.7344,490.8594 Q186.6563,491.3125 185.3594,491.3125 Q183.8438,491.3125 182.6406,490.6875 Q181.6563,490.1875 180.9688,489.125 Q180.2813,488.0469 180.2813,486.7656 L180.2813,485.6094 Q180.2813,484.2813 180.8906,483.1406 Q181.5156,481.9844 182.6094,481.375 Q183.7031,480.75 184.9375,480.75 Q185.6719,480.75 186.3125,480.9219 Q186.9688,481.0781 187.5156,481.4375 Z " fill="#000000"/><ellipse cx="210.25" cy="485.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="30" x="216.25" y="490.416">final</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="250.25" y="490.416">ByteArrayUtil</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="23" x2="481" y1="501.5625" y2="501.5625"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="23" x2="481" y1="509.5625" y2="509.5625"/><ellipse cx="33" cy="522.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="346" x="42" y="526.2363">byte[] extractBytes (byte[] src, int bitOffset, int nbBytes)</text><ellipse cx="33" cy="538.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="258" x="42" y="541.877">byte[] extractBytes (long src, int nbBytes)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="42" y="557.5176">Â </text><ellipse cx="33" cy="569.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="246" x="42" y="573.1582">short extractShort (byte[] src, int offset)</text><ellipse cx="33" cy="585.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="405" x="42" y="588.7988">int extractInt (byte[] src, int offset, int nbBytes, boolean isSigned)</text><ellipse cx="33" cy="601.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="434" x="42" y="604.4395">long extractLong (byte[] src, int offset, int nbBytes, boolean isSigned)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="42" y="620.0801">Â </text><ellipse cx="33" cy="632.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="373" x="42" y="635.7207">void copyBytes (long src, byte[] dest, int offset, int nbBytes)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="42" y="651.3613">Â </text><ellipse cx="33" cy="663.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="233" x="42" y="667.002">boolean isValidHexString (String hex)</text><ellipse cx="33" cy="679.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="238" x="42" y="682.6426">String normalizeHexString (String hex)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="42" y="698.2832">Â </text><ellipse cx="33" cy="710.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="167" x="42" y="713.9238">byte[] fromHex (String hex)</text><ellipse cx="33" cy="726.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="157" x="42" y="729.5645">String toHex (byte[] data)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="42" y="745.2051">Â </text><ellipse cx="33" cy="757.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="256" x="42" y="760.8457">int twoBytesToInt (byte[] bytes, int offset)</text><ellipse cx="33" cy="773.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="300" x="42" y="776.4863">int twoBytesSignedToInt (byte[] bytes, int offset)</text><ellipse cx="33" cy="788.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="268" x="42" y="792.127">int threeBytesToInt (byte[] bytes, int offset)</text><ellipse cx="33" cy="804.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="312" x="42" y="807.7676">int threeBytesSignedToInt (byte[] bytes, int offset)</text><ellipse cx="33" cy="820.0547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="260" x="42" y="823.4082">int fourBytesToInt (byte[] bytes, int offset)</text></g><!--MD5=[844fd0b684b3a1a64c715634134b0ce5]
class HexUtil--><g id="elem_HexUtil"><rect codeLine="95" fill="#FEFECE" height="251.3281" id="HexUtil" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="216" x="62" y="158.5625"/><ellipse cx="122.25" cy="174.5625" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M125.0156,170.4375 Q125.1719,170.2188 125.3594,170.1094 Q125.5469,170 125.7656,170 Q126.1406,170 126.375,170.2656 Q126.6094,170.5156 126.6094,171.125 L126.6094,172.5781 Q126.6094,173.1875 126.375,173.4531 Q126.1406,173.7188 125.7656,173.7188 Q125.4219,173.7188 125.2188,173.5156 Q125.0156,173.3281 124.9063,172.8125 Q124.8594,172.4531 124.6719,172.2656 Q124.3438,171.8906 123.7344,171.6719 Q123.125,171.4531 122.5,171.4531 Q121.7344,171.4531 121.0938,171.7813 Q120.4688,172.1094 119.9688,172.8594 Q119.4844,173.6094 119.4844,174.6406 L119.4844,175.7344 Q119.4844,176.9688 120.375,177.7969 Q121.2656,178.6094 122.8594,178.6094 Q123.7969,178.6094 124.4531,178.3594 Q124.8438,178.2031 125.2656,177.7656 Q125.5313,177.5 125.6719,177.4219 Q125.8281,177.3438 126.0313,177.3438 Q126.3594,177.3438 126.6094,177.6094 Q126.875,177.8594 126.875,178.2031 Q126.875,178.5469 126.5313,178.9531 Q126.0313,179.5313 125.2344,179.8594 Q124.1563,180.3125 122.8594,180.3125 Q121.3438,180.3125 120.1406,179.6875 Q119.1563,179.1875 118.4688,178.125 Q117.7813,177.0469 117.7813,175.7656 L117.7813,174.6094 Q117.7813,173.2813 118.3906,172.1406 Q119.0156,170.9844 120.1094,170.375 Q121.2031,169.75 122.4375,169.75 Q123.1719,169.75 123.8125,169.9219 Q124.4688,170.0781 125.0156,170.4375 Z " fill="#000000"/><ellipse cx="147.75" cy="174.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="30" x="153.75" y="179.416">final</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="42" x="187.75" y="179.416">HexUtil</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="63" x2="277" y1="190.5625" y2="190.5625"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="63" x2="277" y1="198.5625" y2="198.5625"/><ellipse cx="73" cy="211.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="173" x="82" y="215.2363">boolean isValid (String hex)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="82" y="230.877">Â </text><ellipse cx="73" cy="243.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="190" x="82" y="246.5176">byte[] toByteArray (String hex)</text><ellipse cx="73" cy="258.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="82" y="262.1582">byte toByte (String hex)</text><ellipse cx="73" cy="274.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="82" y="277.7988">short toShort (String hex)</text><ellipse cx="73" cy="290.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="123" x="82" y="293.4395">int toInt (String hex)</text><ellipse cx="73" cy="305.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="152" x="82" y="309.0801">long toLong (String hex)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="82" y="324.7207">Â </text><ellipse cx="73" cy="337.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="149" x="82" y="340.3613">String toHex (byte[] tab)</text><ellipse cx="73" cy="352.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="139" x="82" y="356.002">String toHex (byte val)</text><ellipse cx="73" cy="368.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="144" x="82" y="371.6426">String toHex (short val)</text><ellipse cx="73" cy="383.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="127" x="82" y="387.2832">String toHex (int val)</text><ellipse cx="73" cy="399.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="139" x="82" y="402.9238">String toHex (long val)</text></g><!--MD5=[458b3a9396e0ca5416a37f6d6326ccaf]
class ApduUtil--><g id="elem_ApduUtil"><rect codeLine="110" fill="#FEFECE" height="94.9219" id="ApduUtil" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="462" x="517" y="602.5625"/><ellipse cx="695.25" cy="618.5625" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M698.0156,614.4375 Q698.1719,614.2188 698.3594,614.1094 Q698.5469,614 698.7656,614 Q699.1406,614 699.375,614.2656 Q699.6094,614.5156 699.6094,615.125 L699.6094,616.5781 Q699.6094,617.1875 699.375,617.4531 Q699.1406,617.7188 698.7656,617.7188 Q698.4219,617.7188 698.2188,617.5156 Q698.0156,617.3281 697.9063,616.8125 Q697.8594,616.4531 697.6719,616.2656 Q697.3438,615.8906 696.7344,615.6719 Q696.125,615.4531 695.5,615.4531 Q694.7344,615.4531 694.0938,615.7813 Q693.4688,616.1094 692.9688,616.8594 Q692.4844,617.6094 692.4844,618.6406 L692.4844,619.7344 Q692.4844,620.9688 693.375,621.7969 Q694.2656,622.6094 695.8594,622.6094 Q696.7969,622.6094 697.4531,622.3594 Q697.8438,622.2031 698.2656,621.7656 Q698.5313,621.5 698.6719,621.4219 Q698.8281,621.3438 699.0313,621.3438 Q699.3594,621.3438 699.6094,621.6094 Q699.875,621.8594 699.875,622.2031 Q699.875,622.5469 699.5313,622.9531 Q699.0313,623.5313 698.2344,623.8594 Q697.1563,624.3125 695.8594,624.3125 Q694.3438,624.3125 693.1406,623.6875 Q692.1563,623.1875 691.4688,622.125 Q690.7813,621.0469 690.7813,619.7656 L690.7813,618.6094 Q690.7813,617.2813 691.3906,616.1406 Q692.0156,614.9844 693.1094,614.375 Q694.2031,613.75 695.4375,613.75 Q696.1719,613.75 696.8125,613.9219 Q697.4688,614.0781 698.0156,614.4375 Z " fill="#000000"/><ellipse cx="720.75" cy="618.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="30" x="726.75" y="623.416">final</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="760.75" y="623.416">ApduUtil</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="518" x2="978" y1="634.5625" y2="634.5625"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="518" x2="978" y1="642.5625" y2="642.5625"/><ellipse cx="528" cy="655.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="436" x="537" y="659.2363">byte[] build (byte cla, byte ins, byte p1, byte p2, byte[] dataIn, Byte le)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="537" y="674.877">Â </text><ellipse cx="528" cy="687.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="255" x="537" y="690.5176">boolean isCase4 (byte[] apduCommand)</text></g><!--MD5=[967b5bdf980b1f0d408075c95cfc8699]
class BerTlvUtil--><g id="elem_BerTlvUtil"><rect codeLine="115" fill="#FEFECE" height="110.5625" id="BerTlvUtil" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="507" x="1014.5" y="594.5625"/><ellipse cx="1228.25" cy="610.5625" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1231.0156,606.4375 Q1231.1719,606.2188 1231.3594,606.1094 Q1231.5469,606 1231.7656,606 Q1232.1406,606 1232.375,606.2656 Q1232.6094,606.5156 1232.6094,607.125 L1232.6094,608.5781 Q1232.6094,609.1875 1232.375,609.4531 Q1232.1406,609.7188 1231.7656,609.7188 Q1231.4219,609.7188 1231.2188,609.5156 Q1231.0156,609.3281 1230.9063,608.8125 Q1230.8594,608.4531 1230.6719,608.2656 Q1230.3438,607.8906 1229.7344,607.6719 Q1229.125,607.4531 1228.5,607.4531 Q1227.7344,607.4531 1227.0938,607.7813 Q1226.4688,608.1094 1225.9688,608.8594 Q1225.4844,609.6094 1225.4844,610.6406 L1225.4844,611.7344 Q1225.4844,612.9688 1226.375,613.7969 Q1227.2656,614.6094 1228.8594,614.6094 Q1229.7969,614.6094 1230.4531,614.3594 Q1230.8438,614.2031 1231.2656,613.7656 Q1231.5313,613.5 1231.6719,613.4219 Q1231.8281,613.3438 1232.0313,613.3438 Q1232.3594,613.3438 1232.6094,613.6094 Q1232.875,613.8594 1232.875,614.2031 Q1232.875,614.5469 1232.5313,614.9531 Q1232.0313,615.5313 1231.2344,615.8594 Q1230.1563,616.3125 1228.8594,616.3125 Q1227.3438,616.3125 1226.1406,615.6875 Q1225.1563,615.1875 1224.4688,614.125 Q1223.7813,613.0469 1223.7813,611.7656 L1223.7813,610.6094 Q1223.7813,609.2813 1224.3906,608.1406 Q1225.0156,606.9844 1226.1094,606.375 Q1227.2031,605.75 1228.4375,605.75 Q1229.1719,605.75 1229.8125,605.9219 Q1230.4688,606.0781 1231.0156,606.4375 Z " fill="#000000"/><ellipse cx="1253.75" cy="610.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="1259.75" y="615.416">BerTlvUtil</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="1015.5" x2="1520.5" y1="626.5625" y2="626.5625"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="1015.5" x2="1520.5" y1="634.5625" y2="634.5625"/><ellipse cx="1025.5" cy="647.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="481" x="1034.5" y="651.2363">Map&lt;Integer, byte[]&gt; parseSimple (byte[] tlvStructure, boolean primitiveOnly)</text><ellipse cx="1025.5" cy="663.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="477" x="1034.5" y="666.877">Map&lt;Integer, List&lt;byte[]&gt;&gt; parse (byte[] tlvStructure, boolean primitiveOnly)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="1034.5" y="682.5176">Â </text><ellipse cx="1025.5" cy="694.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="206" x="1034.5" y="698.1582">boolean isConstructed (int tagId)</text></g><!--MD5=[ff1fef1d5f830c31212d01e346df5a91]
class JsonUtil--><g id="elem_JsonUtil"><rect codeLine="122" fill="#FEFECE" height="126.2031" id="JsonUtil" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="354" x="64" y="890.5625"/><ellipse cx="190.25" cy="906.5625" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M193.0156,902.4375 Q193.1719,902.2188 193.3594,902.1094 Q193.5469,902 193.7656,902 Q194.1406,902 194.375,902.2656 Q194.6094,902.5156 194.6094,903.125 L194.6094,904.5781 Q194.6094,905.1875 194.375,905.4531 Q194.1406,905.7188 193.7656,905.7188 Q193.4219,905.7188 193.2188,905.5156 Q193.0156,905.3281 192.9063,904.8125 Q192.8594,904.4531 192.6719,904.2656 Q192.3438,903.8906 191.7344,903.6719 Q191.125,903.4531 190.5,903.4531 Q189.7344,903.4531 189.0938,903.7813 Q188.4688,904.1094 187.9688,904.8594 Q187.4844,905.6094 187.4844,906.6406 L187.4844,907.7344 Q187.4844,908.9688 188.375,909.7969 Q189.2656,910.6094 190.8594,910.6094 Q191.7969,910.6094 192.4531,910.3594 Q192.8438,910.2031 193.2656,909.7656 Q193.5313,909.5 193.6719,909.4219 Q193.8281,909.3438 194.0313,909.3438 Q194.3594,909.3438 194.6094,909.6094 Q194.875,909.8594 194.875,910.2031 Q194.875,910.5469 194.5313,910.9531 Q194.0313,911.5313 193.2344,911.8594 Q192.1563,912.3125 190.8594,912.3125 Q189.3438,912.3125 188.1406,911.6875 Q187.1563,911.1875 186.4688,910.125 Q185.7813,909.0469 185.7813,907.7656 L185.7813,906.6094 Q185.7813,905.2813 186.3906,904.1406 Q187.0156,902.9844 188.1094,902.375 Q189.2031,901.75 190.4375,901.75 Q191.1719,901.75 191.8125,901.9219 Q192.4688,902.0781 193.0156,902.4375 Z " fill="#000000"/><ellipse cx="215.75" cy="906.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="30" x="221.75" y="911.416">final</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="48" x="255.75" y="911.416">JsonUtil</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="65" x2="417" y1="922.5625" y2="922.5625"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="65" x2="417" y1="930.5625" y2="930.5625"/><ellipse cx="75" cy="943.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b1tsvfxwbscxzv0)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="34" x="84" y="947.2363">Gson</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="76" x="122" y="947.2363">getParser ()</text><ellipse cx="75" cy="959.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="328" x="84" y="962.877">void registerTypeAdapter (Class&lt;?&gt; matchingClass,</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="258" x="116" y="978.5176">Object adapter, boolean withSubclasses)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="84" y="994.1582">Â </text><ellipse cx="75" cy="1006.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="160" x="84" y="1009.7988">String toJson (Object obj)</text></g><!--MD5=[3d84c5190c7a3821707931f3b8039d88]
class BodyError--><g id="elem_BodyError"><rect codeLine="129" fill="#FEFECE" height="110.5625" id="BodyError" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="229" x="453.5" y="898.0625"/><ellipse cx="526.25" cy="914.0625" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M529.0156,909.9375 Q529.1719,909.7188 529.3594,909.6094 Q529.5469,909.5 529.7656,909.5 Q530.1406,909.5 530.375,909.7656 Q530.6094,910.0156 530.6094,910.625 L530.6094,912.0781 Q530.6094,912.6875 530.375,912.9531 Q530.1406,913.2188 529.7656,913.2188 Q529.4219,913.2188 529.2188,913.0156 Q529.0156,912.8281 528.9063,912.3125 Q528.8594,911.9531 528.6719,911.7656 Q528.3438,911.3906 527.7344,911.1719 Q527.125,910.9531 526.5,910.9531 Q525.7344,910.9531 525.0938,911.2813 Q524.4688,911.6094 523.9688,912.3594 Q523.4844,913.1094 523.4844,914.1406 L523.4844,915.2344 Q523.4844,916.4688 524.375,917.2969 Q525.2656,918.1094 526.8594,918.1094 Q527.7969,918.1094 528.4531,917.8594 Q528.8438,917.7031 529.2656,917.2656 Q529.5313,917 529.6719,916.9219 Q529.8281,916.8438 530.0313,916.8438 Q530.3594,916.8438 530.6094,917.1094 Q530.875,917.3594 530.875,917.7031 Q530.875,918.0469 530.5313,918.4531 Q530.0313,919.0313 529.2344,919.3594 Q528.1563,919.8125 526.8594,919.8125 Q525.3438,919.8125 524.1406,919.1875 Q523.1563,918.6875 522.4688,917.625 Q521.7813,916.5469 521.7813,915.2656 L521.7813,914.1094 Q521.7813,912.7813 522.3906,911.6406 Q523.0156,910.4844 524.1094,909.875 Q525.2031,909.25 526.4375,909.25 Q527.1719,909.25 527.8125,909.4219 Q528.4688,909.5781 529.0156,909.9375 Z " fill="#000000"/><ellipse cx="551.75" cy="913.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="557.75" y="918.916">BodyError</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="454.5" x2="681.5" y1="930.0625" y2="930.0625"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="454.5" x2="681.5" y1="938.0625" y2="938.0625"/><ellipse cx="464.5" cy="951.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="203" x="473.5" y="954.7363">BodyError (Exception exception)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="473.5" y="970.377">Â </text><ellipse cx="464.5" cy="982.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="473.5" y="986.0176">String getCode ()</text><ellipse cx="464.5" cy="998.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="473.5" y="1001.6582">Exception getException ()</text></g><!--MD5=[9a218190a85a7a5cf1f408f9962c53bf]
class BodyErrorJsonDeserializer--><g id="elem_BodyErrorJsonDeserializer"><rect codeLine="135" fill="#FEFECE" height="72.9219" id="BodyErrorJsonDeserializer" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="258" x="718" y="917.0625"/><ellipse cx="733" cy="937.7031" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M735.7656,933.5781 Q735.9219,933.3594 736.1094,933.25 Q736.2969,933.1406 736.5156,933.1406 Q736.8906,933.1406 737.125,933.4063 Q737.3594,933.6563 737.3594,934.2656 L737.3594,935.7188 Q737.3594,936.3281 737.125,936.5938 Q736.8906,936.8594 736.5156,936.8594 Q736.1719,936.8594 735.9688,936.6563 Q735.7656,936.4688 735.6563,935.9531 Q735.6094,935.5938 735.4219,935.4063 Q735.0938,935.0313 734.4844,934.8125 Q733.875,934.5938 733.25,934.5938 Q732.4844,934.5938 731.8438,934.9219 Q731.2188,935.25 730.7188,936 Q730.2344,936.75 730.2344,937.7813 L730.2344,938.875 Q730.2344,940.1094 731.125,940.9375 Q732.0156,941.75 733.6094,941.75 Q734.5469,941.75 735.2031,941.5 Q735.5938,941.3438 736.0156,940.9063 Q736.2813,940.6406 736.4219,940.5625 Q736.5781,940.4844 736.7813,940.4844 Q737.1094,940.4844 737.3594,940.75 Q737.625,941 737.625,941.3438 Q737.625,941.6875 737.2813,942.0938 Q736.7813,942.6719 735.9844,943 Q734.9063,943.4531 733.6094,943.4531 Q732.0938,943.4531 730.8906,942.8281 Q729.9063,942.3281 729.2188,941.2656 Q728.5313,940.1875 728.5313,938.9063 L728.5313,937.75 Q728.5313,936.4219 729.1406,935.2813 Q729.7656,934.125 730.8594,933.5156 Q731.9531,932.8906 733.1875,932.8906 Q733.9219,932.8906 734.5625,933.0625 Q735.2188,933.2188 735.7656,933.5781 Z " fill="#000000"/><ellipse cx="752" cy="937.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="758" y="934.7363">&lt;&lt;</text><text fill="#000000" filter="url(#b1tsvfxwbscxzv0)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="774" y="934.7363">JsonDeserializer&lt;BodyError&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="957" y="934.7363">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="782" y="950.377">BodyErrorJsonDeserializer</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="719" x2="975" y1="958.3438" y2="958.3438"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="719" x2="975" y1="966.3438" y2="966.3438"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="12" x="724" y="983.0176">...</text></g><!--MD5=[f0f8c8dfcaa5a8f8c3b99a1fa7726780]
class ByteArrayJsonAdapter--><g id="elem_ByteArrayJsonAdapter"><rect codeLine="139" fill="#FEFECE" height="88.5625" id="ByteArrayJsonAdapter" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="229" x="1011.5" y="909.0625"/><ellipse cx="1026.5" cy="937.5234" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1029.2656,933.3984 Q1029.4219,933.1797 1029.6094,933.0703 Q1029.7969,932.9609 1030.0156,932.9609 Q1030.3906,932.9609 1030.625,933.2266 Q1030.8594,933.4766 1030.8594,934.0859 L1030.8594,935.5391 Q1030.8594,936.1484 1030.625,936.4141 Q1030.3906,936.6797 1030.0156,936.6797 Q1029.6719,936.6797 1029.4688,936.4766 Q1029.2656,936.2891 1029.1563,935.7734 Q1029.1094,935.4141 1028.9219,935.2266 Q1028.5938,934.8516 1027.9844,934.6328 Q1027.375,934.4141 1026.75,934.4141 Q1025.9844,934.4141 1025.3438,934.7422 Q1024.7188,935.0703 1024.2188,935.8203 Q1023.7344,936.5703 1023.7344,937.6016 L1023.7344,938.6953 Q1023.7344,939.9297 1024.625,940.7578 Q1025.5156,941.5703 1027.1094,941.5703 Q1028.0469,941.5703 1028.7031,941.3203 Q1029.0938,941.1641 1029.5156,940.7266 Q1029.7813,940.4609 1029.9219,940.3828 Q1030.0781,940.3047 1030.2813,940.3047 Q1030.6094,940.3047 1030.8594,940.5703 Q1031.125,940.8203 1031.125,941.1641 Q1031.125,941.5078 1030.7813,941.9141 Q1030.2813,942.4922 1029.4844,942.8203 Q1028.4063,943.2734 1027.1094,943.2734 Q1025.5938,943.2734 1024.3906,942.6484 Q1023.4063,942.1484 1022.7188,941.0859 Q1022.0313,940.0078 1022.0313,938.7266 L1022.0313,937.5703 Q1022.0313,936.2422 1022.6406,935.1016 Q1023.2656,933.9453 1024.3594,933.3359 Q1025.4531,932.7109 1026.6875,932.7109 Q1027.4219,932.7109 1028.0625,932.8828 Q1028.7188,933.0391 1029.2656,933.3984 Z " fill="#000000"/><ellipse cx="1045.5" cy="937.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1059.5" y="926.7363">&lt;&lt;</text><text fill="#000000" filter="url(#b1tsvfxwbscxzv0)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="1075.5" y="926.7363">JsonSerializer&lt;byte[]&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1213.5" y="926.7363">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1051.5" y="942.377">&lt;&lt;</text><text fill="#000000" filter="url(#b1tsvfxwbscxzv0)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="1067.5" y="942.377">JsonDeserializer&lt;byte[]&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1221.5" y="942.377">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="1074" y="958.0176">ByteArrayJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="1012.5" x2="1239.5" y1="965.9844" y2="965.9844"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="1012.5" x2="1239.5" y1="973.9844" y2="973.9844"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="12" x="1017.5" y="990.6582">...</text></g><!--MD5=[52cc22ead8f9cede3c7076eefab9a46c]
class ByteJsonAdapter--><g id="elem_ByteJsonAdapter"><rect codeLine="143" fill="#FEFECE" height="88.5625" id="ByteJsonAdapter" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="222" x="1276" y="909.0625"/><ellipse cx="1291" cy="937.5234" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1293.7656,933.3984 Q1293.9219,933.1797 1294.1094,933.0703 Q1294.2969,932.9609 1294.5156,932.9609 Q1294.8906,932.9609 1295.125,933.2266 Q1295.3594,933.4766 1295.3594,934.0859 L1295.3594,935.5391 Q1295.3594,936.1484 1295.125,936.4141 Q1294.8906,936.6797 1294.5156,936.6797 Q1294.1719,936.6797 1293.9688,936.4766 Q1293.7656,936.2891 1293.6563,935.7734 Q1293.6094,935.4141 1293.4219,935.2266 Q1293.0938,934.8516 1292.4844,934.6328 Q1291.875,934.4141 1291.25,934.4141 Q1290.4844,934.4141 1289.8438,934.7422 Q1289.2188,935.0703 1288.7188,935.8203 Q1288.2344,936.5703 1288.2344,937.6016 L1288.2344,938.6953 Q1288.2344,939.9297 1289.125,940.7578 Q1290.0156,941.5703 1291.6094,941.5703 Q1292.5469,941.5703 1293.2031,941.3203 Q1293.5938,941.1641 1294.0156,940.7266 Q1294.2813,940.4609 1294.4219,940.3828 Q1294.5781,940.3047 1294.7813,940.3047 Q1295.1094,940.3047 1295.3594,940.5703 Q1295.625,940.8203 1295.625,941.1641 Q1295.625,941.5078 1295.2813,941.9141 Q1294.7813,942.4922 1293.9844,942.8203 Q1292.9063,943.2734 1291.6094,943.2734 Q1290.0938,943.2734 1288.8906,942.6484 Q1287.9063,942.1484 1287.2188,941.0859 Q1286.5313,940.0078 1286.5313,938.7266 L1286.5313,937.5703 Q1286.5313,936.2422 1287.1406,935.1016 Q1287.7656,933.9453 1288.8594,933.3359 Q1289.9531,932.7109 1291.1875,932.7109 Q1291.9219,932.7109 1292.5625,932.8828 Q1293.2188,933.0391 1293.7656,933.3984 Z " fill="#000000"/><ellipse cx="1310" cy="937.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1324" y="926.7363">&lt;&lt;</text><text fill="#000000" filter="url(#b1tsvfxwbscxzv0)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="1340" y="926.7363">JsonSerializer&lt;Byte&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1471" y="926.7363">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1316" y="942.377">&lt;&lt;</text><text fill="#000000" filter="url(#b1tsvfxwbscxzv0)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="1332" y="942.377">JsonDeserializer&lt;Byte&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1479" y="942.377">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="1352" y="958.0176">ByteJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="1277" x2="1497" y1="965.9844" y2="965.9844"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="1277" x2="1497" y1="973.9844" y2="973.9844"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="12" x="1282" y="990.6582">...</text></g><!--MD5=[514e1602104e75c9a95a46a815824089]
class ShortJsonAdapter--><g id="elem_ShortJsonAdapter"><rect codeLine="147" fill="#FEFECE" height="88.5625" id="ShortJsonAdapter" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="228" x="454" y="1076.5625"/><ellipse cx="469" cy="1105.0234" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M471.7656,1100.8984 Q471.9219,1100.6797 472.1094,1100.5703 Q472.2969,1100.4609 472.5156,1100.4609 Q472.8906,1100.4609 473.125,1100.7266 Q473.3594,1100.9766 473.3594,1101.5859 L473.3594,1103.0391 Q473.3594,1103.6484 473.125,1103.9141 Q472.8906,1104.1797 472.5156,1104.1797 Q472.1719,1104.1797 471.9688,1103.9766 Q471.7656,1103.7891 471.6563,1103.2734 Q471.6094,1102.9141 471.4219,1102.7266 Q471.0938,1102.3516 470.4844,1102.1328 Q469.875,1101.9141 469.25,1101.9141 Q468.4844,1101.9141 467.8438,1102.2422 Q467.2188,1102.5703 466.7188,1103.3203 Q466.2344,1104.0703 466.2344,1105.1016 L466.2344,1106.1953 Q466.2344,1107.4297 467.125,1108.2578 Q468.0156,1109.0703 469.6094,1109.0703 Q470.5469,1109.0703 471.2031,1108.8203 Q471.5938,1108.6641 472.0156,1108.2266 Q472.2813,1107.9609 472.4219,1107.8828 Q472.5781,1107.8047 472.7813,1107.8047 Q473.1094,1107.8047 473.3594,1108.0703 Q473.625,1108.3203 473.625,1108.6641 Q473.625,1109.0078 473.2813,1109.4141 Q472.7813,1109.9922 471.9844,1110.3203 Q470.9063,1110.7734 469.6094,1110.7734 Q468.0938,1110.7734 466.8906,1110.1484 Q465.9063,1109.6484 465.2188,1108.5859 Q464.5313,1107.5078 464.5313,1106.2266 L464.5313,1105.0703 Q464.5313,1103.7422 465.1406,1102.6016 Q465.7656,1101.4453 466.8594,1100.8359 Q467.9531,1100.2109 469.1875,1100.2109 Q469.9219,1100.2109 470.5625,1100.3828 Q471.2188,1100.5391 471.7656,1100.8984 Z " fill="#000000"/><ellipse cx="488" cy="1104.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="502" y="1094.2363">&lt;&lt;</text><text fill="#000000" filter="url(#b1tsvfxwbscxzv0)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="518" y="1094.2363">JsonSerializer&lt;Short&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="655" y="1094.2363">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="494" y="1109.877">&lt;&lt;</text><text fill="#000000" filter="url(#b1tsvfxwbscxzv0)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="510" y="1109.877">JsonDeserializer&lt;Short&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="663" y="1109.877">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="530" y="1125.5176">ShortJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="455" x2="681" y1="1133.4844" y2="1133.4844"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="455" x2="681" y1="1141.4844" y2="1141.4844"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="12" x="460" y="1158.1582">...</text></g><!--MD5=[f72f8ad6aaf73d77b05e402bfda701b7]
class IntegerJsonAdapter--><g id="elem_IntegerJsonAdapter"><rect codeLine="151" fill="#FEFECE" height="88.5625" id="IntegerJsonAdapter" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="238" x="717" y="1076.5625"/><ellipse cx="732" cy="1105.0234" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M734.7656,1100.8984 Q734.9219,1100.6797 735.1094,1100.5703 Q735.2969,1100.4609 735.5156,1100.4609 Q735.8906,1100.4609 736.125,1100.7266 Q736.3594,1100.9766 736.3594,1101.5859 L736.3594,1103.0391 Q736.3594,1103.6484 736.125,1103.9141 Q735.8906,1104.1797 735.5156,1104.1797 Q735.1719,1104.1797 734.9688,1103.9766 Q734.7656,1103.7891 734.6563,1103.2734 Q734.6094,1102.9141 734.4219,1102.7266 Q734.0938,1102.3516 733.4844,1102.1328 Q732.875,1101.9141 732.25,1101.9141 Q731.4844,1101.9141 730.8438,1102.2422 Q730.2188,1102.5703 729.7188,1103.3203 Q729.2344,1104.0703 729.2344,1105.1016 L729.2344,1106.1953 Q729.2344,1107.4297 730.125,1108.2578 Q731.0156,1109.0703 732.6094,1109.0703 Q733.5469,1109.0703 734.2031,1108.8203 Q734.5938,1108.6641 735.0156,1108.2266 Q735.2813,1107.9609 735.4219,1107.8828 Q735.5781,1107.8047 735.7813,1107.8047 Q736.1094,1107.8047 736.3594,1108.0703 Q736.625,1108.3203 736.625,1108.6641 Q736.625,1109.0078 736.2813,1109.4141 Q735.7813,1109.9922 734.9844,1110.3203 Q733.9063,1110.7734 732.6094,1110.7734 Q731.0938,1110.7734 729.8906,1110.1484 Q728.9063,1109.6484 728.2188,1108.5859 Q727.5313,1107.5078 727.5313,1106.2266 L727.5313,1105.0703 Q727.5313,1103.7422 728.1406,1102.6016 Q728.7656,1101.4453 729.8594,1100.8359 Q730.9531,1100.2109 732.1875,1100.2109 Q732.9219,1100.2109 733.5625,1100.3828 Q734.2188,1100.5391 734.7656,1100.8984 Z " fill="#000000"/><ellipse cx="751" cy="1104.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="765" y="1094.2363">&lt;&lt;</text><text fill="#000000" filter="url(#b1tsvfxwbscxzv0)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="781" y="1094.2363">JsonSerializer&lt;Integer&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="928" y="1094.2363">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="757" y="1109.877">&lt;&lt;</text><text fill="#000000" filter="url(#b1tsvfxwbscxzv0)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="773" y="1109.877">JsonDeserializer&lt;Integer&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="936" y="1109.877">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="793" y="1125.5176">IntegerJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="718" x2="954" y1="1133.4844" y2="1133.4844"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="718" x2="954" y1="1141.4844" y2="1141.4844"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="12" x="723" y="1158.1582">...</text></g><!--MD5=[6dc912724c38cd3a0ccd19a15c425c35]
class LongJsonAdapter--><g id="elem_LongJsonAdapter"><rect codeLine="155" fill="#FEFECE" height="88.5625" id="LongJsonAdapter" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="226" x="990" y="1076.5625"/><ellipse cx="1005" cy="1105.0234" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1007.7656,1100.8984 Q1007.9219,1100.6797 1008.1094,1100.5703 Q1008.2969,1100.4609 1008.5156,1100.4609 Q1008.8906,1100.4609 1009.125,1100.7266 Q1009.3594,1100.9766 1009.3594,1101.5859 L1009.3594,1103.0391 Q1009.3594,1103.6484 1009.125,1103.9141 Q1008.8906,1104.1797 1008.5156,1104.1797 Q1008.1719,1104.1797 1007.9688,1103.9766 Q1007.7656,1103.7891 1007.6563,1103.2734 Q1007.6094,1102.9141 1007.4219,1102.7266 Q1007.0938,1102.3516 1006.4844,1102.1328 Q1005.875,1101.9141 1005.25,1101.9141 Q1004.4844,1101.9141 1003.8438,1102.2422 Q1003.2188,1102.5703 1002.7188,1103.3203 Q1002.2344,1104.0703 1002.2344,1105.1016 L1002.2344,1106.1953 Q1002.2344,1107.4297 1003.125,1108.2578 Q1004.0156,1109.0703 1005.6094,1109.0703 Q1006.5469,1109.0703 1007.2031,1108.8203 Q1007.5938,1108.6641 1008.0156,1108.2266 Q1008.2813,1107.9609 1008.4219,1107.8828 Q1008.5781,1107.8047 1008.7813,1107.8047 Q1009.1094,1107.8047 1009.3594,1108.0703 Q1009.625,1108.3203 1009.625,1108.6641 Q1009.625,1109.0078 1009.2813,1109.4141 Q1008.7813,1109.9922 1007.9844,1110.3203 Q1006.9063,1110.7734 1005.6094,1110.7734 Q1004.0938,1110.7734 1002.8906,1110.1484 Q1001.9063,1109.6484 1001.2188,1108.5859 Q1000.5313,1107.5078 1000.5313,1106.2266 L1000.5313,1105.0703 Q1000.5313,1103.7422 1001.1406,1102.6016 Q1001.7656,1101.4453 1002.8594,1100.8359 Q1003.9531,1100.2109 1005.1875,1100.2109 Q1005.9219,1100.2109 1006.5625,1100.3828 Q1007.2188,1100.5391 1007.7656,1100.8984 Z " fill="#000000"/><ellipse cx="1024" cy="1104.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1038" y="1094.2363">&lt;&lt;</text><text fill="#000000" filter="url(#b1tsvfxwbscxzv0)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="1054" y="1094.2363">JsonSerializer&lt;Long&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1189" y="1094.2363">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1030" y="1109.877">&lt;&lt;</text><text fill="#000000" filter="url(#b1tsvfxwbscxzv0)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="1046" y="1109.877">JsonDeserializer&lt;Long&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1197" y="1109.877">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="1066" y="1125.5176">LongJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="991" x2="1215" y1="1133.4844" y2="1133.4844"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="991" x2="1215" y1="1141.4844" y2="1141.4844"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="12" x="996" y="1158.1582">...</text></g><!--MD5=[fc62ed06551ba356a446c123e88cc84c]
class ThrowableJsonSerializer--><g id="elem_ThrowableJsonSerializer"><rect codeLine="159" fill="#FEFECE" height="72.9219" id="ThrowableJsonSerializer" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="244" x="1251" y="1084.5625"/><ellipse cx="1266" cy="1105.2031" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1268.7656,1101.0781 Q1268.9219,1100.8594 1269.1094,1100.75 Q1269.2969,1100.6406 1269.5156,1100.6406 Q1269.8906,1100.6406 1270.125,1100.9063 Q1270.3594,1101.1563 1270.3594,1101.7656 L1270.3594,1103.2188 Q1270.3594,1103.8281 1270.125,1104.0938 Q1269.8906,1104.3594 1269.5156,1104.3594 Q1269.1719,1104.3594 1268.9688,1104.1563 Q1268.7656,1103.9688 1268.6563,1103.4531 Q1268.6094,1103.0938 1268.4219,1102.9063 Q1268.0938,1102.5313 1267.4844,1102.3125 Q1266.875,1102.0938 1266.25,1102.0938 Q1265.4844,1102.0938 1264.8438,1102.4219 Q1264.2188,1102.75 1263.7188,1103.5 Q1263.2344,1104.25 1263.2344,1105.2813 L1263.2344,1106.375 Q1263.2344,1107.6094 1264.125,1108.4375 Q1265.0156,1109.25 1266.6094,1109.25 Q1267.5469,1109.25 1268.2031,1109 Q1268.5938,1108.8438 1269.0156,1108.4063 Q1269.2813,1108.1406 1269.4219,1108.0625 Q1269.5781,1107.9844 1269.7813,1107.9844 Q1270.1094,1107.9844 1270.3594,1108.25 Q1270.625,1108.5 1270.625,1108.8438 Q1270.625,1109.1875 1270.2813,1109.5938 Q1269.7813,1110.1719 1268.9844,1110.5 Q1267.9063,1110.9531 1266.6094,1110.9531 Q1265.0938,1110.9531 1263.8906,1110.3281 Q1262.9063,1109.8281 1262.2188,1108.7656 Q1261.5313,1107.6875 1261.5313,1106.4063 L1261.5313,1105.25 Q1261.5313,1103.9219 1262.1406,1102.7813 Q1262.7656,1101.625 1263.8594,1101.0156 Q1264.9531,1100.3906 1266.1875,1100.3906 Q1266.9219,1100.3906 1267.5625,1100.5625 Q1268.2188,1100.7188 1268.7656,1101.0781 Z " fill="#000000"/><ellipse cx="1285" cy="1104.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1291" y="1102.2363">&lt;&lt;</text><text fill="#000000" filter="url(#b1tsvfxwbscxzv0)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="1307" y="1102.2363">JsonSerializer&lt;Throwable&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1476" y="1102.2363">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="1315" y="1117.877">ThrowableJsonSerializer</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="1252" x2="1494" y1="1125.8438" y2="1125.8438"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="1252" x2="1494" y1="1133.8438" y2="1133.8438"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="12" x="1257" y="1150.5176">...</text></g><!--MD5=[0b4c12d696acca224052807877415f32]
class DateJsonSerializer--><g id="elem_DateJsonSerializer"><rect codeLine="163" fill="#FEFECE" height="72.9219" id="DateJsonSerializer" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="208" x="464" y="1233.5625"/><ellipse cx="479" cy="1254.2031" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M481.7656,1250.0781 Q481.9219,1249.8594 482.1094,1249.75 Q482.2969,1249.6406 482.5156,1249.6406 Q482.8906,1249.6406 483.125,1249.9063 Q483.3594,1250.1563 483.3594,1250.7656 L483.3594,1252.2188 Q483.3594,1252.8281 483.125,1253.0938 Q482.8906,1253.3594 482.5156,1253.3594 Q482.1719,1253.3594 481.9688,1253.1563 Q481.7656,1252.9688 481.6563,1252.4531 Q481.6094,1252.0938 481.4219,1251.9063 Q481.0938,1251.5313 480.4844,1251.3125 Q479.875,1251.0938 479.25,1251.0938 Q478.4844,1251.0938 477.8438,1251.4219 Q477.2188,1251.75 476.7188,1252.5 Q476.2344,1253.25 476.2344,1254.2813 L476.2344,1255.375 Q476.2344,1256.6094 477.125,1257.4375 Q478.0156,1258.25 479.6094,1258.25 Q480.5469,1258.25 481.2031,1258 Q481.5938,1257.8438 482.0156,1257.4063 Q482.2813,1257.1406 482.4219,1257.0625 Q482.5781,1256.9844 482.7813,1256.9844 Q483.1094,1256.9844 483.3594,1257.25 Q483.625,1257.5 483.625,1257.8438 Q483.625,1258.1875 483.2813,1258.5938 Q482.7813,1259.1719 481.9844,1259.5 Q480.9063,1259.9531 479.6094,1259.9531 Q478.0938,1259.9531 476.8906,1259.3281 Q475.9063,1258.8281 475.2188,1257.7656 Q474.5313,1256.6875 474.5313,1255.4063 L474.5313,1254.25 Q474.5313,1252.9219 475.1406,1251.7813 Q475.7656,1250.625 476.8594,1250.0156 Q477.9531,1249.3906 479.1875,1249.3906 Q479.9219,1249.3906 480.5625,1249.5625 Q481.2188,1249.7188 481.7656,1250.0781 Z " fill="#000000"/><ellipse cx="498" cy="1253.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="504" y="1251.2363">&lt;&lt;</text><text fill="#000000" filter="url(#b1tsvfxwbscxzv0)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="520" y="1251.2363">JsonSerializer&lt;Date&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="653" y="1251.2363">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="528" y="1266.877">DateJsonSerializer</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="465" x2="671" y1="1274.8438" y2="1274.8438"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="465" x2="671" y1="1282.8438" y2="1282.8438"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="12" x="470" y="1299.5176">...</text></g><!--MD5=[98409bc23f539a909f220981762cd449]
class CalendarJsonAdapter--><g id="elem_CalendarJsonAdapter"><rect codeLine="167" fill="#FEFECE" height="88.5625" id="CalendarJsonAdapter" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="252" x="707" y="1225.5625"/><ellipse cx="722" cy="1254.0234" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M724.7656,1249.8984 Q724.9219,1249.6797 725.1094,1249.5703 Q725.2969,1249.4609 725.5156,1249.4609 Q725.8906,1249.4609 726.125,1249.7266 Q726.3594,1249.9766 726.3594,1250.5859 L726.3594,1252.0391 Q726.3594,1252.6484 726.125,1252.9141 Q725.8906,1253.1797 725.5156,1253.1797 Q725.1719,1253.1797 724.9688,1252.9766 Q724.7656,1252.7891 724.6563,1252.2734 Q724.6094,1251.9141 724.4219,1251.7266 Q724.0938,1251.3516 723.4844,1251.1328 Q722.875,1250.9141 722.25,1250.9141 Q721.4844,1250.9141 720.8438,1251.2422 Q720.2188,1251.5703 719.7188,1252.3203 Q719.2344,1253.0703 719.2344,1254.1016 L719.2344,1255.1953 Q719.2344,1256.4297 720.125,1257.2578 Q721.0156,1258.0703 722.6094,1258.0703 Q723.5469,1258.0703 724.2031,1257.8203 Q724.5938,1257.6641 725.0156,1257.2266 Q725.2813,1256.9609 725.4219,1256.8828 Q725.5781,1256.8047 725.7813,1256.8047 Q726.1094,1256.8047 726.3594,1257.0703 Q726.625,1257.3203 726.625,1257.6641 Q726.625,1258.0078 726.2813,1258.4141 Q725.7813,1258.9922 724.9844,1259.3203 Q723.9063,1259.7734 722.6094,1259.7734 Q721.0938,1259.7734 719.8906,1259.1484 Q718.9063,1258.6484 718.2188,1257.5859 Q717.5313,1256.5078 717.5313,1255.2266 L717.5313,1254.0703 Q717.5313,1252.7422 718.1406,1251.6016 Q718.7656,1250.4453 719.8594,1249.8359 Q720.9531,1249.2109 722.1875,1249.2109 Q722.9219,1249.2109 723.5625,1249.3828 Q724.2188,1249.5391 724.7656,1249.8984 Z " fill="#000000"/><ellipse cx="741" cy="1253.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="755" y="1243.2363">&lt;&lt;</text><text fill="#000000" filter="url(#b1tsvfxwbscxzv0)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="771" y="1243.2363">JsonSerializer&lt;Calendar&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="932" y="1243.2363">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="747" y="1258.877">&lt;&lt;</text><text fill="#000000" filter="url(#b1tsvfxwbscxzv0)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="763" y="1258.877">JsonDeserializer&lt;Calendar&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="940" y="1258.877">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="783" y="1274.5176">CalendarJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="708" x2="958" y1="1282.4844" y2="1282.4844"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="708" x2="958" y1="1290.4844" y2="1290.4844"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="12" x="713" y="1307.1582">...</text></g><!--MD5=[c34d1faeeea216c406a2d0eb3a604534]
class ContactCardCommonProtocol--><g id="elem_ContactCardCommonProtocol"><rect codeLine="173" fill="#FEFECE" height="110.5625" id="ContactCardCommonProtocol" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="319" x="1178.5" y="228.5625"/><ellipse cx="1234.25" cy="244.5625" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1233.1094,245.3594 L1233.1094,247.8594 L1237.4375,247.8594 L1237.4375,246.9375 Q1237.4375,246.3281 1237.6719,246.0625 Q1237.9219,245.7969 1238.2969,245.7969 Q1238.6719,245.7969 1238.9063,246.0625 Q1239.1406,246.3281 1239.1406,246.9375 L1239.1406,249.5625 L1231.1406,249.5625 Q1230.5156,249.5625 1230.25,249.3281 Q1230,249.0938 1230,248.7031 Q1230,248.3281 1230.2656,248.0938 Q1230.5313,247.8594 1231.1406,247.8594 L1231.4063,247.8594 L1231.4063,241.2031 L1231.1406,241.2031 Q1230.5156,241.2031 1230.25,240.9688 Q1230,240.7344 1230,240.3438 Q1230,239.9688 1230.25,239.7344 Q1230.5156,239.5 1231.1406,239.5 L1238.7656,239.5 L1238.7656,242.0938 Q1238.7656,242.7031 1238.5313,242.9688 Q1238.3125,243.2188 1237.9219,243.2188 Q1237.5469,243.2188 1237.3125,242.9688 Q1237.0781,242.7031 1237.0781,242.0938 L1237.0781,241.2031 L1233.1094,241.2031 L1233.1094,243.6563 L1234.5938,243.6563 Q1234.5938,243 1234.7188,242.8125 Q1234.9844,242.4063 1235.4531,242.4063 Q1235.8281,242.4063 1236.0625,242.6719 Q1236.2969,242.9219 1236.2969,243.5313 L1236.2969,245.5 Q1236.2969,246.0469 1236.1719,246.2344 Q1235.9063,246.625 1235.4531,246.625 Q1234.9844,246.625 1234.7188,246.2188 Q1234.5938,246.0313 1234.5938,245.3594 L1233.1094,245.3594 Z " fill="#000000"/><ellipse cx="1259.75" cy="244.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="188" x="1265.75" y="249.416">ContactCardCommonProtocol</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="1179.5" x2="1496.5" y1="260.5625" y2="260.5625"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="79" x="1184.5" y="277.2363">ISO_7816_3</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="107" x="1184.5" y="292.877">ISO_7816_3_TO</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="104" x="1184.5" y="308.5176">ISO_7816_3_T1</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="307" x="1184.5" y="324.1582">INNOVATRON_HIGH_SPEED_PROTOCOL_SAM</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="1179.5" x2="1496.5" y1="331.125" y2="331.125"/></g><!--MD5=[25bf49c9220c51f3412e028606b93688]
class ContactlessCardCommonProtocol--><g id="elem_ContactlessCardCommonProtocol"><rect codeLine="179" fill="#FEFECE" height="141.8438" id="ContactlessCardCommonProtocol" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="256" x="887" y="213.0625"/><ellipse cx="902" cy="229.0625" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M900.8594,229.8594 L900.8594,232.3594 L905.1875,232.3594 L905.1875,231.4375 Q905.1875,230.8281 905.4219,230.5625 Q905.6719,230.2969 906.0469,230.2969 Q906.4219,230.2969 906.6563,230.5625 Q906.8906,230.8281 906.8906,231.4375 L906.8906,234.0625 L898.8906,234.0625 Q898.2656,234.0625 898,233.8281 Q897.75,233.5938 897.75,233.2031 Q897.75,232.8281 898.0156,232.5938 Q898.2813,232.3594 898.8906,232.3594 L899.1563,232.3594 L899.1563,225.7031 L898.8906,225.7031 Q898.2656,225.7031 898,225.4688 Q897.75,225.2344 897.75,224.8438 Q897.75,224.4688 898,224.2344 Q898.2656,224 898.8906,224 L906.5156,224 L906.5156,226.5938 Q906.5156,227.2031 906.2813,227.4688 Q906.0625,227.7188 905.6719,227.7188 Q905.2969,227.7188 905.0625,227.4688 Q904.8281,227.2031 904.8281,226.5938 L904.8281,225.7031 L900.8594,225.7031 L900.8594,228.1563 L902.3438,228.1563 Q902.3438,227.5 902.4688,227.3125 Q902.7344,226.9063 903.2031,226.9063 Q903.5781,226.9063 903.8125,227.1719 Q904.0469,227.4219 904.0469,228.0313 L904.0469,230 Q904.0469,230.5469 903.9219,230.7344 Q903.6563,231.125 903.2031,231.125 Q902.7344,231.125 902.4688,230.7188 Q902.3438,230.5313 902.3438,229.8594 L900.8594,229.8594 Z " fill="#000000"/><ellipse cx="921" cy="228.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="213" x="927" y="233.916">ContactlessCardCommonProtocol</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="888" x2="1142" y1="245.0625" y2="245.0625"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="87" x="893" y="261.7363">ISO_14443_4</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="149" x="893" y="277.377">NFC_A_ISO_14443_3A</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="149" x="893" y="293.0176">NFC_B_ISO_14443_3B</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="127" x="893" y="308.6582">NFC_F_JIS_6319_4</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="124" x="893" y="324.2988">NFC_V_ISO_15693</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="203" x="893" y="339.9395">INNOVATRON_B_PRIME_CARD</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="888" x2="1142" y1="346.9063" y2="346.9063"/></g><!--MD5=[c9115abaf16ca91dc45c56264012f3ce]
link ByteArrayUtil to JsonUtil--><!--MD5=[6757456dba33f4ac62c37eb7e7994c1a]
link Assert to ByteArrayUtil--><!--MD5=[6bb83c1742bc0e576ff68716e4c88e08]
link Assert to ApduUtil--><!--MD5=[51c341f8810c88afd783f70947e1e58c]
link Assert to BerTlvUtil--><!--MD5=[04f992f5dd5b7d71fcd1979d77c2e3fd]
@startuml
title
    Keyple - keyple-util-java-lib - 2.3.+ (2022-11-03)
end title

' == THEME ==

'Couleurs issues de : https://htmlcolorcodes.com/fr/tableau-de-couleur/tableau-de-couleur-design-plat/
!define C_GREY1 F8F9F9
!define C_GREY2 F2F3F4
!define C_GREY3 E5E7E9
!define C_GREY4 D7DBDD
!define C_GREY5 CACFD2
!define C_GREY6 BDC3C7
!define C_LINK 3498DB
!define C_USE 27AE60

' - - Styles that don't work with new version of plantuml - -
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
' - - END - -

skinparam ClassBorderThickness 2
skinparam ArrowThickness 2

' Yellow
skinparam ClassBackgroundColor #FEFECE
skinparam ClassBorderColor #D4AC0D
' Red
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
' Purple
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
' blue
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
' Green
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
' Grey
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype

' == CONTENT ==

legend top
    __Colors legend__ :
    * __External API references__ :
    ** <back:yellow>**com.google.code.gson**</back>
end legend

package "org.eclipse.keyple.core.util" as util {
    +class "**final** Assert" as Assert {
        +{static} Assert getInstance ()

        +Assert notNull (Object obj, String name)
        +Assert notEmpty (String obj, String name)
        +Assert notEmpty (Collection<?> obj, String name)
        +Assert notEmpty (byte[] obj, String name)
        +Assert isTrue (Boolean condition, String name)
        +Assert greaterOrEqual (Integer number, int minValue, String name)
        +Assert isEqual (Integer number, int value, String name)
        +Assert isInRange (Integer number, int minValue, int maxValue, String name)
        +Assert isHexString (String hex, String name)
    }
    +class "**final** ByteArrayUtil" as ByteArrayUtil {
        +{static} byte[] extractBytes (byte[] src, int bitOffset, int nbBytes)
        +{static} byte[] extractBytes (long src, int nbBytes)

        +{static} short extractShort (byte[] src, int offset)
        +{static} int extractInt (byte[] src, int offset, int nbBytes, boolean isSigned)
        +{static} long extractLong (byte[] src, int offset, int nbBytes, boolean isSigned)

        +{static} void copyBytes (long src, byte[] dest, int offset, int nbBytes)

        +<s>boolean isValidHexString (String hex)
        +<s>String normalizeHexString (String hex)

        +<s>byte[] fromHex (String hex)
        +<s>String toHex (byte[] data)

        +<s>int twoBytesToInt (byte[] bytes, int offset)
        +<s>int twoBytesSignedToInt (byte[] bytes, int offset)
        +<s>int threeBytesToInt (byte[] bytes, int offset)
        +<s>int threeBytesSignedToInt (byte[] bytes, int offset)
        +<s>int fourBytesToInt (byte[] bytes, int offset)
    }
    +class "**final** HexUtil" as HexUtil {
        +{static} boolean isValid (String hex)

        +{static} byte[] toByteArray (String hex)
        +{static} byte toByte (String hex)
        +{static} short toShort (String hex)
        +{static} int toInt (String hex)
        +{static} long toLong (String hex)

        +{static} String toHex (byte[] tab)
        +{static} String toHex (byte val)
        +{static} String toHex (short val)
        +{static} String toHex (int val)
        +{static} String toHex (long val)
    }
    +class "**final** ApduUtil" as ApduUtil {
        +{static} byte[] build (byte cla, byte ins, byte p1, byte p2, byte[] dataIn, Byte le)

        +{static} boolean isCase4 (byte[] apduCommand)
    }
    +class BerTlvUtil {
        +{static} Map<Integer, byte[]> parseSimple (byte[] tlvStructure, boolean primitiveOnly)
        +{static} Map<Integer, List<byte[]>> parse (byte[] tlvStructure, boolean primitiveOnly)

        +{static} boolean isConstructed (int tagId)
    }
    package json {
        +class "**final** JsonUtil" as JsonUtil {
            +{static} <back:yellow>Gson</back> getParser ()
            +{static} void registerTypeAdapter (Class<?> matchingClass,
                \tObject adapter, boolean withSubclasses)

            +{static} String toJson (Object obj)
        }
        +class BodyError {
            +BodyError (Exception exception)

            +String getCode ()
            +Exception getException ()
        }
        +class "<<<back:yellow>JsonDeserializer<BodyError></back>>>\nBodyErrorJsonDeserializer" as BodyErrorJsonDeserializer {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<byte[]></back>>>\n<<<back:yellow>JsonDeserializer<byte[]></back>>>\nByteArrayJsonAdapter" as ByteArrayJsonAdapter {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Byte></back>>>\n<<<back:yellow>JsonDeserializer<Byte></back>>>\nByteJsonAdapter" as ByteJsonAdapter {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Short></back>>>\n<<<back:yellow>JsonDeserializer<Short></back>>>\nShortJsonAdapter" as ShortJsonAdapter {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Integer></back>>>\n<<<back:yellow>JsonDeserializer<Integer></back>>>\nIntegerJsonAdapter" as IntegerJsonAdapter {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Long></back>>>\n<<<back:yellow>JsonDeserializer<Long></back>>>\nLongJsonAdapter" as LongJsonAdapter {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Throwable></back>>>\nThrowableJsonSerializer" as ThrowableJsonSerializer {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Date></back>>>\nDateJsonSerializer" as DateJsonSerializer {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Calendar></back>>>\n<<<back:yellow>JsonDeserializer<Calendar></back>>>\nCalendarJsonAdapter" as CalendarJsonAdapter {
            __
            ...
        }
    }
    package protocol {
        +enum "<s>ContactCardCommonProtocol</s>" as ContactCardCommonProtocol {
            <s>ISO_7816_3
            <s>ISO_7816_3_TO
            <s>ISO_7816_3_T1
            <s>INNOVATRON_HIGH_SPEED_PROTOCOL_SAM
        }
        +enum "<s>ContactlessCardCommonProtocol</s>" as ContactlessCardCommonProtocol {
            <s>ISO_14443_4
            <s>NFC_A_ISO_14443_3A
            <s>NFC_B_ISO_14443_3B
            <s>NFC_F_JIS_6319_4
            <s>NFC_V_ISO_15693
            <s>INNOVATRON_B_PRIME_CARD
        }
    }
}

' Associations

' == LAYOUT ==

ByteArrayUtil -[hidden]- JsonUtil

Assert -[hidden]- ByteArrayUtil
Assert -[hidden]- ApduUtil
Assert -[hidden]- BerTlvUtil

' == STYLE ==

package util #C_GREY1 {}
package json #C_GREY2 {}
package protocol #C_GREY2 {}

@enduml

@startuml
title
    Keyple - keyple-util-java-lib - 2.3.+ (2022-11-03)
end title



skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF

skinparam ClassBorderThickness 2
skinparam ArrowThickness 2

skinparam ClassBackgroundColor #FEFECE
skinparam ClassBorderColor #D4AC0D
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype


legend top
    __Colors legend__ :
    * __External API references__ :
    ** <back:yellow>**com.google.code.gson**</back>
end legend

package "org.eclipse.keyple.core.util" as util {
    +class "**final** Assert" as Assert {
        +{static} Assert getInstance ()

        +Assert notNull (Object obj, String name)
        +Assert notEmpty (String obj, String name)
        +Assert notEmpty (Collection<?> obj, String name)
        +Assert notEmpty (byte[] obj, String name)
        +Assert isTrue (Boolean condition, String name)
        +Assert greaterOrEqual (Integer number, int minValue, String name)
        +Assert isEqual (Integer number, int value, String name)
        +Assert isInRange (Integer number, int minValue, int maxValue, String name)
        +Assert isHexString (String hex, String name)
    }
    +class "**final** ByteArrayUtil" as ByteArrayUtil {
        +{static} byte[] extractBytes (byte[] src, int bitOffset, int nbBytes)
        +{static} byte[] extractBytes (long src, int nbBytes)

        +{static} short extractShort (byte[] src, int offset)
        +{static} int extractInt (byte[] src, int offset, int nbBytes, boolean isSigned)
        +{static} long extractLong (byte[] src, int offset, int nbBytes, boolean isSigned)

        +{static} void copyBytes (long src, byte[] dest, int offset, int nbBytes)

        +<s>boolean isValidHexString (String hex)
        +<s>String normalizeHexString (String hex)

        +<s>byte[] fromHex (String hex)
        +<s>String toHex (byte[] data)

        +<s>int twoBytesToInt (byte[] bytes, int offset)
        +<s>int twoBytesSignedToInt (byte[] bytes, int offset)
        +<s>int threeBytesToInt (byte[] bytes, int offset)
        +<s>int threeBytesSignedToInt (byte[] bytes, int offset)
        +<s>int fourBytesToInt (byte[] bytes, int offset)
    }
    +class "**final** HexUtil" as HexUtil {
        +{static} boolean isValid (String hex)

        +{static} byte[] toByteArray (String hex)
        +{static} byte toByte (String hex)
        +{static} short toShort (String hex)
        +{static} int toInt (String hex)
        +{static} long toLong (String hex)

        +{static} String toHex (byte[] tab)
        +{static} String toHex (byte val)
        +{static} String toHex (short val)
        +{static} String toHex (int val)
        +{static} String toHex (long val)
    }
    +class "**final** ApduUtil" as ApduUtil {
        +{static} byte[] build (byte cla, byte ins, byte p1, byte p2, byte[] dataIn, Byte le)

        +{static} boolean isCase4 (byte[] apduCommand)
    }
    +class BerTlvUtil {
        +{static} Map<Integer, byte[]> parseSimple (byte[] tlvStructure, boolean primitiveOnly)
        +{static} Map<Integer, List<byte[]>> parse (byte[] tlvStructure, boolean primitiveOnly)

        +{static} boolean isConstructed (int tagId)
    }
    package json {
        +class "**final** JsonUtil" as JsonUtil {
            +{static} <back:yellow>Gson</back> getParser ()
            +{static} void registerTypeAdapter (Class<?> matchingClass,
                \tObject adapter, boolean withSubclasses)

            +{static} String toJson (Object obj)
        }
        +class BodyError {
            +BodyError (Exception exception)

            +String getCode ()
            +Exception getException ()
        }
        +class "<<<back:yellow>JsonDeserializer<BodyError></back>>>\nBodyErrorJsonDeserializer" as BodyErrorJsonDeserializer {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<byte[]></back>>>\n<<<back:yellow>JsonDeserializer<byte[]></back>>>\nByteArrayJsonAdapter" as ByteArrayJsonAdapter {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Byte></back>>>\n<<<back:yellow>JsonDeserializer<Byte></back>>>\nByteJsonAdapter" as ByteJsonAdapter {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Short></back>>>\n<<<back:yellow>JsonDeserializer<Short></back>>>\nShortJsonAdapter" as ShortJsonAdapter {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Integer></back>>>\n<<<back:yellow>JsonDeserializer<Integer></back>>>\nIntegerJsonAdapter" as IntegerJsonAdapter {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Long></back>>>\n<<<back:yellow>JsonDeserializer<Long></back>>>\nLongJsonAdapter" as LongJsonAdapter {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Throwable></back>>>\nThrowableJsonSerializer" as ThrowableJsonSerializer {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Date></back>>>\nDateJsonSerializer" as DateJsonSerializer {
            __
            ...
        }
        +class "<<<back:yellow>JsonSerializer<Calendar></back>>>\n<<<back:yellow>JsonDeserializer<Calendar></back>>>\nCalendarJsonAdapter" as CalendarJsonAdapter {
            __
            ...
        }
    }
    package protocol {
        +enum "<s>ContactCardCommonProtocol</s>" as ContactCardCommonProtocol {
            <s>ISO_7816_3
            <s>ISO_7816_3_TO
            <s>ISO_7816_3_T1
            <s>INNOVATRON_HIGH_SPEED_PROTOCOL_SAM
        }
        +enum "<s>ContactlessCardCommonProtocol</s>" as ContactlessCardCommonProtocol {
            <s>ISO_14443_4
            <s>NFC_A_ISO_14443_3A
            <s>NFC_B_ISO_14443_3B
            <s>NFC_F_JIS_6319_4
            <s>NFC_V_ISO_15693
            <s>INNOVATRON_B_PRIME_CARD
        }
    }
}



ByteArrayUtil -[hidden]- JsonUtil

Assert -[hidden]- ByteArrayUtil
Assert -[hidden]- ApduUtil
Assert -[hidden]- BerTlvUtil


package util #F8F9F9 {}
package json #F2F3F4 {}
package protocol #F2F3F4 {}

@enduml

PlantUML version 1.2022.12(Sun Oct 23 20:12:26 CEST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: fr
Country: FR
--></g></svg>