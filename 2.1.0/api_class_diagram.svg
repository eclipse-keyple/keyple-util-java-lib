<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1573px" preserveAspectRatio="none" style="width:1517px;height:1573px;background:#FFFFFF;" version="1.1" viewBox="0 0 1517 1573" width="1517px" zoomAndPan="magnify"><defs><filter height="1" id="b1sw638gr97ik80" width="1" x="0" y="0"><feFlood flood-color="#FFFF00" result="flood"/><feComposite in="SourceGraphic" in2="flood" operator="over"/></filter></defs><g><rect height="27.6094" style="stroke:#00000000;stroke-width:1.0;fill:none;" width="331" x="586" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="321" x="591" y="24.5332">Keyple - keyple-util-java-lib - 2.1.+ (15/03/2022)</text><rect fill="#DDDDDD" height="64.8281" rx="7.5" ry="7.5" style="stroke:#000000;stroke-width:1.0;" width="198" x="652.5" y="46.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="88" x="658.5" y="67.1426">Colors legend</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="750.5" y="67.1426">:</text><ellipse cx="664" cy="80.3281" fill="#000000" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:0.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="671.5" y="84.752">External API references</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="823.5" y="84.752">:</text><rect fill="#000000" height="3.5" style="stroke:#000000;stroke-width:0.0;" width="3.5" x="679.5" y="97.4375"/><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="160" x="684.5" y="102.3613">com.google.code.gson</text><!--MD5=[3e81cc6ee7da4fa8b6adc12b329096f6]
cluster util--><g id="cluster_util"><path d="M8.5,126.4375 L200.5,126.4375 A3.75,3.75 0 0 1 203,128.9375 L210,150.0469 L1507.5,150.0469 A2.5,2.5 0 0 1 1510,152.5469 L1510,1563.9375 A2.5,2.5 0 0 1 1507.5,1566.4375 L8.5,1566.4375 A2.5,2.5 0 0 1 6,1563.9375 L6,128.9375 A2.5,2.5 0 0 1 8.5,126.4375 " fill="#F8F9F9" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="210" y1="150.0469" y2="150.0469"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="191" x="10" y="142.9707">org.eclipse.keyple.core.util</text></g><!--MD5=[4ac75f36695ece63879c728112de416c]
cluster json--><g id="cluster_json"><path d="M38.5,818.4375 L69.5,818.4375 A3.75,3.75 0 0 1 72,820.9375 L79,842.0469 L1483.5,842.0469 A2.5,2.5 0 0 1 1486,844.5469 L1486,1539.9375 A2.5,2.5 0 0 1 1483.5,1542.4375 L38.5,1542.4375 A2.5,2.5 0 0 1 36,1539.9375 L36,820.9375 A2.5,2.5 0 0 1 38.5,818.4375 " fill="#F2F3F4" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="36" x2="79" y1="842.0469" y2="842.0469"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="30" x="40" y="834.9707">json</text></g><!--MD5=[59e9faf83e5ffb743ef5750f57e8e967]
cluster protocol--><g id="cluster_protocol"><path d="M845.5,187.9375 L905.5,187.9375 A3.75,3.75 0 0 1 908,190.4375 L915,211.5469 L1483.5,211.5469 A2.5,2.5 0 0 1 1486,214.0469 L1486,391.4375 A2.5,2.5 0 0 1 1483.5,393.9375 L845.5,393.9375 A2.5,2.5 0 0 1 843,391.4375 L843,190.4375 A2.5,2.5 0 0 1 845.5,187.9375 " fill="#F2F3F4" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="843" x2="915" y1="211.5469" y2="211.5469"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="59" x="847" y="204.4707">protocol</text></g><!--MD5=[748d96b9802ee0d94a77604226d4f903]
class Assert--><g id="elem_Assert"><rect codeLine="60" fill="#FEFECE" height="241.7031" id="Assert" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="500" x="324" y="179.9375"/><ellipse cx="527.25" cy="195.9375" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M529.25,192.4375 Q529.4531,191.9375 529.6875,191.6875 Q529.9219,191.4375 530.1875,191.4375 Q530.6563,191.4375 530.9531,191.7188 Q531.25,192 531.25,192.6563 L531.25,194.2188 Q531.25,194.875 530.9688,195.1563 Q530.6875,195.4375 530.25,195.4375 Q529.8594,195.4375 529.6094,195.2656 Q529.3594,195.0938 529.25,194.6406 Q529.2031,194.3281 529.0313,194.1563 Q528.7188,193.8281 528.1563,193.6406 Q527.5938,193.4375 527.0313,193.4375 Q526.3281,193.4375 525.7344,193.7188 Q525.1563,194 524.7031,194.625 Q524.25,195.25 524.25,196.1094 L524.25,197.0313 Q524.25,198.0625 525.0938,198.75 Q525.9375,199.4375 527.4375,199.4375 Q528.3281,199.4375 528.9531,199.2344 Q529.3125,199.125 529.7188,198.7656 Q529.9844,198.5625 530.125,198.5 Q530.2656,198.4375 530.4375,198.4375 Q530.7656,198.4375 531,198.7031 Q531.25,198.9531 531.25,199.3125 Q531.25,199.6563 530.9063,200.0625 Q530.4063,200.6563 529.6094,200.9844 Q528.5625,201.4375 527.2813,201.4375 Q525.7813,201.4375 524.5781,200.8438 Q523.6094,200.375 522.9219,199.3594 Q522.25,198.3438 522.25,197.1406 L522.25,196.0469 Q522.25,194.7969 522.8438,193.7031 Q523.4531,192.6094 524.5,192.0313 Q525.5625,191.4375 526.75,191.4375 Q527.4688,191.4375 528.0938,191.6875 Q528.7188,191.9375 529.25,192.4375 Z " fill="#000000"/><ellipse cx="552.75" cy="195.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="30" x="558.75" y="201.666">final</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="40" x="592.75" y="201.666">Assert</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="325" x2="823" y1="211.9375" y2="211.9375"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="325" x2="823" y1="219.9375" y2="219.9375"/><ellipse cx="335" cy="230.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="131" x="344" y="238.4707">Assert getInstance ()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="344" y="256.0801">Â </text><ellipse cx="335" cy="266.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="249" x="344" y="273.6895">Assert notNull (Object obj, String name)</text><ellipse cx="335" cy="283.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="261" x="344" y="291.2988">Assert notEmpty (String obj, String name)</text><ellipse cx="335" cy="301.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="310" x="344" y="308.9082">Assert notEmpty (Collection&lt;?&gt; obj, String name)</text><ellipse cx="335" cy="318.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="259" x="344" y="326.5176">Assert notEmpty (byte[] obj, String name)</text><ellipse cx="335" cy="336.5938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="344" y="344.127">Assert isTrue (Boolean condition, String name)</text><ellipse cx="335" cy="354.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="421" x="344" y="361.7363">Assert greaterOrEqual (Integer number, int minValue, String name)</text><ellipse cx="335" cy="371.8125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="345" x="344" y="379.3457">Assert isEqual (Integer number, int value, String name)</text><ellipse cx="335" cy="389.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="474" x="344" y="396.9551">Assert isInRange (Integer number, int minValue, int maxValue, String name)</text><ellipse cx="335" cy="407.0313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="275" x="344" y="414.5645">Assert isHexString (String hex, String name)</text></g><!--MD5=[27f29ba09c13b8ede23502b37e39f025]
class ByteArrayUtil--><g id="elem_ByteArrayUtil"><rect codeLine="73" fill="#FEFECE" height="294.5313" id="ByteArrayUtil" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="431" x="22.5" y="499.4375"/><ellipse cx="170.75" cy="515.4375" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M172.75,511.9375 Q172.9531,511.4375 173.1875,511.1875 Q173.4219,510.9375 173.6875,510.9375 Q174.1563,510.9375 174.4531,511.2188 Q174.75,511.5 174.75,512.1563 L174.75,513.7188 Q174.75,514.375 174.4688,514.6563 Q174.1875,514.9375 173.75,514.9375 Q173.3594,514.9375 173.1094,514.7656 Q172.8594,514.5938 172.75,514.1406 Q172.7031,513.8281 172.5313,513.6563 Q172.2188,513.3281 171.6563,513.1406 Q171.0938,512.9375 170.5313,512.9375 Q169.8281,512.9375 169.2344,513.2188 Q168.6563,513.5 168.2031,514.125 Q167.75,514.75 167.75,515.6094 L167.75,516.5313 Q167.75,517.5625 168.5938,518.25 Q169.4375,518.9375 170.9375,518.9375 Q171.8281,518.9375 172.4531,518.7344 Q172.8125,518.625 173.2188,518.2656 Q173.4844,518.0625 173.625,518 Q173.7656,517.9375 173.9375,517.9375 Q174.2656,517.9375 174.5,518.2031 Q174.75,518.4531 174.75,518.8125 Q174.75,519.1563 174.4063,519.5625 Q173.9063,520.1563 173.1094,520.4844 Q172.0625,520.9375 170.7813,520.9375 Q169.2813,520.9375 168.0781,520.3438 Q167.1094,519.875 166.4219,518.8594 Q165.75,517.8438 165.75,516.6406 L165.75,515.5469 Q165.75,514.2969 166.3438,513.2031 Q166.9531,512.1094 168,511.5313 Q169.0625,510.9375 170.25,510.9375 Q170.9688,510.9375 171.5938,511.1875 Q172.2188,511.4375 172.75,511.9375 Z " fill="#000000"/><ellipse cx="196.25" cy="514.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="30" x="202.25" y="521.166">final</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="236.25" y="521.166">ByteArrayUtil</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="23.5" x2="452.5" y1="531.4375" y2="531.4375"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="23.5" x2="452.5" y1="539.4375" y2="539.4375"/><ellipse cx="33.5" cy="550.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="346" x="42.5" y="557.9707">byte[] extractBytes (byte[] src, int bitOffset, int nbBytes)</text><ellipse cx="33.5" cy="568.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="405" x="42.5" y="575.5801">int extractInt (byte[] src, int offset, int nbBytes, boolean isSigned)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="42.5" y="593.1895">Â </text><ellipse cx="33.5" cy="603.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="233" x="42.5" y="610.7988">boolean isValidHexString (String hex)</text><ellipse cx="33.5" cy="620.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="238" x="42.5" y="628.4082">String normalizeHexString (String hex)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="42.5" y="646.0176">Â </text><ellipse cx="33.5" cy="656.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="167" x="42.5" y="663.627">byte[] fromHex (String hex)</text><ellipse cx="33.5" cy="673.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="157" x="42.5" y="681.2363">String toHex (byte[] data)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="42.5" y="698.8457">Â </text><ellipse cx="33.5" cy="708.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="256" x="42.5" y="716.4551">int twoBytesToInt (byte[] bytes, int offset)</text><ellipse cx="33.5" cy="726.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="300" x="42.5" y="734.0645">int twoBytesSignedToInt (byte[] bytes, int offset)</text><ellipse cx="33.5" cy="744.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="268" x="42.5" y="751.6738">int threeBytesToInt (byte[] bytes, int offset)</text><ellipse cx="33.5" cy="761.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="312" x="42.5" y="769.2832">int threeBytesSignedToInt (byte[] bytes, int offset)</text><ellipse cx="33.5" cy="779.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="260" x="42.5" y="786.8926">int fourBytesToInt (byte[] bytes, int offset)</text></g><!--MD5=[844fd0b684b3a1a64c715634134b0ce5]
class HexUtil--><g id="elem_HexUtil"><rect codeLine="89" fill="#FEFECE" height="276.9219" id="HexUtil" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="216" x="48" y="162.4375"/><ellipse cx="108.25" cy="178.4375" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M110.25,174.9375 Q110.4531,174.4375 110.6875,174.1875 Q110.9219,173.9375 111.1875,173.9375 Q111.6563,173.9375 111.9531,174.2188 Q112.25,174.5 112.25,175.1563 L112.25,176.7188 Q112.25,177.375 111.9688,177.6563 Q111.6875,177.9375 111.25,177.9375 Q110.8594,177.9375 110.6094,177.7656 Q110.3594,177.5938 110.25,177.1406 Q110.2031,176.8281 110.0313,176.6563 Q109.7188,176.3281 109.1563,176.1406 Q108.5938,175.9375 108.0313,175.9375 Q107.3281,175.9375 106.7344,176.2188 Q106.1563,176.5 105.7031,177.125 Q105.25,177.75 105.25,178.6094 L105.25,179.5313 Q105.25,180.5625 106.0938,181.25 Q106.9375,181.9375 108.4375,181.9375 Q109.3281,181.9375 109.9531,181.7344 Q110.3125,181.625 110.7188,181.2656 Q110.9844,181.0625 111.125,181 Q111.2656,180.9375 111.4375,180.9375 Q111.7656,180.9375 112,181.2031 Q112.25,181.4531 112.25,181.8125 Q112.25,182.1563 111.9063,182.5625 Q111.4063,183.1563 110.6094,183.4844 Q109.5625,183.9375 108.2813,183.9375 Q106.7813,183.9375 105.5781,183.3438 Q104.6094,182.875 103.9219,181.8594 Q103.25,180.8438 103.25,179.6406 L103.25,178.5469 Q103.25,177.2969 103.8438,176.2031 Q104.4531,175.1094 105.5,174.5313 Q106.5625,173.9375 107.75,173.9375 Q108.4688,173.9375 109.0938,174.1875 Q109.7188,174.4375 110.25,174.9375 Z " fill="#000000"/><ellipse cx="133.75" cy="177.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="30" x="139.75" y="184.166">final</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="42" x="173.75" y="184.166">HexUtil</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="49" x2="263" y1="194.4375" y2="194.4375"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="49" x2="263" y1="202.4375" y2="202.4375"/><ellipse cx="59" cy="213.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="173" x="68" y="220.9707">boolean isValid (String hex)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="68" y="238.5801">Â </text><ellipse cx="59" cy="248.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="190" x="68" y="256.1895">byte[] toByteArray (String hex)</text><ellipse cx="59" cy="266.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="68" y="273.7988">byte toByte (String hex)</text><ellipse cx="59" cy="283.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="68" y="291.4082">short toShort (String hex)</text><ellipse cx="59" cy="301.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="123" x="68" y="309.0176">int toInt (String hex)</text><ellipse cx="59" cy="319.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="152" x="68" y="326.627">long toLong (String hex)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="68" y="344.2363">Â </text><ellipse cx="59" cy="354.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="149" x="68" y="361.8457">String toHex (byte[] tab)</text><ellipse cx="59" cy="371.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="139" x="68" y="379.4551">String toHex (byte val)</text><ellipse cx="59" cy="389.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="144" x="68" y="397.0645">String toHex (short val)</text><ellipse cx="59" cy="407.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="127" x="68" y="414.6738">String toHex (int val)</text><ellipse cx="59" cy="424.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="139" x="68" y="432.2832">String toHex (long val)</text></g><!--MD5=[458b3a9396e0ca5416a37f6d6326ccaf]
class ApduUtil--><g id="elem_ApduUtil"><rect codeLine="104" fill="#FEFECE" height="100.8281" id="ApduUtil" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="462" x="489" y="596.4375"/><ellipse cx="667.25" cy="612.4375" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M669.25,608.9375 Q669.4531,608.4375 669.6875,608.1875 Q669.9219,607.9375 670.1875,607.9375 Q670.6563,607.9375 670.9531,608.2188 Q671.25,608.5 671.25,609.1563 L671.25,610.7188 Q671.25,611.375 670.9688,611.6563 Q670.6875,611.9375 670.25,611.9375 Q669.8594,611.9375 669.6094,611.7656 Q669.3594,611.5938 669.25,611.1406 Q669.2031,610.8281 669.0313,610.6563 Q668.7188,610.3281 668.1563,610.1406 Q667.5938,609.9375 667.0313,609.9375 Q666.3281,609.9375 665.7344,610.2188 Q665.1563,610.5 664.7031,611.125 Q664.25,611.75 664.25,612.6094 L664.25,613.5313 Q664.25,614.5625 665.0938,615.25 Q665.9375,615.9375 667.4375,615.9375 Q668.3281,615.9375 668.9531,615.7344 Q669.3125,615.625 669.7188,615.2656 Q669.9844,615.0625 670.125,615 Q670.2656,614.9375 670.4375,614.9375 Q670.7656,614.9375 671,615.2031 Q671.25,615.4531 671.25,615.8125 Q671.25,616.1563 670.9063,616.5625 Q670.4063,617.1563 669.6094,617.4844 Q668.5625,617.9375 667.2813,617.9375 Q665.7813,617.9375 664.5781,617.3438 Q663.6094,616.875 662.9219,615.8594 Q662.25,614.8438 662.25,613.6406 L662.25,612.5469 Q662.25,611.2969 662.8438,610.2031 Q663.4531,609.1094 664.5,608.5313 Q665.5625,607.9375 666.75,607.9375 Q667.4688,607.9375 668.0938,608.1875 Q668.7188,608.4375 669.25,608.9375 Z " fill="#000000"/><ellipse cx="692.75" cy="611.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="30" x="698.75" y="618.166">final</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="732.75" y="618.166">ApduUtil</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="490" x2="950" y1="628.4375" y2="628.4375"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="490" x2="950" y1="636.4375" y2="636.4375"/><ellipse cx="500" cy="647.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="436" x="509" y="654.9707">byte[] build (byte cla, byte ins, byte p1, byte p2, byte[] dataIn, Byte le)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="509" y="672.5801">Â </text><ellipse cx="500" cy="682.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="255" x="509" y="690.1895">boolean isCase4 (byte[] apduCommand)</text></g><!--MD5=[967b5bdf980b1f0d408075c95cfc8699]
class BerTlvUtil--><g id="elem_BerTlvUtil"><rect codeLine="109" fill="#FEFECE" height="118.4375" id="BerTlvUtil" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="507" x="986.5" y="587.9375"/><ellipse cx="1200.25" cy="603.9375" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1202.25,600.4375 Q1202.4531,599.9375 1202.6875,599.6875 Q1202.9219,599.4375 1203.1875,599.4375 Q1203.6563,599.4375 1203.9531,599.7188 Q1204.25,600 1204.25,600.6563 L1204.25,602.2188 Q1204.25,602.875 1203.9688,603.1563 Q1203.6875,603.4375 1203.25,603.4375 Q1202.8594,603.4375 1202.6094,603.2656 Q1202.3594,603.0938 1202.25,602.6406 Q1202.2031,602.3281 1202.0313,602.1563 Q1201.7188,601.8281 1201.1563,601.6406 Q1200.5938,601.4375 1200.0313,601.4375 Q1199.3281,601.4375 1198.7344,601.7188 Q1198.1563,602 1197.7031,602.625 Q1197.25,603.25 1197.25,604.1094 L1197.25,605.0313 Q1197.25,606.0625 1198.0938,606.75 Q1198.9375,607.4375 1200.4375,607.4375 Q1201.3281,607.4375 1201.9531,607.2344 Q1202.3125,607.125 1202.7188,606.7656 Q1202.9844,606.5625 1203.125,606.5 Q1203.2656,606.4375 1203.4375,606.4375 Q1203.7656,606.4375 1204,606.7031 Q1204.25,606.9531 1204.25,607.3125 Q1204.25,607.6563 1203.9063,608.0625 Q1203.4063,608.6563 1202.6094,608.9844 Q1201.5625,609.4375 1200.2813,609.4375 Q1198.7813,609.4375 1197.5781,608.8438 Q1196.6094,608.375 1195.9219,607.3594 Q1195.25,606.3438 1195.25,605.1406 L1195.25,604.0469 Q1195.25,602.7969 1195.8438,601.7031 Q1196.4531,600.6094 1197.5,600.0313 Q1198.5625,599.4375 1199.75,599.4375 Q1200.4688,599.4375 1201.0938,599.6875 Q1201.7188,599.9375 1202.25,600.4375 Z " fill="#000000"/><ellipse cx="1225.75" cy="603.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="1231.75" y="609.666">BerTlvUtil</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="987.5" x2="1492.5" y1="619.9375" y2="619.9375"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="987.5" x2="1492.5" y1="627.9375" y2="627.9375"/><ellipse cx="997.5" cy="638.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="481" x="1006.5" y="646.4707">Map&lt;Integer, byte[]&gt; parseSimple (byte[] tlvStructure, boolean primitiveOnly)</text><ellipse cx="997.5" cy="656.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="477" x="1006.5" y="664.0801">Map&lt;Integer, List&lt;byte[]&gt;&gt; parse (byte[] tlvStructure, boolean primitiveOnly)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="1006.5" y="681.6895">Â </text><ellipse cx="997.5" cy="691.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="206" x="1006.5" y="699.2988">boolean isConstructed (int tagId)</text></g><!--MD5=[ff1fef1d5f830c31212d01e346df5a91]
class JsonUtil--><g id="elem_JsonUtil"><rect codeLine="116" fill="#FEFECE" height="136.0469" id="JsonUtil" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="354" x="52" y="878.4375"/><ellipse cx="178.25" cy="894.4375" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M180.25,890.9375 Q180.4531,890.4375 180.6875,890.1875 Q180.9219,889.9375 181.1875,889.9375 Q181.6563,889.9375 181.9531,890.2188 Q182.25,890.5 182.25,891.1563 L182.25,892.7188 Q182.25,893.375 181.9688,893.6563 Q181.6875,893.9375 181.25,893.9375 Q180.8594,893.9375 180.6094,893.7656 Q180.3594,893.5938 180.25,893.1406 Q180.2031,892.8281 180.0313,892.6563 Q179.7188,892.3281 179.1563,892.1406 Q178.5938,891.9375 178.0313,891.9375 Q177.3281,891.9375 176.7344,892.2188 Q176.1563,892.5 175.7031,893.125 Q175.25,893.75 175.25,894.6094 L175.25,895.5313 Q175.25,896.5625 176.0938,897.25 Q176.9375,897.9375 178.4375,897.9375 Q179.3281,897.9375 179.9531,897.7344 Q180.3125,897.625 180.7188,897.2656 Q180.9844,897.0625 181.125,897 Q181.2656,896.9375 181.4375,896.9375 Q181.7656,896.9375 182,897.2031 Q182.25,897.4531 182.25,897.8125 Q182.25,898.1563 181.9063,898.5625 Q181.4063,899.1563 180.6094,899.4844 Q179.5625,899.9375 178.2813,899.9375 Q176.7813,899.9375 175.5781,899.3438 Q174.6094,898.875 173.9219,897.8594 Q173.25,896.8438 173.25,895.6406 L173.25,894.5469 Q173.25,893.2969 173.8438,892.2031 Q174.4531,891.1094 175.5,890.5313 Q176.5625,889.9375 177.75,889.9375 Q178.4688,889.9375 179.0938,890.1875 Q179.7188,890.4375 180.25,890.9375 Z " fill="#000000"/><ellipse cx="203.75" cy="893.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="30" x="209.75" y="900.166">final</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="48" x="243.75" y="900.166">JsonUtil</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="53" x2="405" y1="910.4375" y2="910.4375"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="53" x2="405" y1="918.4375" y2="918.4375"/><ellipse cx="63" cy="929.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="34" x="72" y="936.9707">Gson</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="76" x="110" y="936.9707">getParser ()</text><ellipse cx="63" cy="947.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="328" x="72" y="954.5801">void registerTypeAdapter (Class&lt;?&gt; matchingClass,</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="258" x="104" y="972.1895">Object adapter, boolean withSubclasses)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="72" y="989.7988">Â </text><ellipse cx="63" cy="999.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="160" x="72" y="1007.4082">String toJson (Object obj)</text></g><!--MD5=[3d84c5190c7a3821707931f3b8039d88]
class BodyError--><g id="elem_BodyError"><rect codeLine="123" fill="#FEFECE" height="118.4375" id="BodyError" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="229" x="441.5" y="887.4375"/><ellipse cx="514.25" cy="903.4375" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M516.25,899.9375 Q516.4531,899.4375 516.6875,899.1875 Q516.9219,898.9375 517.1875,898.9375 Q517.6563,898.9375 517.9531,899.2188 Q518.25,899.5 518.25,900.1563 L518.25,901.7188 Q518.25,902.375 517.9688,902.6563 Q517.6875,902.9375 517.25,902.9375 Q516.8594,902.9375 516.6094,902.7656 Q516.3594,902.5938 516.25,902.1406 Q516.2031,901.8281 516.0313,901.6563 Q515.7188,901.3281 515.1563,901.1406 Q514.5938,900.9375 514.0313,900.9375 Q513.3281,900.9375 512.7344,901.2188 Q512.1563,901.5 511.7031,902.125 Q511.25,902.75 511.25,903.6094 L511.25,904.5313 Q511.25,905.5625 512.0938,906.25 Q512.9375,906.9375 514.4375,906.9375 Q515.3281,906.9375 515.9531,906.7344 Q516.3125,906.625 516.7188,906.2656 Q516.9844,906.0625 517.125,906 Q517.2656,905.9375 517.4375,905.9375 Q517.7656,905.9375 518,906.2031 Q518.25,906.4531 518.25,906.8125 Q518.25,907.1563 517.9063,907.5625 Q517.4063,908.1563 516.6094,908.4844 Q515.5625,908.9375 514.2813,908.9375 Q512.7813,908.9375 511.5781,908.3438 Q510.6094,907.875 509.9219,906.8594 Q509.25,905.8438 509.25,904.6406 L509.25,903.5469 Q509.25,902.2969 509.8438,901.2031 Q510.4531,900.1094 511.5,899.5313 Q512.5625,898.9375 513.75,898.9375 Q514.4688,898.9375 515.0938,899.1875 Q515.7188,899.4375 516.25,899.9375 Z " fill="#000000"/><ellipse cx="539.75" cy="902.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="545.75" y="909.166">BodyError</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="442.5" x2="669.5" y1="919.4375" y2="919.4375"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="442.5" x2="669.5" y1="927.4375" y2="927.4375"/><ellipse cx="452.5" cy="938.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="203" x="461.5" y="945.9707">BodyError (Exception exception)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="461.5" y="963.5801">Â </text><ellipse cx="452.5" cy="973.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="461.5" y="981.1895">String getCode ()</text><ellipse cx="452.5" cy="991.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="461.5" y="998.7988">Exception getException ()</text></g><!--MD5=[9a218190a85a7a5cf1f408f9962c53bf]
class BodyErrorJsonDeserializer--><g id="elem_BodyErrorJsonDeserializer"><rect codeLine="129" fill="#FEFECE" height="131.6563" id="BodyErrorJsonDeserializer" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="379" x="705.5" y="880.4375"/><ellipse cx="777.75" cy="903.0469" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M779.75,899.5469 Q779.9531,899.0469 780.1875,898.7969 Q780.4219,898.5469 780.6875,898.5469 Q781.1563,898.5469 781.4531,898.8281 Q781.75,899.1094 781.75,899.7656 L781.75,901.3281 Q781.75,901.9844 781.4688,902.2656 Q781.1875,902.5469 780.75,902.5469 Q780.3594,902.5469 780.1094,902.375 Q779.8594,902.2031 779.75,901.75 Q779.7031,901.4375 779.5313,901.2656 Q779.2188,900.9375 778.6563,900.75 Q778.0938,900.5469 777.5313,900.5469 Q776.8281,900.5469 776.2344,900.8281 Q775.6563,901.1094 775.2031,901.7344 Q774.75,902.3594 774.75,903.2188 L774.75,904.1406 Q774.75,905.1719 775.5938,905.8594 Q776.4375,906.5469 777.9375,906.5469 Q778.8281,906.5469 779.4531,906.3438 Q779.8125,906.2344 780.2188,905.875 Q780.4844,905.6719 780.625,905.6094 Q780.7656,905.5469 780.9375,905.5469 Q781.2656,905.5469 781.5,905.8125 Q781.75,906.0625 781.75,906.4219 Q781.75,906.7656 781.4063,907.1719 Q780.9063,907.7656 780.1094,908.0938 Q779.0625,908.5469 777.7813,908.5469 Q776.2813,908.5469 775.0781,907.9531 Q774.1094,907.4844 773.4219,906.4688 Q772.75,905.4531 772.75,904.25 L772.75,903.1563 Q772.75,901.9063 773.3438,900.8125 Q773.9531,899.7188 775,899.1406 Q776.0625,898.5469 777.25,898.5469 Q777.9688,898.5469 778.5938,898.7969 Q779.2188,899.0469 779.75,899.5469 Z " fill="#000000"/><ellipse cx="803.25" cy="902.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="809.25" y="899.9707">&lt;&lt;</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="825.25" y="899.9707">JsonDeserializer&lt;BodyError&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1008.25" y="899.9707">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="833.25" y="917.5801">BodyErrorJsonDeserializer</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="706.5" x2="1083.5" y1="925.6563" y2="925.6563"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="706.5" x2="1083.5" y1="933.6563" y2="933.6563"/><ellipse cx="716.5" cy="944.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="725.5" y="952.1895">BodyErrorJsonDeserializer ()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="725.5" y="969.7988">Â </text><ellipse cx="716.5" cy="979.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="725.5" y="987.4082">BodyError deserialize (</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="869.5" y="987.4082">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="953.5" y="987.4082">json,</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="987.5" y="987.4082">Type</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="55" x="1023.5" y="987.4082">typeOfT,</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="757.5" y="1005.0176">JsonDeserializationContext</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="930.5" y="1005.0176">context)</text></g><!--MD5=[f0f8c8dfcaa5a8f8c3b99a1fa7726780]
class ByteArrayJsonAdapter--><g id="elem_ByteArrayJsonAdapter"><rect codeLine="135" fill="#FEFECE" height="184.4844" id="ByteArrayJsonAdapter" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="350" x="1120" y="854.4375"/><ellipse cx="1192.25" cy="885.8516" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1194.25,882.3516 Q1194.4531,881.8516 1194.6875,881.6016 Q1194.9219,881.3516 1195.1875,881.3516 Q1195.6563,881.3516 1195.9531,881.6328 Q1196.25,881.9141 1196.25,882.5703 L1196.25,884.1328 Q1196.25,884.7891 1195.9688,885.0703 Q1195.6875,885.3516 1195.25,885.3516 Q1194.8594,885.3516 1194.6094,885.1797 Q1194.3594,885.0078 1194.25,884.5547 Q1194.2031,884.2422 1194.0313,884.0703 Q1193.7188,883.7422 1193.1563,883.5547 Q1192.5938,883.3516 1192.0313,883.3516 Q1191.3281,883.3516 1190.7344,883.6328 Q1190.1563,883.9141 1189.7031,884.5391 Q1189.25,885.1641 1189.25,886.0234 L1189.25,886.9453 Q1189.25,887.9766 1190.0938,888.6641 Q1190.9375,889.3516 1192.4375,889.3516 Q1193.3281,889.3516 1193.9531,889.1484 Q1194.3125,889.0391 1194.7188,888.6797 Q1194.9844,888.4766 1195.125,888.4141 Q1195.2656,888.3516 1195.4375,888.3516 Q1195.7656,888.3516 1196,888.6172 Q1196.25,888.8672 1196.25,889.2266 Q1196.25,889.5703 1195.9063,889.9766 Q1195.4063,890.5703 1194.6094,890.8984 Q1193.5625,891.3516 1192.2813,891.3516 Q1190.7813,891.3516 1189.5781,890.7578 Q1188.6094,890.2891 1187.9219,889.2734 Q1187.25,888.2578 1187.25,887.0547 L1187.25,885.9609 Q1187.25,884.7109 1187.8438,883.6172 Q1188.4531,882.5234 1189.5,881.9453 Q1190.5625,881.3516 1191.75,881.3516 Q1192.4688,881.3516 1193.0938,881.6016 Q1193.7188,881.8516 1194.25,882.3516 Z " fill="#000000"/><ellipse cx="1217.75" cy="885.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1231.75" y="873.9707">&lt;&lt;</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="1247.75" y="873.9707">JsonSerializer&lt;byte[]&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1385.75" y="873.9707">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1223.75" y="891.5801">&lt;&lt;</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="1239.75" y="891.5801">JsonDeserializer&lt;byte[]&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1393.75" y="891.5801">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="1246.25" y="909.1895">ByteArrayJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="1121" x2="1469" y1="917.2656" y2="917.2656"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="1121" x2="1469" y1="925.2656" y2="925.2656"/><ellipse cx="1131" cy="936.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="1140" y="943.7988">ByteArrayJsonAdapter ()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="1140" y="961.4082">Â </text><ellipse cx="1131" cy="971.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="1140" y="979.0176">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="1224" y="979.0176">serialize (byte[] src,</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="1350" y="979.0176">Type</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="1386" y="979.0176">typeOfSrc,</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="1172" y="996.627">JsonSerializationContext</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="1329" y="996.627">context)</text><ellipse cx="1131" cy="1006.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="1140" y="1014.2363">byte[] deserialize (</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="1255" y="1014.2363">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="1339" y="1014.2363">json,</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="1373" y="1014.2363">Type</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="55" x="1409" y="1014.2363">typeOfT,</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="1172" y="1031.8457">JsonDeserializationContext</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="1345" y="1031.8457">context)</text></g><!--MD5=[52cc22ead8f9cede3c7076eefab9a46c]
class ByteJsonAdapter--><g id="elem_ByteJsonAdapter"><rect codeLine="143" fill="#FEFECE" height="184.4844" id="ByteJsonAdapter" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="343" x="348.5" y="1098.4375"/><ellipse cx="420.75" cy="1129.8516" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M422.75,1126.3516 Q422.9531,1125.8516 423.1875,1125.6016 Q423.4219,1125.3516 423.6875,1125.3516 Q424.1563,1125.3516 424.4531,1125.6328 Q424.75,1125.9141 424.75,1126.5703 L424.75,1128.1328 Q424.75,1128.7891 424.4688,1129.0703 Q424.1875,1129.3516 423.75,1129.3516 Q423.3594,1129.3516 423.1094,1129.1797 Q422.8594,1129.0078 422.75,1128.5547 Q422.7031,1128.2422 422.5313,1128.0703 Q422.2188,1127.7422 421.6563,1127.5547 Q421.0938,1127.3516 420.5313,1127.3516 Q419.8281,1127.3516 419.2344,1127.6328 Q418.6563,1127.9141 418.2031,1128.5391 Q417.75,1129.1641 417.75,1130.0234 L417.75,1130.9453 Q417.75,1131.9766 418.5938,1132.6641 Q419.4375,1133.3516 420.9375,1133.3516 Q421.8281,1133.3516 422.4531,1133.1484 Q422.8125,1133.0391 423.2188,1132.6797 Q423.4844,1132.4766 423.625,1132.4141 Q423.7656,1132.3516 423.9375,1132.3516 Q424.2656,1132.3516 424.5,1132.6172 Q424.75,1132.8672 424.75,1133.2266 Q424.75,1133.5703 424.4063,1133.9766 Q423.9063,1134.5703 423.1094,1134.8984 Q422.0625,1135.3516 420.7813,1135.3516 Q419.2813,1135.3516 418.0781,1134.7578 Q417.1094,1134.2891 416.4219,1133.2734 Q415.75,1132.2578 415.75,1131.0547 L415.75,1129.9609 Q415.75,1128.7109 416.3438,1127.6172 Q416.9531,1126.5234 418,1125.9453 Q419.0625,1125.3516 420.25,1125.3516 Q420.9688,1125.3516 421.5938,1125.6016 Q422.2188,1125.8516 422.75,1126.3516 Z " fill="#000000"/><ellipse cx="446.25" cy="1129.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="460.25" y="1117.9707">&lt;&lt;</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="476.25" y="1117.9707">JsonSerializer&lt;Byte&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="607.25" y="1117.9707">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="452.25" y="1135.5801">&lt;&lt;</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="468.25" y="1135.5801">JsonDeserializer&lt;Byte&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="615.25" y="1135.5801">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="488.25" y="1153.1895">ByteJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="349.5" x2="690.5" y1="1161.2656" y2="1161.2656"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="349.5" x2="690.5" y1="1169.2656" y2="1169.2656"/><ellipse cx="359.5" cy="1180.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="368.5" y="1187.7988">ByteJsonAdapter ()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="368.5" y="1205.4082">Â </text><ellipse cx="359.5" cy="1215.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="368.5" y="1223.0176">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="452.5" y="1223.0176">serialize (Byte src,</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="571.5" y="1223.0176">Type</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="607.5" y="1223.0176">typeOfSrc,</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="400.5" y="1240.627">JsonSerializationContext</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="557.5" y="1240.627">context)</text><ellipse cx="359.5" cy="1250.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="368.5" y="1258.2363">Byte deserialize (</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="476.5" y="1258.2363">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="560.5" y="1258.2363">json,</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="594.5" y="1258.2363">Type</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="55" x="630.5" y="1258.2363">typeOfT,</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="400.5" y="1275.8457">JsonDeserializationContext</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="573.5" y="1275.8457">context)</text></g><!--MD5=[514e1602104e75c9a95a46a815824089]
class ShortJsonAdapter--><g id="elem_ShortJsonAdapter"><rect codeLine="151" fill="#FEFECE" height="184.4844" id="ShortJsonAdapter" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="349" x="726.5" y="1098.4375"/><ellipse cx="798.75" cy="1129.8516" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M800.75,1126.3516 Q800.9531,1125.8516 801.1875,1125.6016 Q801.4219,1125.3516 801.6875,1125.3516 Q802.1563,1125.3516 802.4531,1125.6328 Q802.75,1125.9141 802.75,1126.5703 L802.75,1128.1328 Q802.75,1128.7891 802.4688,1129.0703 Q802.1875,1129.3516 801.75,1129.3516 Q801.3594,1129.3516 801.1094,1129.1797 Q800.8594,1129.0078 800.75,1128.5547 Q800.7031,1128.2422 800.5313,1128.0703 Q800.2188,1127.7422 799.6563,1127.5547 Q799.0938,1127.3516 798.5313,1127.3516 Q797.8281,1127.3516 797.2344,1127.6328 Q796.6563,1127.9141 796.2031,1128.5391 Q795.75,1129.1641 795.75,1130.0234 L795.75,1130.9453 Q795.75,1131.9766 796.5938,1132.6641 Q797.4375,1133.3516 798.9375,1133.3516 Q799.8281,1133.3516 800.4531,1133.1484 Q800.8125,1133.0391 801.2188,1132.6797 Q801.4844,1132.4766 801.625,1132.4141 Q801.7656,1132.3516 801.9375,1132.3516 Q802.2656,1132.3516 802.5,1132.6172 Q802.75,1132.8672 802.75,1133.2266 Q802.75,1133.5703 802.4063,1133.9766 Q801.9063,1134.5703 801.1094,1134.8984 Q800.0625,1135.3516 798.7813,1135.3516 Q797.2813,1135.3516 796.0781,1134.7578 Q795.1094,1134.2891 794.4219,1133.2734 Q793.75,1132.2578 793.75,1131.0547 L793.75,1129.9609 Q793.75,1128.7109 794.3438,1127.6172 Q794.9531,1126.5234 796,1125.9453 Q797.0625,1125.3516 798.25,1125.3516 Q798.9688,1125.3516 799.5938,1125.6016 Q800.2188,1125.8516 800.75,1126.3516 Z " fill="#000000"/><ellipse cx="824.25" cy="1129.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="838.25" y="1117.9707">&lt;&lt;</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="854.25" y="1117.9707">JsonSerializer&lt;Short&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="991.25" y="1117.9707">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="830.25" y="1135.5801">&lt;&lt;</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="846.25" y="1135.5801">JsonDeserializer&lt;Short&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="999.25" y="1135.5801">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="866.25" y="1153.1895">ShortJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="727.5" x2="1074.5" y1="1161.2656" y2="1161.2656"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="727.5" x2="1074.5" y1="1169.2656" y2="1169.2656"/><ellipse cx="737.5" cy="1180.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="746.5" y="1187.7988">ShortJsonAdapter ()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="746.5" y="1205.4082">Â </text><ellipse cx="737.5" cy="1215.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="746.5" y="1223.0176">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="830.5" y="1223.0176">serialize (Short src,</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="955.5" y="1223.0176">Type</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="991.5" y="1223.0176">typeOfSrc,</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="778.5" y="1240.627">JsonSerializationContext</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="935.5" y="1240.627">context)</text><ellipse cx="737.5" cy="1250.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="746.5" y="1258.2363">Short deserialize (</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="860.5" y="1258.2363">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="944.5" y="1258.2363">json,</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="978.5" y="1258.2363">Type</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="55" x="1014.5" y="1258.2363">typeOfT,</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="778.5" y="1275.8457">JsonDeserializationContext</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="951.5" y="1275.8457">context)</text></g><!--MD5=[f72f8ad6aaf73d77b05e402bfda701b7]
class IntegerJsonAdapter--><g id="elem_IntegerJsonAdapter"><rect codeLine="159" fill="#FEFECE" height="184.4844" id="IntegerJsonAdapter" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="359" x="1110.5" y="1098.4375"/><ellipse cx="1182.75" cy="1129.8516" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1184.75,1126.3516 Q1184.9531,1125.8516 1185.1875,1125.6016 Q1185.4219,1125.3516 1185.6875,1125.3516 Q1186.1563,1125.3516 1186.4531,1125.6328 Q1186.75,1125.9141 1186.75,1126.5703 L1186.75,1128.1328 Q1186.75,1128.7891 1186.4688,1129.0703 Q1186.1875,1129.3516 1185.75,1129.3516 Q1185.3594,1129.3516 1185.1094,1129.1797 Q1184.8594,1129.0078 1184.75,1128.5547 Q1184.7031,1128.2422 1184.5313,1128.0703 Q1184.2188,1127.7422 1183.6563,1127.5547 Q1183.0938,1127.3516 1182.5313,1127.3516 Q1181.8281,1127.3516 1181.2344,1127.6328 Q1180.6563,1127.9141 1180.2031,1128.5391 Q1179.75,1129.1641 1179.75,1130.0234 L1179.75,1130.9453 Q1179.75,1131.9766 1180.5938,1132.6641 Q1181.4375,1133.3516 1182.9375,1133.3516 Q1183.8281,1133.3516 1184.4531,1133.1484 Q1184.8125,1133.0391 1185.2188,1132.6797 Q1185.4844,1132.4766 1185.625,1132.4141 Q1185.7656,1132.3516 1185.9375,1132.3516 Q1186.2656,1132.3516 1186.5,1132.6172 Q1186.75,1132.8672 1186.75,1133.2266 Q1186.75,1133.5703 1186.4063,1133.9766 Q1185.9063,1134.5703 1185.1094,1134.8984 Q1184.0625,1135.3516 1182.7813,1135.3516 Q1181.2813,1135.3516 1180.0781,1134.7578 Q1179.1094,1134.2891 1178.4219,1133.2734 Q1177.75,1132.2578 1177.75,1131.0547 L1177.75,1129.9609 Q1177.75,1128.7109 1178.3438,1127.6172 Q1178.9531,1126.5234 1180,1125.9453 Q1181.0625,1125.3516 1182.25,1125.3516 Q1182.9688,1125.3516 1183.5938,1125.6016 Q1184.2188,1125.8516 1184.75,1126.3516 Z " fill="#000000"/><ellipse cx="1208.25" cy="1129.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1222.25" y="1117.9707">&lt;&lt;</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="1238.25" y="1117.9707">JsonSerializer&lt;Integer&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1385.25" y="1117.9707">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1214.25" y="1135.5801">&lt;&lt;</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="1230.25" y="1135.5801">JsonDeserializer&lt;Integer&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1393.25" y="1135.5801">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="1250.25" y="1153.1895">IntegerJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="1111.5" x2="1468.5" y1="1161.2656" y2="1161.2656"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="1111.5" x2="1468.5" y1="1169.2656" y2="1169.2656"/><ellipse cx="1121.5" cy="1180.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="1130.5" y="1187.7988">IntegerJsonAdapter ()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="1130.5" y="1205.4082">Â </text><ellipse cx="1121.5" cy="1215.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="1130.5" y="1223.0176">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="1214.5" y="1223.0176">serialize (Integer src,</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="1349.5" y="1223.0176">Type</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="1385.5" y="1223.0176">typeOfSrc,</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="1162.5" y="1240.627">JsonSerializationContext</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="1319.5" y="1240.627">context)</text><ellipse cx="1121.5" cy="1250.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="1130.5" y="1258.2363">Integer deserialize (</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="1254.5" y="1258.2363">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="1338.5" y="1258.2363">json,</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="1372.5" y="1258.2363">Type</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="55" x="1408.5" y="1258.2363">typeOfT,</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="1162.5" y="1275.8457">JsonDeserializationContext</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="1335.5" y="1275.8457">context)</text></g><!--MD5=[6dc912724c38cd3a0ccd19a15c425c35]
class LongJsonAdapter--><g id="elem_LongJsonAdapter"><rect codeLine="167" fill="#FEFECE" height="184.4844" id="LongJsonAdapter" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="347" x="346.5" y="1342.4375"/><ellipse cx="418.75" cy="1373.8516" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M420.75,1370.3516 Q420.9531,1369.8516 421.1875,1369.6016 Q421.4219,1369.3516 421.6875,1369.3516 Q422.1563,1369.3516 422.4531,1369.6328 Q422.75,1369.9141 422.75,1370.5703 L422.75,1372.1328 Q422.75,1372.7891 422.4688,1373.0703 Q422.1875,1373.3516 421.75,1373.3516 Q421.3594,1373.3516 421.1094,1373.1797 Q420.8594,1373.0078 420.75,1372.5547 Q420.7031,1372.2422 420.5313,1372.0703 Q420.2188,1371.7422 419.6563,1371.5547 Q419.0938,1371.3516 418.5313,1371.3516 Q417.8281,1371.3516 417.2344,1371.6328 Q416.6563,1371.9141 416.2031,1372.5391 Q415.75,1373.1641 415.75,1374.0234 L415.75,1374.9453 Q415.75,1375.9766 416.5938,1376.6641 Q417.4375,1377.3516 418.9375,1377.3516 Q419.8281,1377.3516 420.4531,1377.1484 Q420.8125,1377.0391 421.2188,1376.6797 Q421.4844,1376.4766 421.625,1376.4141 Q421.7656,1376.3516 421.9375,1376.3516 Q422.2656,1376.3516 422.5,1376.6172 Q422.75,1376.8672 422.75,1377.2266 Q422.75,1377.5703 422.4063,1377.9766 Q421.9063,1378.5703 421.1094,1378.8984 Q420.0625,1379.3516 418.7813,1379.3516 Q417.2813,1379.3516 416.0781,1378.7578 Q415.1094,1378.2891 414.4219,1377.2734 Q413.75,1376.2578 413.75,1375.0547 L413.75,1373.9609 Q413.75,1372.7109 414.3438,1371.6172 Q414.9531,1370.5234 416,1369.9453 Q417.0625,1369.3516 418.25,1369.3516 Q418.9688,1369.3516 419.5938,1369.6016 Q420.2188,1369.8516 420.75,1370.3516 Z " fill="#000000"/><ellipse cx="444.25" cy="1373.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="458.25" y="1361.9707">&lt;&lt;</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="474.25" y="1361.9707">JsonSerializer&lt;Long&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="609.25" y="1361.9707">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="450.25" y="1379.5801">&lt;&lt;</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="466.25" y="1379.5801">JsonDeserializer&lt;Long&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="617.25" y="1379.5801">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="486.25" y="1397.1895">LongJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="347.5" x2="692.5" y1="1405.2656" y2="1405.2656"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="347.5" x2="692.5" y1="1413.2656" y2="1413.2656"/><ellipse cx="357.5" cy="1424.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="366.5" y="1431.7988">LongJsonAdapter ()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="366.5" y="1449.4082">Â </text><ellipse cx="357.5" cy="1459.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="366.5" y="1467.0176">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="450.5" y="1467.0176">serialize (Long src,</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="573.5" y="1467.0176">Type</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="609.5" y="1467.0176">typeOfSrc,</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="398.5" y="1484.627">JsonSerializationContext</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="555.5" y="1484.627">context)</text><ellipse cx="357.5" cy="1494.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="366.5" y="1502.2363">Long deserialize (</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="478.5" y="1502.2363">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="562.5" y="1502.2363">json,</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="596.5" y="1502.2363">Type</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="55" x="632.5" y="1502.2363">typeOfT,</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="398.5" y="1519.8457">JsonDeserializationContext</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="571.5" y="1519.8457">context)</text></g><!--MD5=[fc62ed06551ba356a446c123e88cc84c]
class ThrowableJsonSerializer--><g id="elem_ThrowableJsonSerializer"><rect codeLine="175" fill="#FEFECE" height="131.6563" id="ThrowableJsonSerializer" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="370" x="729" y="1368.4375"/><ellipse cx="803.75" cy="1391.0469" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M805.75,1387.5469 Q805.9531,1387.0469 806.1875,1386.7969 Q806.4219,1386.5469 806.6875,1386.5469 Q807.1563,1386.5469 807.4531,1386.8281 Q807.75,1387.1094 807.75,1387.7656 L807.75,1389.3281 Q807.75,1389.9844 807.4688,1390.2656 Q807.1875,1390.5469 806.75,1390.5469 Q806.3594,1390.5469 806.1094,1390.375 Q805.8594,1390.2031 805.75,1389.75 Q805.7031,1389.4375 805.5313,1389.2656 Q805.2188,1388.9375 804.6563,1388.75 Q804.0938,1388.5469 803.5313,1388.5469 Q802.8281,1388.5469 802.2344,1388.8281 Q801.6563,1389.1094 801.2031,1389.7344 Q800.75,1390.3594 800.75,1391.2188 L800.75,1392.1406 Q800.75,1393.1719 801.5938,1393.8594 Q802.4375,1394.5469 803.9375,1394.5469 Q804.8281,1394.5469 805.4531,1394.3438 Q805.8125,1394.2344 806.2188,1393.875 Q806.4844,1393.6719 806.625,1393.6094 Q806.7656,1393.5469 806.9375,1393.5469 Q807.2656,1393.5469 807.5,1393.8125 Q807.75,1394.0625 807.75,1394.4219 Q807.75,1394.7656 807.4063,1395.1719 Q806.9063,1395.7656 806.1094,1396.0938 Q805.0625,1396.5469 803.7813,1396.5469 Q802.2813,1396.5469 801.0781,1395.9531 Q800.1094,1395.4844 799.4219,1394.4688 Q798.75,1393.4531 798.75,1392.25 L798.75,1391.1563 Q798.75,1389.9063 799.3438,1388.8125 Q799.9531,1387.7188 801,1387.1406 Q802.0625,1386.5469 803.25,1386.5469 Q803.9688,1386.5469 804.5938,1386.7969 Q805.2188,1387.0469 805.75,1387.5469 Z " fill="#000000"/><ellipse cx="829.25" cy="1390.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="835.25" y="1387.9707">&lt;&lt;</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="851.25" y="1387.9707">JsonSerializer&lt;Throwable&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="16" x="1020.25" y="1387.9707">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="859.25" y="1405.5801">ThrowableJsonSerializer</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="730" x2="1098" y1="1413.6563" y2="1413.6563"/><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="730" x2="1098" y1="1421.6563" y2="1421.6563"/><ellipse cx="740" cy="1432.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="749" y="1440.1895">ThrowableJsonSerializer ()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="749" y="1457.7988">Â </text><ellipse cx="740" cy="1467.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="749" y="1475.4082">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="833" y="1475.4082">serialize (Throwable src,</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="990" y="1475.4082">Type</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="1026" y="1475.4082">typeOfSrc,</text><text fill="#000000" filter="url(#b1sw638gr97ik80)" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="781" y="1493.0176">JsonSerializationContext</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="938" y="1493.0176">context)</text></g><!--MD5=[c34d1faeeea216c406a2d0eb3a604534]
class ContactCardCommonProtocol--><g id="elem_ContactCardCommonProtocol"><rect codeLine="183" fill="#FEFECE" height="118.4375" id="ContactCardCommonProtocol" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="319" x="1150.5" y="241.9375"/><ellipse cx="1206.25" cy="257.9375" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1204.75,258.9375 L1204.75,260.9375 L1208.75,260.9375 L1208.75,259.9375 L1208.75,259.4531 L1209.375,258.9375 L1209.75,258.9375 L1210.125,258.9375 L1210.75,259.4531 L1210.75,259.9375 L1210.75,262.9375 L1202.75,262.9375 L1202.2656,262.9375 L1201.75,262.3125 L1201.75,261.9375 L1201.75,261.5625 L1202.2656,260.9375 L1202.75,260.9375 L1202.75,260.9375 L1202.75,254.9375 L1202.75,254.9375 L1202.2656,254.9375 L1201.75,254.3125 L1201.75,253.9375 L1201.75,253.5625 L1202.2656,252.9375 L1202.75,252.9375 L1210.75,252.9375 L1210.75,255.9375 L1210.75,256.4219 L1210.125,256.9375 L1209.75,256.9375 L1209.375,256.9375 L1208.75,256.4219 L1208.75,255.9375 L1208.75,254.9375 L1204.75,254.9375 L1204.75,256.9375 L1205.75,256.9375 L1205.75,256.4531 L1205.75,256.4531 L1206.375,255.9375 L1206.75,255.9375 L1207.125,255.9375 L1207.75,256.4531 L1207.75,256.9375 L1207.75,258.9375 L1207.75,259.4219 L1207.125,259.9375 L1207.125,259.9375 L1206.75,259.9375 L1206.375,259.9375 L1205.75,259.4219 L1205.75,259.4219 L1205.75,258.9375 L1204.75,258.9375 Z " fill="#000000"/><ellipse cx="1231.75" cy="257.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="188" x="1237.75" y="263.666">ContactCardCommonProtocol</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="1151.5" x2="1468.5" y1="273.9375" y2="273.9375"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="79" x="1156.5" y="292.4707">ISO_7816_3</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="107" x="1156.5" y="310.0801">ISO_7816_3_TO</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="104" x="1156.5" y="327.6895">ISO_7816_3_T1</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="307" x="1156.5" y="345.2988">INNOVATRON_HIGH_SPEED_PROTOCOL_SAM</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="1151.5" x2="1468.5" y1="352.375" y2="352.375"/></g><!--MD5=[25bf49c9220c51f3412e028606b93688]
class ContactlessCardCommonProtocol--><g id="elem_ContactlessCardCommonProtocol"><rect codeLine="189" fill="#FEFECE" height="153.6563" id="ContactlessCardCommonProtocol" rx="2.5" ry="2.5" style="stroke:#D4AC0D;stroke-width:2.0;" width="256" x="859" y="223.9375"/><ellipse cx="874" cy="239.9375" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M872.5,240.9375 L872.5,242.9375 L876.5,242.9375 L876.5,241.9375 L876.5,241.4531 L877.125,240.9375 L877.5,240.9375 L877.875,240.9375 L878.5,241.4531 L878.5,241.9375 L878.5,244.9375 L870.5,244.9375 L870.0156,244.9375 L869.5,244.3125 L869.5,243.9375 L869.5,243.5625 L870.0156,242.9375 L870.5,242.9375 L870.5,242.9375 L870.5,236.9375 L870.5,236.9375 L870.0156,236.9375 L869.5,236.3125 L869.5,235.9375 L869.5,235.5625 L870.0156,234.9375 L870.5,234.9375 L878.5,234.9375 L878.5,237.9375 L878.5,238.4219 L877.875,238.9375 L877.5,238.9375 L877.125,238.9375 L876.5,238.4219 L876.5,237.9375 L876.5,236.9375 L872.5,236.9375 L872.5,238.9375 L873.5,238.9375 L873.5,238.4531 L873.5,238.4531 L874.125,237.9375 L874.5,237.9375 L874.875,237.9375 L875.5,238.4531 L875.5,238.9375 L875.5,240.9375 L875.5,241.4219 L874.875,241.9375 L874.875,241.9375 L874.5,241.9375 L874.125,241.9375 L873.5,241.4219 L873.5,241.4219 L873.5,240.9375 L872.5,240.9375 Z " fill="#000000"/><ellipse cx="893" cy="239.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="213" x="899" y="245.666">ContactlessCardCommonProtocol</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="860" x2="1114" y1="255.9375" y2="255.9375"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="87" x="865" y="274.4707">ISO_14443_4</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="149" x="865" y="292.0801">NFC_A_ISO_14443_3A</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="149" x="865" y="309.6895">NFC_B_ISO_14443_3B</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="127" x="865" y="327.2988">NFC_F_JIS_6319_4</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="124" x="865" y="344.9082">NFC_V_ISO_15693</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="line-through" textLength="203" x="865" y="362.5176">INNOVATRON_B_PRIME_CARD</text><line style="stroke:#D4AC0D;stroke-width:2.0;" x1="860" x2="1114" y1="369.5938" y2="369.5938"/></g><!--MD5=[c9115abaf16ca91dc45c56264012f3ce]
link ByteArrayUtil to JsonUtil--><!--MD5=[6757456dba33f4ac62c37eb7e7994c1a]
link Assert to ByteArrayUtil--><!--MD5=[6bb83c1742bc0e576ff68716e4c88e08]
link Assert to ApduUtil--><!--MD5=[51c341f8810c88afd783f70947e1e58c]
link Assert to BerTlvUtil--><!--MD5=[11b18828dbd069e82c1512f4c4381143]
@startuml
title
    Keyple - keyple-util-java-lib - 2.1.+ (15/03/2022)
end title

' == THEME ==

'Couleurs issues de : https://htmlcolorcodes.com/fr/tableau-de-couleur/tableau-de-couleur-design-plat/
!define C_GREY1 F8F9F9
!define C_GREY2 F2F3F4
!define C_GREY3 E5E7E9
!define C_GREY4 D7DBDD
!define C_GREY5 CACFD2
!define C_GREY6 BDC3C7
!define C_LINK 3498DB
!define C_USE 27AE60

' - - Styles that don't work with new version of plantuml - -
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
' - - END - -

skinparam ClassBorderThickness 2
skinparam ArrowThickness 2

' Yellow
skinparam ClassBackgroundColor #FEFECE
skinparam ClassBorderColor #D4AC0D
' Red
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
' Purple
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
' blue
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
' Green
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
' Grey
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype

' == CONTENT ==

legend top
    __Colors legend__ :
    * __External API references__ :
    ** <back:yellow>**com.google.code.gson**</back>
end legend

package "org.eclipse.keyple.core.util" as util {
    +class "**final** Assert" as Assert {
        +{static} Assert getInstance ()

        +Assert notNull (Object obj, String name)
        +Assert notEmpty (String obj, String name)
        +Assert notEmpty (Collection<?> obj, String name)
        +Assert notEmpty (byte[] obj, String name)
        +Assert isTrue (Boolean condition, String name)
        +Assert greaterOrEqual (Integer number, int minValue, String name)
        +Assert isEqual (Integer number, int value, String name)
        +Assert isInRange (Integer number, int minValue, int maxValue, String name)
        +Assert isHexString (String hex, String name)
    }
    +class "**final** ByteArrayUtil" as ByteArrayUtil {
        +{static} byte[] extractBytes (byte[] src, int bitOffset, int nbBytes)
        +{static} int extractInt (byte[] src, int offset, int nbBytes, boolean isSigned)

        +<s>boolean isValidHexString (String hex)
        +<s>String normalizeHexString (String hex)

        +<s>byte[] fromHex (String hex)
        +<s>String toHex (byte[] data)

        +<s>int twoBytesToInt (byte[] bytes, int offset)
        +<s>int twoBytesSignedToInt (byte[] bytes, int offset)
        +<s>int threeBytesToInt (byte[] bytes, int offset)
        +<s>int threeBytesSignedToInt (byte[] bytes, int offset)
        +<s>int fourBytesToInt (byte[] bytes, int offset)
    }
    +class "**final** HexUtil" as HexUtil {
        +{static} boolean isValid (String hex)

        +{static} byte[] toByteArray (String hex)
        +{static} byte toByte (String hex)
        +{static} short toShort (String hex)
        +{static} int toInt (String hex)
        +{static} long toLong (String hex)

        +{static} String toHex (byte[] tab)
        +{static} String toHex (byte val)
        +{static} String toHex (short val)
        +{static} String toHex (int val)
        +{static} String toHex (long val)
    }
    +class "**final** ApduUtil" as ApduUtil {
        +{static} byte[] build (byte cla, byte ins, byte p1, byte p2, byte[] dataIn, Byte le)

        +{static} boolean isCase4 (byte[] apduCommand)
    }
    +class BerTlvUtil {
        +{static} Map<Integer, byte[]> parseSimple (byte[] tlvStructure, boolean primitiveOnly)
        +{static} Map<Integer, List<byte[]>> parse (byte[] tlvStructure, boolean primitiveOnly)

        +{static} boolean isConstructed (int tagId)
    }
    package json {
        +class "**final** JsonUtil" as JsonUtil {
            +{static} <back:yellow>Gson</back> getParser ()
            +{static} void registerTypeAdapter (Class<?> matchingClass,
                \tObject adapter, boolean withSubclasses)

            +{static} String toJson (Object obj)
        }
        +class BodyError {
            +BodyError (Exception exception)

            +String getCode ()
            +Exception getException ()
        }
        +class "<<<back:yellow>JsonDeserializer<BodyError></back>>>\nBodyErrorJsonDeserializer" as BodyErrorJsonDeserializer {
            +BodyErrorJsonDeserializer ()

            +BodyError deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<byte[]></back>>>\n<<<back:yellow>JsonDeserializer<byte[]></back>>>\nByteArrayJsonAdapter" as ByteArrayJsonAdapter {
            +ByteArrayJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (byte[] src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +byte[] deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Byte></back>>>\n<<<back:yellow>JsonDeserializer<Byte></back>>>\nByteJsonAdapter" as ByteJsonAdapter {
            +ByteJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Byte src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Byte deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Short></back>>>\n<<<back:yellow>JsonDeserializer<Short></back>>>\nShortJsonAdapter" as ShortJsonAdapter {
            +ShortJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Short src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Short deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Integer></back>>>\n<<<back:yellow>JsonDeserializer<Integer></back>>>\nIntegerJsonAdapter" as IntegerJsonAdapter {
            +IntegerJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Integer src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Integer deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Long></back>>>\n<<<back:yellow>JsonDeserializer<Long></back>>>\nLongJsonAdapter" as LongJsonAdapter {
            +LongJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Long src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Long deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Throwable></back>>>\nThrowableJsonSerializer" as ThrowableJsonSerializer {
            +ThrowableJsonSerializer ()

            +<back:yellow>JsonElement</back> serialize (Throwable src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
        }
    }
    package protocol {
        +enum "<s>ContactCardCommonProtocol</s>" as ContactCardCommonProtocol {
            <s>ISO_7816_3
            <s>ISO_7816_3_TO
            <s>ISO_7816_3_T1
            <s>INNOVATRON_HIGH_SPEED_PROTOCOL_SAM
        }
        +enum "<s>ContactlessCardCommonProtocol</s>" as ContactlessCardCommonProtocol {
            <s>ISO_14443_4
            <s>NFC_A_ISO_14443_3A
            <s>NFC_B_ISO_14443_3B
            <s>NFC_F_JIS_6319_4
            <s>NFC_V_ISO_15693
            <s>INNOVATRON_B_PRIME_CARD
        }
    }
}

' Associations

' == LAYOUT ==

ByteArrayUtil -[hidden]- JsonUtil

Assert -[hidden]- ByteArrayUtil
Assert -[hidden]- ApduUtil
Assert -[hidden]- BerTlvUtil

' == STYLE ==

package util #C_GREY1 {}
package json #C_GREY2 {}
package protocol #C_GREY2 {}

@enduml

@startuml
title
    Keyple - keyple-util-java-lib - 2.1.+ (15/03/2022)
end title



skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF

skinparam ClassBorderThickness 2
skinparam ArrowThickness 2

skinparam ClassBackgroundColor #FEFECE
skinparam ClassBorderColor #D4AC0D
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype


legend top
    __Colors legend__ :
    * __External API references__ :
    ** <back:yellow>**com.google.code.gson**</back>
end legend

package "org.eclipse.keyple.core.util" as util {
    +class "**final** Assert" as Assert {
        +{static} Assert getInstance ()

        +Assert notNull (Object obj, String name)
        +Assert notEmpty (String obj, String name)
        +Assert notEmpty (Collection<?> obj, String name)
        +Assert notEmpty (byte[] obj, String name)
        +Assert isTrue (Boolean condition, String name)
        +Assert greaterOrEqual (Integer number, int minValue, String name)
        +Assert isEqual (Integer number, int value, String name)
        +Assert isInRange (Integer number, int minValue, int maxValue, String name)
        +Assert isHexString (String hex, String name)
    }
    +class "**final** ByteArrayUtil" as ByteArrayUtil {
        +{static} byte[] extractBytes (byte[] src, int bitOffset, int nbBytes)
        +{static} int extractInt (byte[] src, int offset, int nbBytes, boolean isSigned)

        +<s>boolean isValidHexString (String hex)
        +<s>String normalizeHexString (String hex)

        +<s>byte[] fromHex (String hex)
        +<s>String toHex (byte[] data)

        +<s>int twoBytesToInt (byte[] bytes, int offset)
        +<s>int twoBytesSignedToInt (byte[] bytes, int offset)
        +<s>int threeBytesToInt (byte[] bytes, int offset)
        +<s>int threeBytesSignedToInt (byte[] bytes, int offset)
        +<s>int fourBytesToInt (byte[] bytes, int offset)
    }
    +class "**final** HexUtil" as HexUtil {
        +{static} boolean isValid (String hex)

        +{static} byte[] toByteArray (String hex)
        +{static} byte toByte (String hex)
        +{static} short toShort (String hex)
        +{static} int toInt (String hex)
        +{static} long toLong (String hex)

        +{static} String toHex (byte[] tab)
        +{static} String toHex (byte val)
        +{static} String toHex (short val)
        +{static} String toHex (int val)
        +{static} String toHex (long val)
    }
    +class "**final** ApduUtil" as ApduUtil {
        +{static} byte[] build (byte cla, byte ins, byte p1, byte p2, byte[] dataIn, Byte le)

        +{static} boolean isCase4 (byte[] apduCommand)
    }
    +class BerTlvUtil {
        +{static} Map<Integer, byte[]> parseSimple (byte[] tlvStructure, boolean primitiveOnly)
        +{static} Map<Integer, List<byte[]>> parse (byte[] tlvStructure, boolean primitiveOnly)

        +{static} boolean isConstructed (int tagId)
    }
    package json {
        +class "**final** JsonUtil" as JsonUtil {
            +{static} <back:yellow>Gson</back> getParser ()
            +{static} void registerTypeAdapter (Class<?> matchingClass,
                \tObject adapter, boolean withSubclasses)

            +{static} String toJson (Object obj)
        }
        +class BodyError {
            +BodyError (Exception exception)

            +String getCode ()
            +Exception getException ()
        }
        +class "<<<back:yellow>JsonDeserializer<BodyError></back>>>\nBodyErrorJsonDeserializer" as BodyErrorJsonDeserializer {
            +BodyErrorJsonDeserializer ()

            +BodyError deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<byte[]></back>>>\n<<<back:yellow>JsonDeserializer<byte[]></back>>>\nByteArrayJsonAdapter" as ByteArrayJsonAdapter {
            +ByteArrayJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (byte[] src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +byte[] deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Byte></back>>>\n<<<back:yellow>JsonDeserializer<Byte></back>>>\nByteJsonAdapter" as ByteJsonAdapter {
            +ByteJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Byte src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Byte deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Short></back>>>\n<<<back:yellow>JsonDeserializer<Short></back>>>\nShortJsonAdapter" as ShortJsonAdapter {
            +ShortJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Short src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Short deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Integer></back>>>\n<<<back:yellow>JsonDeserializer<Integer></back>>>\nIntegerJsonAdapter" as IntegerJsonAdapter {
            +IntegerJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Integer src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Integer deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Long></back>>>\n<<<back:yellow>JsonDeserializer<Long></back>>>\nLongJsonAdapter" as LongJsonAdapter {
            +LongJsonAdapter ()

            +<back:yellow>JsonElement</back> serialize (Long src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            +Long deserialize (<back:yellow>JsonElement</back> json, <back:yellow>Type</back> typeOfT,
                \t<back:yellow>JsonDeserializationContext</back> context)
        }
        +class "<<<back:yellow>JsonSerializer<Throwable></back>>>\nThrowableJsonSerializer" as ThrowableJsonSerializer {
            +ThrowableJsonSerializer ()

            +<back:yellow>JsonElement</back> serialize (Throwable src, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
        }
    }
    package protocol {
        +enum "<s>ContactCardCommonProtocol</s>" as ContactCardCommonProtocol {
            <s>ISO_7816_3
            <s>ISO_7816_3_TO
            <s>ISO_7816_3_T1
            <s>INNOVATRON_HIGH_SPEED_PROTOCOL_SAM
        }
        +enum "<s>ContactlessCardCommonProtocol</s>" as ContactlessCardCommonProtocol {
            <s>ISO_14443_4
            <s>NFC_A_ISO_14443_3A
            <s>NFC_B_ISO_14443_3B
            <s>NFC_F_JIS_6319_4
            <s>NFC_V_ISO_15693
            <s>INNOVATRON_B_PRIME_CARD
        }
    }
}



ByteArrayUtil -[hidden]- JsonUtil

Assert -[hidden]- ByteArrayUtil
Assert -[hidden]- ApduUtil
Assert -[hidden]- BerTlvUtil


package util #F8F9F9 {}
package json #F2F3F4 {}
package protocol #F2F3F4 {}

@enduml

PlantUML version 1.2022.5(Sat Apr 30 12:55:52 CEST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: fr
Country: FR
--></g></svg>